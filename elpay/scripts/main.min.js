'use strict';
var _typeof = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function (e) {
        return typeof e;
    } : function (e) {
        return e && 'function' == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e;
    };
!function (e) {
    'function' == typeof define && define.amd ? define('inputmask', ["inputmask.dependencyLib"], e) : 'object' === ('undefined' == typeof exports ? 'undefined' : _typeof(exports)) ? module.exports = e(require('./inputmask.dependencyLib')) : e(window.dependencyLib || jQuery);
}(function (e) {
    function t(i, a, o) {
        return this instanceof t ? (this.el = void 0, this.events = {}, this.maskset = void 0, this.refreshValue = !1, void (o !== !0 && (e.isPlainObject(i) ? a = i : (a = a || {}, a.alias = i), this.opts = e.extend(!0, {}, this.defaults, a), this.noMasksCache = a && void 0 !== a.definitions, this.userOptions = a || {}, this.isRTL = this.opts.numericInput, n(this.opts.alias, a, this.opts)))) : new t(i, a, o);
    }
    function n(i, a, o) {
        var r = t.prototype.aliases[i];
        return r ? (r.alias && n(r.alias, void 0, o), e.extend(!0, o, r), e.extend(!0, o, a), !0) : (null === o.mask && (o.mask = i), !1);
    }
    function i(n, i) {
        function a(n, a, o) {
            if (null !== n && '' !== n) {
                if (1 === n.length && o.greedy === !1 && 0 !== o.repeat && (o.placeholder = ''), o.repeat > 0 || '*' === o.repeat || '+' === o.repeat) {
                    var r = '*' === o.repeat ? 0 : '+' === o.repeat ? 1 : o.repeat;
                    n = o.groupmarker.start + n + o.groupmarker.end + o.quantifiermarker.start + r + ',' + o.repeat + o.quantifiermarker.end;
                }
                var s;
                return void 0 === t.prototype.masksCache[n] || i === !0 ? (s = {
                    mask: n,
                    maskToken: t.prototype.analyseMask(n, o),
                    validPositions: {},
                    _buffer: void 0,
                    buffer: void 0,
                    tests: {},
                    metadata: a,
                    maskLength: void 0
                }, i !== !0 && (t.prototype.masksCache[o.numericInput ? n.split('').reverse().join('') : n] = s, s = e.extend(!0, {}, t.prototype.masksCache[o.numericInput ? n.split('').reverse().join('') : n]))) : s = e.extend(!0, {}, t.prototype.masksCache[o.numericInput ? n.split('').reverse().join('') : n]), s;
            }
        }
        var o;
        if (e.isFunction(n.mask) && (n.mask = n.mask(n)), e.isArray(n.mask)) {
            if (n.mask.length > 1) {
                n.keepStatic = null === n.keepStatic || n.keepStatic;
                var r = n.groupmarker.start;
                return e.each(n.numericInput ? n.mask.reverse() : n.mask, function (t, i) {
                    r.length > 1 && (r += n.groupmarker.end + n.alternatormarker + n.groupmarker.start), r += void 0 === i.mask || e.isFunction(i.mask) ? i : i.mask;
                }), r += n.groupmarker.end, a(r, n.mask, n);
            }
            n.mask = n.mask.pop();
        }
        return n.mask && (o = void 0 === n.mask.mask || e.isFunction(n.mask.mask) ? a(n.mask, n.mask, n) : a(n.mask.mask, n.mask, n)), o;
    }
    function a(n, i, o) {
        function c(e, t, n) {
            t = t || 0;
            var i, a, r, s = [], u = 0, l = p();
            U = void 0 !== Q ? Q.maxLength : void 0, U === -1 && (U = void 0);
            do
                e === !0 && f().validPositions[u] ? (r = f().validPositions[u], a = r.match, i = r.locator.slice(), s.push(n === !0 ? r.input : n === !1 ? a.nativeDef : S(u, a))) : (r = m(u, i, u - 1), a = r.match, i = r.locator.slice(), (o.jitMasking === !1 || u < l || 'number' == typeof o.jitMasking && isFinite(o.jitMasking) && o.jitMasking > u) && s.push(n === !1 ? a.nativeDef : S(u, a))), u++;
            while ((void 0 === U || u < U) && (null !== a.fn || '' !== a.def) || t > u);
            return '' === s[s.length - 1] && s.pop(), f().maskLength = u + 1, s;
        }
        function f() {
            return i;
        }
        function d(e) {
            var t = f();
            t.buffer = void 0, e !== !0 && (t._buffer = void 0, t.validPositions = {}, t.p = 0);
        }
        function p(e, t, n) {
            var i = -1, a = -1, o = n || f().validPositions;
            void 0 === e && (e = -1);
            for (var r in o) {
                var s = parseInt(r);
                o[s] && (t || o[s].generatedInput !== !0) && (s <= e && (i = s), s >= e && (a = s));
            }
            return i !== -1 && e - i > 1 || a < e ? i : a;
        }
        function h(t, n, i, a) {
            function r(e) {
                var t = f().validPositions[e];
                if (void 0 !== t && null === t.match.fn) {
                    var n = f().validPositions[e - 1], i = f().validPositions[e + 1];
                    return void 0 !== n && void 0 !== i;
                }
                return !1;
            }
            var s, u = t, l = e.extend(!0, {}, f().validPositions), c = !1;
            for (f().p = t, s = n - 1; s >= u; s--)
                void 0 !== f().validPositions[s] && (i !== !0 && (!f().validPositions[s].match.optionality && r(s) || o.canClearPosition(f(), s, p(), a, o) === !1) || delete f().validPositions[s]);
            for (d(!0), s = u + 1; s <= p();) {
                for (; void 0 !== f().validPositions[u];)
                    u++;
                if (s < u && (s = u + 1), void 0 === f().validPositions[s] && w(s))
                    s++;
                else {
                    var h = m(s);
                    c === !1 && l[u] && l[u].match.def === h.match.def ? (f().validPositions[u] = e.extend(!0, {}, l[u]), f().validPositions[u].input = h.input, delete f().validPositions[s], s++) : g(u, h.match.def) ? D(u, h.input || S(s), !0) !== !1 && (delete f().validPositions[s], s++, c = !0) : w(s) || (s++, u--), u++;
                }
            }
            d(!0);
        }
        function v(e, t) {
            for (var n, i = e, a = p(), r = f().validPositions[a] || y(0)[0], s = void 0 !== r.alternation ? r.locator[r.alternation].toString().split(',') : [], u = 0; u < i.length && (n = i[u], !(n.match && (o.greedy && n.match.optionalQuantifier !== !0 || (n.match.optionality === !1 || n.match.newBlockMarker === !1) && n.match.optionalQuantifier !== !0) && (void 0 === r.alternation || r.alternation !== n.alternation || void 0 !== n.locator[r.alternation] && C(n.locator[r.alternation].toString().split(','), s))) || t === !0 && (null !== n.match.fn || /[0-9a-bA-Z]/.test(n.match.def))); u++);
            return n;
        }
        function m(e, t, n) {
            return f().validPositions[e] || v(y(e, t ? t.slice() : t, n));
        }
        function k(e) {
            return f().validPositions[e] ? f().validPositions[e] : y(e)[0];
        }
        function g(e, t) {
            for (var n = !1, i = y(e), a = 0; a < i.length; a++)
                if (i[a].match && i[a].match.def === t) {
                    n = !0;
                    break;
                }
            return n;
        }
        function y(t, n, i) {
            function a(n, i, r, s) {
                function l(r, s, d) {
                    function v(t, n) {
                        var i = 0 === e.inArray(t, n.matches);
                        return i || e.each(n.matches, function (e, a) {
                            if (a.isQuantifier === !0 && (i = v(t, n.matches[e - 1])))
                                return !1;
                        }), i;
                    }
                    function k(t, n, i) {
                        var a, o;
                        return (f().tests[t] || f().validPositions[t]) && e.each(f().tests[t] || [f().validPositions[t]], function (e, t) {
                            var r = void 0 !== i ? i : t.alternation, s = void 0 !== t.locator[r] ? t.locator[r].toString().indexOf(n) : -1;
                            (void 0 === o || s < o) && s !== -1 && (a = t, o = s);
                        }), a ? a.locator.slice((void 0 !== i ? i : a.alternation) + 1) : void 0 !== i ? k(t, n) : void 0;
                    }
                    function g(e, n) {
                        return null === e.match.fn && null !== n.match.fn && n.match.fn.test(e.match.def, f(), t, !1, o, !1);
                    }
                    if (c > 10000)
                        throw 'Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. ' + f().mask;
                    if (c === t && void 0 === r.matches)
                        return p.push({
                            match: r,
                            locator: s.reverse(),
                            cd: m
                        }), !0;
                    if (void 0 !== r.matches) {
                        if (r.isGroup && d !== r) {
                            if (r = l(n.matches[e.inArray(r, n.matches) + 1], s))
                                return !0;
                        } else if (r.isOptional) {
                            var y = r;
                            if (r = a(r, i, s, d)) {
                                if (u = p[p.length - 1].match, !v(u, y))
                                    return !0;
                                h = !0, c = t;
                            }
                        } else if (r.isAlternator) {
                            var b, A = r, E = [], _ = p.slice(), C = s.length, D = i.length > 0 ? i.shift() : -1;
                            if (D === -1 || 'string' == typeof D) {
                                var w, F = c, P = i.slice(), B = [];
                                if ('string' == typeof D)
                                    B = D.split(',');
                                else
                                    for (w = 0; w < A.matches.length; w++)
                                        B.push(w);
                                for (var x = 0; x < B.length; x++) {
                                    if (w = parseInt(B[x]), p = [], i = k(c, w, C) || P.slice(), r = l(A.matches[w] || n.matches[w], [w].concat(s), d) || r, r !== !0 && void 0 !== r && B[B.length - 1] < A.matches.length) {
                                        var S = e.inArray(r, n.matches) + 1;
                                        n.matches.length > S && (r = l(n.matches[S], [S].concat(s.slice(1, s.length)), d), r && (B.push(S.toString()), e.each(p, function (e, t) {
                                            t.alternation = s.length - 1;
                                        })));
                                    }
                                    b = p.slice(), c = F, p = [];
                                    for (var I = 0; I < b.length; I++) {
                                        var T = b[I], M = !1;
                                        T.alternation = T.alternation || C;
                                        for (var O = 0; O < E.length; O++) {
                                            var j = E[O];
                                            if (('string' != typeof D || e.inArray(T.locator[T.alternation].toString(), B) !== -1) && (T.match.def === j.match.def || g(T, j))) {
                                                M = T.match.nativeDef === j.match.nativeDef, T.alternation == j.alternation && j.locator[j.alternation].toString().indexOf(T.locator[T.alternation]) === -1 && (j.locator[j.alternation] = j.locator[j.alternation] + ',' + T.locator[T.alternation], j.alternation = T.alternation, null == T.match.fn && (j.na = j.na || T.locator[T.alternation].toString(), j.na.indexOf(T.locator[T.alternation]) === -1 && (j.na = j.na + ',' + T.locator[T.alternation])));
                                                break;
                                            }
                                        }
                                        M || E.push(T);
                                    }
                                }
                                'string' == typeof D && (E = e.map(E, function (t, n) {
                                    if (isFinite(n)) {
                                        var i, a = t.alternation, o = t.locator[a].toString().split(',');
                                        t.locator[a] = void 0, t.alternation = void 0;
                                        for (var r = 0; r < o.length; r++)
                                            i = e.inArray(o[r], B) !== -1, i && (void 0 !== t.locator[a] ? (t.locator[a] += ',', t.locator[a] += o[r]) : t.locator[a] = parseInt(o[r]), t.alternation = a);
                                        if (void 0 !== t.locator[a])
                                            return t;
                                    }
                                })), p = _.concat(E), c = t, h = p.length > 0, i = P.slice();
                            } else
                                r = l(A.matches[D] || n.matches[D], [D].concat(s), d);
                            if (r)
                                return !0;
                        } else if (r.isQuantifier && d !== n.matches[e.inArray(r, n.matches) - 1])
                            for (var L = r, R = i.length > 0 ? i.shift() : 0; R < (isNaN(L.quantifier.max) ? R + 1 : L.quantifier.max) && c <= t; R++) {
                                var N = n.matches[e.inArray(L, n.matches) - 1];
                                if (r = l(N, [R].concat(s), N)) {
                                    if (u = p[p.length - 1].match, u.optionalQuantifier = R > L.quantifier.min - 1, v(u, N)) {
                                        if (R > L.quantifier.min - 1) {
                                            h = !0, c = t;
                                            break;
                                        }
                                        return !0;
                                    }
                                    return !0;
                                }
                            }
                        else if (r = a(r, i, s, d))
                            return !0;
                    } else
                        c++;
                }
                for (var d = i.length > 0 ? i.shift() : 0; d < n.matches.length; d++)
                    if (n.matches[d].isQuantifier !== !0) {
                        var v = l(n.matches[d], [d].concat(r), s);
                        if (v && c === t)
                            return v;
                        if (c > t)
                            break;
                    }
            }
            function r(t) {
                var n = [];
                return e.isArray(t) || (t = [t]), t.length > 0 && (void 0 === t[0].alternation ? (n = v(t.slice()).locator.slice(), 0 === n.length && (n = t[0].locator.slice())) : e.each(t, function (e, t) {
                    if ('' !== t.def)
                        if (0 === n.length)
                            n = t.locator.slice();
                        else
                            for (var i = 0; i < n.length; i++)
                                t.locator[i] && n[i].toString().indexOf(t.locator[i]) === -1 && (n[i] += ',' + t.locator[i]);
                })), n;
            }
            function s(e) {
                return o.keepStatic && t > 0 && e.length > 1 + ('' === e[e.length - 1].match.def ? 1 : 0) && e[0].match.optionality !== !0 && e[0].match.optionalQuantifier !== !0 && null === e[0].match.fn && !/[0-9a-bA-Z]/.test(e[0].match.def) ? [v(e)] : e;
            }
            var u, l = f().maskToken, c = n ? i : 0, d = n ? n.slice() : [0], p = [], h = !1, m = n ? n.join('') : '';
            if (t > -1) {
                if (void 0 === n) {
                    for (var k, g = t - 1; void 0 === (k = f().validPositions[g] || f().tests[g]) && g > -1;)
                        g--;
                    void 0 !== k && g > -1 && (d = r(k), m = d.join(''), c = g);
                }
                if (f().tests[t] && f().tests[t][0].cd === m)
                    return s(f().tests[t]);
                for (var y = d.shift(); y < l.length; y++) {
                    var b = a(l[y], d, [y]);
                    if (b && c === t || c > t)
                        break;
                }
            }
            return (0 === p.length || h) && p.push({
                match: {
                    fn: null,
                    cardinality: 0,
                    optionality: !0,
                    casing: null,
                    def: '',
                    placeholder: ''
                },
                locator: [],
                cd: m
            }), void 0 !== n && f().tests[t] ? s(e.extend(!0, [], p)) : (f().tests[t] = e.extend(!0, [], p), s(f().tests[t]));
        }
        function b() {
            return void 0 === f()._buffer && (f()._buffer = c(!1, 1), void 0 === f().buffer && f()._buffer.slice()), f()._buffer;
        }
        function A(e) {
            return void 0 !== f().buffer && e !== !0 || (f().buffer = c(!0, p(), !0)), f().buffer;
        }
        function E(e, t, n) {
            var i;
            if (e === !0)
                d(), e = 0, t = n.length;
            else
                for (i = e; i < t; i++)
                    delete f().validPositions[i];
            for (i = e; i < t; i++)
                d(!0), n[i] !== o.skipOptionalPartCharacter && D(i, n[i], !0, !0);
        }
        function _(e, n, i) {
            switch (o.casing || n.casing) {
            case 'upper':
                e = e.toUpperCase();
                break;
            case 'lower':
                e = e.toLowerCase();
                break;
            case 'title':
                var a = f().validPositions[i - 1];
                e = 0 === i || a && a.input === String.fromCharCode(t.keyCode.SPACE) ? e.toUpperCase() : e.toLowerCase();
            }
            return e;
        }
        function C(t, n, i) {
            for (var a, r = o.greedy ? n : n.slice(0, 1), s = !1, u = void 0 !== i ? i.split(',') : [], l = 0; l < u.length; l++)
                (a = t.indexOf(u[l])) !== -1 && t.splice(a, 1);
            for (var c = 0; c < t.length; c++)
                if (e.inArray(t[c], r) !== -1) {
                    s = !0;
                    break;
                }
            return s;
        }
        function D(n, i, a, r, s) {
            function u(e) {
                var t = q ? e.begin - e.end > 1 || e.begin - e.end === 1 && o.insertMode : e.end - e.begin > 1 || e.end - e.begin === 1 && o.insertMode;
                return t && 0 === e.begin && e.end === f().maskLength ? 'full' : t;
            }
            function l(t, i, a) {
                var s = !1;
                return e.each(y(t), function (l, c) {
                    for (var v = c.match, m = i ? 1 : 0, k = '', g = v.cardinality; g > m; g--)
                        k += B(t - (g - 1));
                    if (i && (k += i), A(!0), s = null != v.fn ? v.fn.test(k, f(), t, a, o, u(n)) : (i === v.def || i === o.skipOptionalPartCharacter) && '' !== v.def && {
                            c: S(t, v, !0) || v.def,
                            pos: t
                        }, s !== !1) {
                        var y = void 0 !== s.c ? s.c : i;
                        y = y === o.skipOptionalPartCharacter && null === v.fn ? S(t, v, !0) || v.def : y;
                        var C = t, w = A();
                        if (void 0 !== s.remove && (e.isArray(s.remove) || (s.remove = [s.remove]), e.each(s.remove.sort(function (e, t) {
                                return t - e;
                            }), function (e, t) {
                                h(t, t + 1, !0);
                            })), void 0 !== s.insert && (e.isArray(s.insert) || (s.insert = [s.insert]), e.each(s.insert.sort(function (e, t) {
                                return e - t;
                            }), function (e, t) {
                                D(t.pos, t.c, !0, r);
                            })), s.refreshFromBuffer) {
                            var F = s.refreshFromBuffer;
                            if (a = !0, E(F === !0 ? F : F.start, F.end, w), void 0 === s.pos && void 0 === s.c)
                                return s.pos = p(), !1;
                            if (C = void 0 !== s.pos ? s.pos : t, C !== t)
                                return s = e.extend(s, D(C, y, !0, r)), !1;
                        } else if (s !== !0 && void 0 !== s.pos && s.pos !== t && (C = s.pos, E(t, C, A().slice()), C !== t))
                            return s = e.extend(s, D(C, y, !0)), !1;
                        return (s === !0 || void 0 !== s.pos || void 0 !== s.c) && (l > 0 && d(!0), b(C, e.extend({}, c, { input: _(y, v, C) }), r, u(n)) || (s = !1), !1);
                    }
                }), s;
            }
            function c(t, n, i) {
                var a, s, u, l, c, h, v, m, k = e.extend(!0, {}, f().validPositions), g = !1, b = p();
                for (l = f().validPositions[b]; b >= 0; b--)
                    if (u = f().validPositions[b], u && void 0 !== u.alternation) {
                        if (a = b, s = f().validPositions[a].alternation, l.locator[u.alternation] !== u.locator[u.alternation])
                            break;
                        l = u;
                    }
                if (void 0 !== s) {
                    m = parseInt(a);
                    var A = void 0 !== l.locator[l.alternation || s] ? l.locator[l.alternation || s] : v[0];
                    A.length > 0 && (A = A.split(',')[0]);
                    var E = f().validPositions[m], _ = f().validPositions[m - 1];
                    e.each(y(m, _ ? _.locator : void 0, m - 1), function (a, u) {
                        v = u.locator[s] ? u.locator[s].toString().split(',') : [];
                        for (var l = 0; l < v.length; l++) {
                            var y = [], b = 0, _ = 0, C = !1;
                            if (A < v[l] && (void 0 === u.na || e.inArray(v[l], u.na.split(',')) === -1)) {
                                f().validPositions[m] = e.extend(!0, {}, u);
                                var w = f().validPositions[m].locator;
                                for (f().validPositions[m].locator[s] = parseInt(v[l]), null == u.match.fn ? (E.input !== u.match.def && (C = !0, E.generatedInput !== !0 && y.push(E.input)), _++, f().validPositions[m].generatedInput = !/[0-9a-bA-Z]/.test(u.match.def), f().validPositions[m].input = u.match.def) : f().validPositions[m].input = E.input, c = m + 1; c < p(void 0, !0) + 1; c++)
                                    h = f().validPositions[c], h && h.generatedInput !== !0 && /[0-9a-bA-Z]/.test(h.input) ? y.push(h.input) : c < t && b++, delete f().validPositions[c];
                                for (C && y[0] === u.match.def && y.shift(), d(!0), g = !0; y.length > 0;) {
                                    var F = y.shift();
                                    if (F !== o.skipOptionalPartCharacter && !(g = D(p(void 0, !0) + 1, F, !1, r, !0)))
                                        break;
                                }
                                if (g) {
                                    f().validPositions[m].locator = w;
                                    var P = p(t) + 1;
                                    for (c = m + 1; c < p() + 1; c++)
                                        h = f().validPositions[c], (void 0 === h || null == h.match.fn) && c < t + (_ - b) && _++;
                                    t += _ - b, g = D(t > P ? P : t, n, i, r, !0);
                                }
                                if (g)
                                    return !1;
                                d(), f().validPositions = e.extend(!0, {}, k);
                            }
                        }
                    });
                }
                return g;
            }
            function k(t, n) {
                var i = f().validPositions[n];
                if (i)
                    for (var a = i.locator, o = a.length, r = t; r < n; r++)
                        if (void 0 === f().validPositions[r] && !w(r, !0)) {
                            var s = y(r).slice(), u = v(s, !0), c = -1;
                            '' === s[s.length - 1].match.def && s.pop(), e.each(s, function (e, t) {
                                for (var n = 0; n < o; n++) {
                                    if (void 0 === t.locator[n] || !C(t.locator[n].toString().split(','), a[n].toString().split(','), t.na)) {
                                        var i = a[n], r = u.locator[n], s = t.locator[n];
                                        i - r > Math.abs(i - s) && (u = t);
                                        break;
                                    }
                                    c < n && (c = n, u = t);
                                }
                            }), u = e.extend({}, u, { input: S(r, u.match, !0) || u.match.def }), u.generatedInput = !0, b(r, u, !0), f().validPositions[n] = void 0, l(n, i.input, !0);
                        }
            }
            function b(t, n, i, a) {
                if (a || o.insertMode && void 0 !== f().validPositions[t] && void 0 === i) {
                    var r, s = e.extend(!0, {}, f().validPositions), u = p(void 0, !0);
                    for (r = t; r <= u; r++)
                        delete f().validPositions[r];
                    f().validPositions[t] = e.extend(!0, {}, n);
                    var l, c = !0, h = f().validPositions, v = !1, m = f().maskLength;
                    for (r = l = t; r <= u; r++) {
                        var k = s[r];
                        if (void 0 !== k)
                            for (var y = l; y < f().maskLength && (null === k.match.fn && h[r] && (h[r].match.optionalQuantifier === !0 || h[r].match.optionality === !0) || null != k.match.fn);) {
                                if (y++, v === !1 && s[y] && s[y].match.def === k.match.def)
                                    f().validPositions[y] = e.extend(!0, {}, s[y]), f().validPositions[y].input = k.input, P(y), l = y, c = !0;
                                else if (g(y, k.match.def)) {
                                    var b = D(y, k.input, !0, !0);
                                    c = b !== !1, l = b.caret || b.insert ? p() : y, v = !0;
                                } else if (c = k.generatedInput === !0, !c && y >= f().maskLength - 1)
                                    break;
                                if (f().maskLength < m && (f().maskLength = m), c)
                                    break;
                            }
                        if (!c)
                            break;
                    }
                    if (!c)
                        return f().validPositions = e.extend(!0, {}, s), d(!0), !1;
                } else
                    f().validPositions[t] = e.extend(!0, {}, n);
                return d(!0), !0;
            }
            function P(t) {
                for (var n = t - 1; n > -1 && !f().validPositions[n]; n--);
                var i, a;
                for (n++; n < t; n++)
                    void 0 === f().validPositions[n] && (o.jitMasking === !1 || o.jitMasking > n) && (a = y(n, m(n - 1).locator, n - 1).slice(), '' === a[a.length - 1].match.def && a.pop(), i = v(a), i && (i.match.def === o.radixPointDefinitionSymbol || !w(n, !0) || e.inArray(o.radixPoint, A()) < n && i.match.fn && i.match.fn.test(S(n), f(), n, !1, o)) && (I = l(n, S(n, i.match, !0) || (null == i.match.fn ? i.match.def : '' !== S(n) ? S(n) : A()[n]), !0), I !== !1 && (f().validPositions[I.pos || n].generatedInput = !0)));
            }
            a = a === !0;
            var x = n;
            void 0 !== n.begin && (x = q && !u(n) ? n.end : n.begin);
            var I = !1, T = e.extend(!0, {}, f().validPositions);
            if (P(x), u(n) && (R(void 0, t.keyCode.DELETE, n), x = f().p), x < f().maskLength && (I = l(x, i, a), (!a || r === !0) && I === !1)) {
                var M = f().validPositions[x];
                if (!M || null !== M.match.fn || M.match.def !== i && i !== o.skipOptionalPartCharacter) {
                    if ((o.insertMode || void 0 === f().validPositions[F(x)]) && !w(x, !0))
                        for (var O = x + 1, j = F(x); O <= j; O++)
                            if (I = l(O, i, a), I !== !1) {
                                k(x, void 0 !== I.pos ? I.pos : O), x = O;
                                break;
                            }
                } else
                    I = { caret: F(x) };
            }
            return I === !1 && o.keepStatic && !a && s !== !0 && (I = c(x, i, a)), I === !0 && (I = { pos: x }), e.isFunction(o.postValidation) && I !== !1 && !a && r !== !0 && (I = !!o.postValidation(A(!0), I, o) && I), void 0 === I.pos && (I.pos = x), I === !1 && (d(!0), f().validPositions = e.extend(!0, {}, T)), I;
        }
        function w(e, t) {
            var n;
            if (t ? (n = m(e).match, '' === n.def && (n = k(e).match)) : n = k(e).match, null != n.fn)
                return n.fn;
            if (t !== !0 && e > -1) {
                var i = y(e);
                return i.length > 1 + ('' === i[i.length - 1].match.def ? 1 : 0);
            }
            return !1;
        }
        function F(e, t) {
            var n = f().maskLength;
            if (e >= n)
                return n;
            for (var i = e; ++i < n && (t === !0 && (k(i).match.newBlockMarker !== !0 || !w(i)) || t !== !0 && !w(i)););
            return i;
        }
        function P(e, t) {
            var n, i = e;
            if (i <= 0)
                return 0;
            for (; --i > 0 && (t === !0 && k(i).match.newBlockMarker !== !0 || t !== !0 && !w(i) && (n = y(i), n.length < 2 || 2 === n.length && '' === n[1].match.def)););
            return i;
        }
        function B(e) {
            return void 0 === f().validPositions[e] ? S(e) : f().validPositions[e].input;
        }
        function x(t, n, i, a, r) {
            if (a && e.isFunction(o.onBeforeWrite)) {
                var s = o.onBeforeWrite(a, n, i, o);
                if (s) {
                    if (s.refreshFromBuffer) {
                        var u = s.refreshFromBuffer;
                        E(u === !0 ? u : u.start, u.end, s.buffer || n), n = A(!0);
                    }
                    void 0 !== i && (i = void 0 !== s.caret ? s.caret : i);
                }
            }
            t.inputmask._valueSet(n.join('')), void 0 === i || void 0 !== a && 'blur' === a.type ? V(t, n, i) : M(t, i), r === !0 && (z = !0, e(t).trigger('input'));
        }
        function S(t, n, i) {
            if (n = n || k(t).match, void 0 !== n.placeholder || i === !0)
                return e.isFunction(n.placeholder) ? n.placeholder(o) : n.placeholder;
            if (null === n.fn) {
                if (t > -1 && void 0 === f().validPositions[t]) {
                    var a, r = y(t), s = [];
                    if (r.length > 1 + ('' === r[r.length - 1].match.def ? 1 : 0))
                        for (var u = 0; u < r.length; u++)
                            if (r[u].match.optionality !== !0 && r[u].match.optionalQuantifier !== !0 && (null === r[u].match.fn || void 0 === a || r[u].match.fn.test(a.match.def, f(), t, !0, o) !== !1) && (s.push(r[u]), null === r[u].match.fn && (a = r[u]), s.length > 1 && /[0-9a-bA-Z]/.test(s[0].match.def)))
                                return o.placeholder.charAt(t % o.placeholder.length);
                }
                return n.def;
            }
            return o.placeholder.charAt(t % o.placeholder.length);
        }
        function I(n, i, a, r, s, u) {
            function l() {
                var e = !1, t = b().slice(v, F(v)).join('').indexOf(h);
                if (t !== -1 && !w(v)) {
                    e = !0;
                    for (var n = b().slice(v, v + t), i = 0; i < n.length; i++)
                        if (' ' !== n[i]) {
                            e = !1;
                            break;
                        }
                }
                return e;
            }
            var c = r.slice(), h = '', v = 0, k = void 0;
            if (d(), f().p = F(-1), !a)
                if (o.autoUnmask !== !0) {
                    var g = b().slice(0, F(-1)).join(''), y = c.join('').match(new RegExp('^' + t.escapeRegex(g), 'g'));
                    y && y.length > 0 && (c.splice(0, y.length * g.length), v = F(v));
                } else
                    v = F(v);
            if (e.each(c, function (t, i) {
                    if (void 0 !== i) {
                        var r = new e.Event('keypress');
                        r.which = i.charCodeAt(0), h += i;
                        var s = p(void 0, !0), u = f().validPositions[s], c = m(s + 1, u ? u.locator.slice() : void 0, s);
                        if (!l() || a || o.autoUnmask) {
                            var g = a ? t : null == c.match.fn && c.match.optionality && s + 1 < f().p ? s + 1 : f().p;
                            k = ee.keypressEvent.call(n, r, !0, !1, a, g), v = g + 1, h = '';
                        } else
                            k = ee.keypressEvent.call(n, r, !0, !1, !0, s + 1);
                        if (!a && e.isFunction(o.onBeforeWrite) && (k = o.onBeforeWrite(r, A(), k.forwardPosition, o), k && k.refreshFromBuffer)) {
                            var y = k.refreshFromBuffer;
                            E(y === !0 ? y : y.start, y.end, k.buffer), d(!0), k.caret && (f().p = k.caret);
                        }
                    }
                }), i) {
                var _ = void 0, C = p();
                document.activeElement === n && (s || k) && (_ = M(n).begin, s && k === !1 && (_ = F(p(_))), k && u !== !0 && (_ < C + 1 || C === -1) && (_ = o.numericInput && void 0 === k.caret ? P(k.forwardPosition) : k.forwardPosition)), x(n, A(), _, s || new e.Event('checkval'));
            }
        }
        function T(t) {
            if (t) {
                if (void 0 === t.inputmask)
                    return t.value;
                t.inputmask && t.inputmask.refreshValue && ee.setValueEvent.call(t);
            }
            var n = [], i = f().validPositions;
            for (var a in i)
                i[a].match && null != i[a].match.fn && n.push(i[a].input);
            var r = 0 === n.length ? '' : (q ? n.reverse() : n).join('');
            if (e.isFunction(o.onUnMask)) {
                var s = (q ? A().slice().reverse() : A()).join('');
                r = o.onUnMask(s, r, o) || r;
            }
            return r;
        }
        function M(e, t, n, i) {
            function a(e) {
                if (i !== !0 && q && 'number' == typeof e && (!o.greedy || '' !== o.placeholder)) {
                    var t = A().join('').length;
                    e = t - e;
                }
                return e;
            }
            var s;
            if ('number' != typeof t)
                return e.setSelectionRange ? (t = e.selectionStart, n = e.selectionEnd) : window.getSelection ? (s = window.getSelection().getRangeAt(0), s.commonAncestorContainer.parentNode !== e && s.commonAncestorContainer !== e || (t = s.startOffset, n = s.endOffset)) : document.selection && document.selection.createRange && (s = document.selection.createRange(), t = 0 - s.duplicate().moveStart('character', -e.inputmask._valueGet().length), n = t + s.text.length), {
                    begin: a(t),
                    end: a(n)
                };
            t = a(t), n = a(n), n = 'number' == typeof n ? n : t;
            var u = parseInt(((e.ownerDocument.defaultView || window).getComputedStyle ? (e.ownerDocument.defaultView || window).getComputedStyle(e, null) : e.currentStyle).fontSize) * n;
            if (e.scrollLeft = u > e.scrollWidth ? u : 0, r || o.insertMode !== !1 || t !== n || n++, e.setSelectionRange)
                e.selectionStart = t, e.selectionEnd = n;
            else if (window.getSelection) {
                if (s = document.createRange(), void 0 === e.firstChild || null === e.firstChild) {
                    var l = document.createTextNode('');
                    e.appendChild(l);
                }
                s.setStart(e.firstChild, t < e.inputmask._valueGet().length ? t : e.inputmask._valueGet().length), s.setEnd(e.firstChild, n < e.inputmask._valueGet().length ? n : e.inputmask._valueGet().length), s.collapse(!0);
                var c = window.getSelection();
                c.removeAllRanges(), c.addRange(s);
            } else
                e.createTextRange && (s = e.createTextRange(), s.collapse(!0), s.moveEnd('character', n), s.moveStart('character', t), s.select());
            V(e, void 0, {
                begin: t,
                end: n
            });
        }
        function O(t) {
            var n, i, a = A(), o = a.length, r = p(), s = {}, u = f().validPositions[r], l = void 0 !== u ? u.locator.slice() : void 0;
            for (n = r + 1; n < a.length; n++)
                i = m(n, l, n - 1), l = i.locator.slice(), s[n] = e.extend(!0, {}, i);
            var c = u && void 0 !== u.alternation ? u.locator[u.alternation] : void 0;
            for (n = o - 1; n > r && (i = s[n], (i.match.optionality || i.match.optionalQuantifier || c && (c !== s[n].locator[u.alternation] && null != i.match.fn || null === i.match.fn && i.locator[u.alternation] && C(i.locator[u.alternation].toString().split(','), c.toString().split(',')) && '' !== y(n)[0].def)) && a[n] === S(n, i.match)); n--)
                o--;
            return t ? {
                l: o,
                def: s[o] ? s[o].match : void 0
            } : o;
        }
        function j(e) {
            for (var t, n = O(), i = e.length; n < i && !w(n + 1) && (t = k(n + 1)) && t.match.optionality !== !0 && t.match.optionalQuantifier !== !0;)
                n++;
            for (; (t = k(n - 1)) && t.match.optionality && t.input === o.skipOptionalPartCharacter;)
                n--;
            return e.splice(n), e;
        }
        function L(t) {
            if (e.isFunction(o.isComplete))
                return o.isComplete(t, o);
            if ('*' !== o.repeat) {
                var n = !1, i = O(!0), a = P(i.l);
                if (void 0 === i.def || i.def.newBlockMarker || i.def.optionality || i.def.optionalQuantifier) {
                    n = !0;
                    for (var r = 0; r <= a; r++) {
                        var s = m(r).match;
                        if (null !== s.fn && void 0 === f().validPositions[r] && s.optionality !== !0 && s.optionalQuantifier !== !0 || null === s.fn && t[r] !== S(r, s)) {
                            n = !1;
                            break;
                        }
                    }
                }
                return n;
            }
        }
        function R(n, i, a, r) {
            function s() {
                if (o.keepStatic) {
                    for (var t = [], i = p(-1, !0), a = e.extend(!0, {}, f().validPositions), r = f().validPositions[i]; i >= 0; i--) {
                        var s = f().validPositions[i];
                        if (s) {
                            if (s.generatedInput !== !0 && /[0-9a-bA-Z]/.test(s.input) && t.push(s.input), delete f().validPositions[i], void 0 !== s.alternation && s.locator[s.alternation] !== r.locator[s.alternation])
                                break;
                            r = s;
                        }
                    }
                    if (i > -1)
                        for (f().p = F(p(-1, !0)); t.length > 0;) {
                            var u = new e.Event('keypress');
                            u.which = t.pop().charCodeAt(0), ee.keypressEvent.call(n, u, !0, !1, !1, f().p);
                        }
                    else
                        f().validPositions = e.extend(!0, {}, a);
                }
            }
            if ((o.numericInput || q) && (i === t.keyCode.BACKSPACE ? i = t.keyCode.DELETE : i === t.keyCode.DELETE && (i = t.keyCode.BACKSPACE), q)) {
                var u = a.end;
                a.end = a.begin, a.begin = u;
            }
            i === t.keyCode.BACKSPACE && (a.end - a.begin < 1 || o.insertMode === !1) ? (a.begin = P(a.begin), void 0 === f().validPositions[a.begin] || f().validPositions[a.begin].input !== o.groupSeparator && f().validPositions[a.begin].input !== o.radixPoint || a.begin--) : i === t.keyCode.DELETE && a.begin === a.end && (a.end = w(a.end, !0) ? a.end + 1 : F(a.end) + 1, void 0 === f().validPositions[a.begin] || f().validPositions[a.begin].input !== o.groupSeparator && f().validPositions[a.begin].input !== o.radixPoint || a.end++), h(a.begin, a.end, !1, r), r !== !0 && s();
            var l = p(a.begin, !0);
            l < a.begin ? f().p = F(l) : r !== !0 && (f().p = a.begin);
        }
        function N(t) {
            function n(e) {
                var n, i = document.createElement('span');
                for (var a in r)
                    isNaN(a) && a.indexOf('font') !== -1 && (i.style[a] = r[a]);
                i.style.textTransform = r.textTransform, i.style.letterSpacing = r.letterSpacing, i.style.position = 'absolute', i.style.height = 'auto', i.style.width = 'auto', i.style.visibility = 'hidden', i.style.whiteSpace = 'nowrap', document.body.appendChild(i);
                var o, s = t.inputmask._valueGet(), u = 0;
                for (n = 0, o = s.length; n <= o; n++) {
                    if (i.innerHTML += s.charAt(n) || '_', i.offsetWidth >= e) {
                        var l = e - u, c = i.offsetWidth - e;
                        i.innerHTML = s.charAt(n), l -= i.offsetWidth / 3, n = l < c ? n - 1 : n;
                        break;
                    }
                    u = i.offsetWidth;
                }
                return document.body.removeChild(i), n;
            }
            function i() {
                K.style.position = 'absolute', K.style.top = a.top + 'px', K.style.left = a.left + 'px', K.style.width = parseInt(t.offsetWidth) - parseInt(r.paddingLeft) - parseInt(r.paddingRight) - parseInt(r.borderLeftWidth) - parseInt(r.borderRightWidth) + 'px', K.style.height = parseInt(t.offsetHeight) - parseInt(r.paddingTop) - parseInt(r.paddingBottom) - parseInt(r.borderTopWidth) - parseInt(r.borderBottomWidth) + 'px', K.style.lineHeight = K.style.height, K.style.zIndex = isNaN(r.zIndex) ? -1 : r.zIndex - 1, K.style.webkitAppearance = 'textfield', K.style.mozAppearance = 'textfield', K.style.Appearance = 'textfield';
            }
            var a = e(t).position(), r = (t.ownerDocument.defaultView || window).getComputedStyle(t, null);
            t.parentNode;
            K = document.createElement('div'), document.body.appendChild(K);
            for (var s in r)
                isNaN(s) && 'cssText' !== s && s.indexOf('webkit') == -1 && (K.style[s] = r[s]);
            t.style.backgroundColor = 'transparent', t.style.color = 'transparent', t.style.webkitAppearance = 'caret', t.style.mozAppearance = 'caret', t.style.Appearance = 'caret', i(), e(window).on('resize', function (n) {
                a = e(t).position(), r = (t.ownerDocument.defaultView || window).getComputedStyle(t, null), i();
            }), e(t).on('click', function (e) {
                return M(t, n(e.clientX)), ee.clickEvent.call(this, [e]);
            }), e(t).on('keydown', function (e) {
                e.shiftKey || o.insertMode === !1 || setTimeout(function () {
                    V(t);
                }, 0);
            });
        }
        function V(e, t, n) {
            function i() {
                r || null !== u.fn && void 0 !== l.input ? r && null !== u.fn && void 0 !== l.input && (r = !1, a += '</span>') : (r = !0, a += '<span class=\'im-static\'\'>');
            }
            if (void 0 !== K) {
                t = t || A(), void 0 === n ? n = M(e) : void 0 === n.begin && (n = {
                    begin: n,
                    end: n
                });
                var a = '', r = !1;
                if ('' != t) {
                    var s, u, l, c = 0, d = p();
                    do
                        c === n.begin && document.activeElement === e && (a += '<span class=\'im-caret\' style=\'border-right-width: 1px;border-right-style: solid;\'></span>'), f().validPositions[c] ? (l = f().validPositions[c], u = l.match, s = l.locator.slice(), i(), a += l.input) : (l = m(c, s, c - 1), u = l.match, s = l.locator.slice(), (o.jitMasking === !1 || c < d || 'number' == typeof o.jitMasking && isFinite(o.jitMasking) && o.jitMasking > c) && (i(), a += S(c, u))), c++;
                    while ((void 0 === U || c < U) && (null !== u.fn || '' !== u.def) || d > c);
                }
                K.innerHTML = a;
            }
        }
        function G(t) {
            function n(t, n) {
                function i(t) {
                    function i(t) {
                        if (e.valHooks && (void 0 === e.valHooks[t] || e.valHooks[t].inputmaskpatch !== !0)) {
                            var i = e.valHooks[t] && e.valHooks[t].get ? e.valHooks[t].get : function (e) {
                                    return e.value;
                                }, a = e.valHooks[t] && e.valHooks[t].set ? e.valHooks[t].set : function (e, t) {
                                    return e.value = t, e;
                                };
                            e.valHooks[t] = {
                                get: function (e) {
                                    if (e.inputmask) {
                                        if (e.inputmask.opts.autoUnmask)
                                            return e.inputmask.unmaskedvalue();
                                        var t = i(e);
                                        return p(void 0, void 0, e.inputmask.maskset.validPositions) !== -1 || n.nullable !== !0 ? t : '';
                                    }
                                    return i(e);
                                },
                                set: function (t, n) {
                                    var i, o = e(t);
                                    return i = a(t, n), t.inputmask && o.trigger('setvalue'), i;
                                },
                                inputmaskpatch: !0
                            };
                        }
                    }
                    function a() {
                        return this.inputmask ? this.inputmask.opts.autoUnmask ? this.inputmask.unmaskedvalue() : p() !== -1 || n.nullable !== !0 ? document.activeElement === this && n.clearMaskOnLostFocus ? (q ? j(A().slice()).reverse() : j(A().slice())).join('') : s.call(this) : '' : s.call(this);
                    }
                    function o(t) {
                        u.call(this, t), this.inputmask && e(this).trigger('setvalue');
                    }
                    function r(t) {
                        J.on(t, 'mouseenter', function (t) {
                            var n = e(this), i = this, a = i.inputmask._valueGet();
                            a !== A().join('') && n.trigger('setvalue');
                        });
                    }
                    var s, u;
                    if (!t.inputmask.__valueGet) {
                        if (n.noValuePatching !== !0) {
                            if (Object.getOwnPropertyDescriptor) {
                                'function' != typeof Object.getPrototypeOf && (Object.getPrototypeOf = 'object' === _typeof('test'.__proto__) ? function (e) {
                                    return e.__proto__;
                                } : function (e) {
                                    return e.constructor.prototype;
                                });
                                var l = Object.getPrototypeOf ? Object.getOwnPropertyDescriptor(Object.getPrototypeOf(t), 'value') : void 0;
                                l && l.get && l.set ? (s = l.get, u = l.set, Object.defineProperty(t, 'value', {
                                    get: a,
                                    set: o,
                                    configurable: !0
                                })) : 'INPUT' !== t.tagName && (s = function () {
                                    return this.textContent;
                                }, u = function (e) {
                                    this.textContent = e;
                                }, Object.defineProperty(t, 'value', {
                                    get: a,
                                    set: o,
                                    configurable: !0
                                }));
                            } else
                                document.__lookupGetter__ && t.__lookupGetter__('value') && (s = t.__lookupGetter__('value'), u = t.__lookupSetter__('value'), t.__defineGetter__('value', a), t.__defineSetter__('value', o));
                            t.inputmask.__valueGet = s, t.inputmask.__valueSet = u;
                        }
                        t.inputmask._valueGet = function (e) {
                            return q && e !== !0 ? s.call(this.el).split('').reverse().join('') : s.call(this.el);
                        }, t.inputmask._valueSet = function (e, t) {
                            u.call(this.el, null === e || void 0 === e ? '' : t !== !0 && q ? e.split('').reverse().join('') : e);
                        }, void 0 === s && (s = function () {
                            return this.value;
                        }, u = function (e) {
                            this.value = e;
                        }, i(t.type), r(t));
                    }
                }
                var a = t.getAttribute('type'), o = 'INPUT' === t.tagName && e.inArray(a, n.supportsInputType) !== -1 || t.isContentEditable || 'TEXTAREA' === t.tagName;
                if (!o)
                    if ('INPUT' === t.tagName) {
                        var r = document.createElement('input');
                        r.setAttribute('type', a), o = 'text' === r.type, r = null;
                    } else
                        o = 'partial';
                return o !== !1 && i(t), o;
            }
            J.off(Q);
            var i = n(t, o);
            if (i !== !1 && (Q = t, $ = e(Q), ('rtl' === Q.dir || o.rightAlign) && (Q.style.textAlign = 'right'), ('rtl' === Q.dir || o.numericInput) && (Q.dir = 'ltr', Q.removeAttribute('dir'), Q.inputmask.isRTL = !0, q = !0), o.colorMask === !0 && N(Q), l && (Q.hasOwnProperty('inputmode') && (Q.inputmode = o.inputmode, Q.setAttribute('inputmode', o.inputmode)), 'rtfm' === o.androidHack && (o.colorMask !== !0 && N(Q), Q.type = 'password')), i === !0 && (J.on(Q, 'submit', ee.submitEvent), J.on(Q, 'reset', ee.resetEvent), J.on(Q, 'mouseenter', ee.mouseenterEvent), J.on(Q, 'blur', ee.blurEvent), J.on(Q, 'focus', ee.focusEvent), J.on(Q, 'mouseleave', ee.mouseleaveEvent), o.colorMask !== !0 && J.on(Q, 'click', ee.clickEvent), J.on(Q, 'dblclick', ee.dblclickEvent), J.on(Q, 'paste', ee.pasteEvent), J.on(Q, 'dragdrop', ee.pasteEvent), J.on(Q, 'drop', ee.pasteEvent), J.on(Q, 'cut', ee.cutEvent), J.on(Q, 'complete', o.oncomplete), J.on(Q, 'incomplete', o.onincomplete), J.on(Q, 'cleared', o.oncleared), l && o.inputEventOnly === !0 || (J.on(Q, 'keydown', ee.keydownEvent), J.on(Q, 'keypress', ee.keypressEvent)), J.on(Q, 'compositionstart', e.noop), J.on(Q, 'compositionupdate', e.noop), J.on(Q, 'compositionend', e.noop), J.on(Q, 'keyup', e.noop), J.on(Q, 'input', ee.inputFallBackEvent), J.on(Q, 'beforeinput', e.noop)), J.on(Q, 'setvalue', ee.setValueEvent), b(), '' !== Q.inputmask._valueGet() || o.clearMaskOnLostFocus === !1 || document.activeElement === Q)) {
                var a = e.isFunction(o.onBeforeMask) ? o.onBeforeMask(Q.inputmask._valueGet(), o) || Q.inputmask._valueGet() : Q.inputmask._valueGet();
                I(Q, !0, !1, a.split(''));
                var r = A().slice();
                H = r.join(''), L(r) === !1 && o.clearIncomplete && d(), o.clearMaskOnLostFocus && document.activeElement !== Q && (p() === -1 ? r = [] : j(r)), x(Q, r), document.activeElement === Q && M(Q, F(p()));
            }
        }
        i = i || this.maskset, o = o || this.opts;
        var H, $, U, K, W, Q = this.el, q = this.isRTL, Y = !1, z = !1, Z = !1, X = !1, J = {
                on: function (n, i, a) {
                    var r = function (n) {
                        if (void 0 === this.inputmask && 'FORM' !== this.nodeName) {
                            var i = e.data(this, '_inputmask_opts');
                            i ? new t(i).mask(this) : J.off(this);
                        } else {
                            if ('setvalue' === n.type || 'FORM' === this.nodeName || !(this.disabled || this.readOnly && !('keydown' === n.type && n.ctrlKey && 67 === n.keyCode || o.tabThrough === !1 && n.keyCode === t.keyCode.TAB))) {
                                switch (n.type) {
                                case 'input':
                                    if (z === !0)
                                        return z = !1, n.preventDefault();
                                    break;
                                case 'keydown':
                                    Y = !1, z = !1;
                                    break;
                                case 'keypress':
                                    if (Y === !0)
                                        return n.preventDefault();
                                    Y = !0;
                                    break;
                                case 'click':
                                    if (s || u) {
                                        var r = this, l = arguments;
                                        return setTimeout(function () {
                                            a.apply(r, l);
                                        }, 0), !1;
                                    }
                                }
                                var c = a.apply(this, arguments);
                                return c === !1 && (n.preventDefault(), n.stopPropagation()), c;
                            }
                            n.preventDefault();
                        }
                    };
                    n.inputmask.events[i] = n.inputmask.events[i] || [], n.inputmask.events[i].push(r), e.inArray(i, ["submit","reset"]) !== -1 ? null != n.form && e(n.form).on(i, r) : e(n).on(i, r);
                },
                off: function (t, n) {
                    if (t.inputmask && t.inputmask.events) {
                        var i;
                        n ? (i = [], i[n] = t.inputmask.events[n]) : i = t.inputmask.events, e.each(i, function (n, i) {
                            for (; i.length > 0;) {
                                var a = i.pop();
                                e.inArray(n, ["submit","reset"]) !== -1 ? null != t.form && e(t.form).off(n, a) : e(t).off(n, a);
                            }
                            delete t.inputmask.events[n];
                        });
                    }
                }
            }, ee = {
                keydownEvent: function (n) {
                    function i(e) {
                        var t = document.createElement('input'), n = 'on' + e, i = n in t;
                        return i || (t.setAttribute(n, 'return;'), i = 'function' == typeof t[n]), t = null, i;
                    }
                    var a = this, r = e(a), s = n.keyCode, l = M(a);
                    if (s === t.keyCode.BACKSPACE || s === t.keyCode.DELETE || u && s === t.keyCode.BACKSPACE_SAFARI || n.ctrlKey && s === t.keyCode.X && !i('cut'))
                        n.preventDefault(), R(a, s, l), x(a, A(!0), f().p, n, a.inputmask._valueGet() !== A().join('')), a.inputmask._valueGet() === b().join('') ? r.trigger('cleared') : L(A()) === !0 && r.trigger('complete');
                    else if (s === t.keyCode.END || s === t.keyCode.PAGE_DOWN) {
                        n.preventDefault();
                        var c = F(p());
                        o.insertMode || c !== f().maskLength || n.shiftKey || c--, M(a, n.shiftKey ? l.begin : c, c, !0);
                    } else
                        s === t.keyCode.HOME && !n.shiftKey || s === t.keyCode.PAGE_UP ? (n.preventDefault(), M(a, 0, n.shiftKey ? l.begin : 0, !0)) : (o.undoOnEscape && s === t.keyCode.ESCAPE || 90 === s && n.ctrlKey) && n.altKey !== !0 ? (I(a, !0, !1, H.split('')), r.trigger('click')) : s !== t.keyCode.INSERT || n.shiftKey || n.ctrlKey ? o.tabThrough === !0 && s === t.keyCode.TAB ? (n.shiftKey === !0 ? (null === k(l.begin).match.fn && (l.begin = F(l.begin)), l.end = P(l.begin, !0), l.begin = P(l.end, !0)) : (l.begin = F(l.begin, !0), l.end = F(l.begin, !0), l.end < f().maskLength && l.end--), l.begin < f().maskLength && (n.preventDefault(), M(a, l.begin, l.end))) : n.shiftKey || o.insertMode === !1 && (s === t.keyCode.RIGHT ? setTimeout(function () {
                            var e = M(a);
                            M(a, e.begin);
                        }, 0) : s === t.keyCode.LEFT && setTimeout(function () {
                            var e = M(a);
                            M(a, q ? e.begin + 1 : e.begin - 1);
                        }, 0)) : (o.insertMode = !o.insertMode, M(a, o.insertMode || l.begin !== f().maskLength ? l.begin : l.begin - 1));
                    o.onKeyDown.call(this, n, A(), M(a).begin, o), Z = e.inArray(s, o.ignorables) !== -1;
                },
                keypressEvent: function (n, i, a, r, s) {
                    var u = this, l = e(u), c = n.which || n.charCode || n.keyCode;
                    if (!(i === !0 || n.ctrlKey && n.altKey) && (n.ctrlKey || n.metaKey || Z))
                        return c === t.keyCode.ENTER && H !== A().join('') && (H = A().join(''), setTimeout(function () {
                            l.trigger('change');
                        }, 0)), !0;
                    if (c) {
                        46 === c && n.shiftKey === !1 && '' !== o.radixPoint && (c = o.radixPoint.charCodeAt(0));
                        var p, h = i ? {
                                begin: s,
                                end: s
                            } : M(u), v = String.fromCharCode(c);
                        f().writeOutBuffer = !0;
                        var m = D(h, v, r);
                        if (m !== !1 && (d(!0), p = void 0 !== m.caret ? m.caret : i ? m.pos + 1 : F(m.pos), f().p = p), a !== !1) {
                            var k = this;
                            if (setTimeout(function () {
                                    o.onKeyValidation.call(k, c, m, o);
                                }, 0), f().writeOutBuffer && m !== !1) {
                                var g = A();
                                x(u, g, o.numericInput && void 0 === m.caret ? P(p) : p, n, i !== !0), i !== !0 && setTimeout(function () {
                                    L(g) === !0 && l.trigger('complete');
                                }, 0);
                            }
                        }
                        if (n.preventDefault(), i)
                            return m.forwardPosition = p, m;
                    }
                },
                pasteEvent: function (t) {
                    var n, i = this, a = t.originalEvent || t, r = e(i), s = i.inputmask._valueGet(!0), u = M(i);
                    q && (n = u.end, u.end = u.begin, u.begin = n);
                    var l = s.substr(0, u.begin), c = s.substr(u.end, s.length);
                    if (l === (q ? b().reverse() : b()).slice(0, u.begin).join('') && (l = ''), c === (q ? b().reverse() : b()).slice(u.end).join('') && (c = ''), q && (n = l, l = c, c = n), window.clipboardData && window.clipboardData.getData)
                        s = l + window.clipboardData.getData('Text') + c;
                    else {
                        if (!a.clipboardData || !a.clipboardData.getData)
                            return !0;
                        s = l + a.clipboardData.getData('text/plain') + c;
                    }
                    var f = s;
                    if (e.isFunction(o.onBeforePaste)) {
                        if (f = o.onBeforePaste(s, o), f === !1)
                            return t.preventDefault();
                        f || (f = s);
                    }
                    return I(i, !1, !1, q ? f.split('').reverse() : f.toString().split('')), x(i, A(), F(p()), t, H !== A().join('')), L(A()) === !0 && r.trigger('complete'), t.preventDefault();
                },
                inputFallBackEvent: function (n) {
                    var i = this, a = i.inputmask._valueGet();
                    if (A().join('') !== a) {
                        var o = M(i);
                        if (a = a.replace(new RegExp('(' + t.escapeRegex(b().join('')) + ')*'), ''), s) {
                            var r = a.replace(A().join(''), '');
                            if (1 === r.length) {
                                var u = new e.Event('keypress');
                                return u.which = r.charCodeAt(0), ee.keypressEvent.call(i, u, !0, !0, !1, f().validPositions[o.begin - 1] ? o.begin : o.begin - 1), !1;
                            }
                        }
                        if (o.begin > a.length && (M(i, a.length), o = M(i)), A().length - a.length !== 1 || a.charAt(o.begin) === A()[o.begin] || a.charAt(o.begin + 1) === A()[o.begin] || w(o.begin)) {
                            for (var l = p() + 1, c = b().join(''); null === a.match(t.escapeRegex(c) + '$');)
                                c = c.slice(1);
                            a = a.replace(c, ''), a = a.split(''), I(i, !0, !1, a, n, o.begin < l), L(A()) === !0 && e(i).trigger('complete');
                        } else
                            n.keyCode = t.keyCode.BACKSPACE, ee.keydownEvent.call(i, n);
                        n.preventDefault();
                    }
                },
                setValueEvent: function (t) {
                    this.inputmask.refreshValue = !1;
                    var n = this, i = n.inputmask._valueGet();
                    I(n, !0, !1, (e.isFunction(o.onBeforeMask) ? o.onBeforeMask(i, o) || i : i).split('')), H = A().join(''), (o.clearMaskOnLostFocus || o.clearIncomplete) && n.inputmask._valueGet() === b().join('') && n.inputmask._valueSet('');
                },
                focusEvent: function (e) {
                    var t = this, n = t.inputmask._valueGet();
                    o.showMaskOnFocus && (!o.showMaskOnHover || o.showMaskOnHover && '' === n) && (t.inputmask._valueGet() !== A().join('') ? x(t, A(), F(p())) : X === !1 && M(t, F(p()))), o.positionCaretOnTab === !0 && ee.clickEvent.apply(t, [e,!0]), H = A().join('');
                },
                mouseleaveEvent: function (e) {
                    var t = this;
                    if (X = !1, o.clearMaskOnLostFocus && document.activeElement !== t) {
                        var n = A().slice(), i = t.inputmask._valueGet();
                        i !== t.getAttribute('placeholder') && '' !== i && (p() === -1 && i === b().join('') ? n = [] : j(n), x(t, n));
                    }
                },
                clickEvent: function (t, n) {
                    function i(t) {
                        if ('' !== o.radixPoint) {
                            var n = f().validPositions;
                            if (void 0 === n[t] || n[t].input === S(t)) {
                                if (t < F(-1))
                                    return !0;
                                var i = e.inArray(o.radixPoint, A());
                                if (i !== -1) {
                                    for (var a in n)
                                        if (i < a && n[a].input !== S(a))
                                            return !1;
                                    return !0;
                                }
                            }
                        }
                        return !1;
                    }
                    var a = this;
                    setTimeout(function () {
                        if (document.activeElement === a) {
                            var t = M(a);
                            if (n && (t.begin = t.end), t.begin === t.end)
                                switch (o.positionCaretOnClick) {
                                case 'none':
                                    break;
                                case 'radixFocus':
                                    if (i(t.begin)) {
                                        var r = e.inArray(o.radixPoint, A().join(''));
                                        M(a, o.numericInput ? F(r) : r);
                                        break;
                                    }
                                default:
                                    var s = t.begin, u = p(s, !0), l = F(u);
                                    if (s < l)
                                        M(a, w(s) || w(s - 1) ? s : F(s));
                                    else {
                                        var c = S(l);
                                        ('' !== c && A()[l] !== c && k(l).match.optionalQuantifier !== !0 || !w(l) && k(l).match.def === c) && (l = F(l)), M(a, l);
                                    }
                                }
                        }
                    }, 0);
                },
                dblclickEvent: function (e) {
                    var t = this;
                    setTimeout(function () {
                        M(t, 0, F(p()));
                    }, 0);
                },
                cutEvent: function (n) {
                    var i = this, a = e(i), o = M(i), r = n.originalEvent || n, s = window.clipboardData || r.clipboardData, u = q ? A().slice(o.end, o.begin) : A().slice(o.begin, o.end);
                    s.setData('text', q ? u.reverse().join('') : u.join('')), document.execCommand && document.execCommand('copy'), R(i, t.keyCode.DELETE, o), x(i, A(), f().p, n, H !== A().join('')), i.inputmask._valueGet() === b().join('') && a.trigger('cleared');
                },
                blurEvent: function (t) {
                    var n = e(this), i = this;
                    if (i.inputmask) {
                        var a = i.inputmask._valueGet(), r = A().slice();
                        H !== r.join('') && setTimeout(function () {
                            n.trigger('change'), H = r.join('');
                        }, 0), '' !== a && (o.clearMaskOnLostFocus && (p() === -1 && a === b().join('') ? r = [] : j(r)), L(r) === !1 && (setTimeout(function () {
                            n.trigger('incomplete');
                        }, 0), o.clearIncomplete && (d(), r = o.clearMaskOnLostFocus ? [] : b().slice())), x(i, r, void 0, t));
                    }
                },
                mouseenterEvent: function (e) {
                    var t = this;
                    X = !0, document.activeElement !== t && o.showMaskOnHover && t.inputmask._valueGet() !== A().join('') && x(t, A());
                },
                submitEvent: function (e) {
                    H !== A().join('') && $.trigger('change'), o.clearMaskOnLostFocus && p() === -1 && Q.inputmask._valueGet && Q.inputmask._valueGet() === b().join('') && Q.inputmask._valueSet(''), o.removeMaskOnSubmit && (Q.inputmask._valueSet(Q.inputmask.unmaskedvalue(), !0), setTimeout(function () {
                        x(Q, A());
                    }, 0));
                },
                resetEvent: function (e) {
                    Q.inputmask.refreshValue = !0, setTimeout(function () {
                        $.trigger('setvalue');
                    }, 0);
                }
            };
        if (void 0 !== n)
            switch (n.action) {
            case 'isComplete':
                return Q = n.el, L(A());
            case 'unmaskedvalue':
                return void 0 !== Q && void 0 === n.value || (W = n.value, W = (e.isFunction(o.onBeforeMask) ? o.onBeforeMask(W, o) || W : W).split(''), I(void 0, !1, !1, q ? W.reverse() : W), e.isFunction(o.onBeforeWrite) && o.onBeforeWrite(void 0, A(), 0, o)), T(Q);
            case 'mask':
                G(Q);
                break;
            case 'format':
                return W = (e.isFunction(o.onBeforeMask) ? o.onBeforeMask(n.value, o) || n.value : n.value).split(''), I(void 0, !1, !1, q ? W.reverse() : W), e.isFunction(o.onBeforeWrite) && o.onBeforeWrite(void 0, A(), 0, o), n.metadata ? {
                    value: q ? A().slice().reverse().join('') : A().join(''),
                    metadata: a.call(this, { action: 'getmetadata' }, i, o)
                } : q ? A().slice().reverse().join('') : A().join('');
            case 'isValid':
                n.value ? (W = n.value.split(''), I(void 0, !1, !0, q ? W.reverse() : W)) : n.value = A().join('');
                for (var te = A(), ne = O(), ie = te.length - 1; ie > ne && !w(ie); ie--);
                return te.splice(ne, ie + 1 - ne), L(te) && n.value === A().join('');
            case 'getemptymask':
                return b().join('');
            case 'remove':
                if (Q) {
                    $ = e(Q), Q.inputmask._valueSet(T(Q)), J.off(Q);
                    var ae;
                    Object.getOwnPropertyDescriptor && Object.getPrototypeOf ? (ae = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(Q), 'value'), ae && Q.inputmask.__valueGet && Object.defineProperty(Q, 'value', {
                        get: Q.inputmask.__valueGet,
                        set: Q.inputmask.__valueSet,
                        configurable: !0
                    })) : document.__lookupGetter__ && Q.__lookupGetter__('value') && Q.inputmask.__valueGet && (Q.__defineGetter__('value', Q.inputmask.__valueGet), Q.__defineSetter__('value', Q.inputmask.__valueSet)), Q.inputmask = void 0;
                }
                return Q;
            case 'getmetadata':
                if (e.isArray(i.metadata)) {
                    var oe = c(!0, 0, !1).join('');
                    return e.each(i.metadata, function (e, t) {
                        if (t.mask === oe)
                            return oe = t, !1;
                    }), oe;
                }
                return i.metadata;
            }
    }
    var o = navigator.userAgent, r = /mobile/i.test(o), s = /iemobile/i.test(o), u = /iphone/i.test(o) && !s, l = /android/i.test(o) && !s;
    return t.prototype = {
        dataAttribute: 'data-inputmask',
        defaults: {
            placeholder: '_',
            optionalmarker: {
                start: '[',
                end: ']'
            },
            quantifiermarker: {
                start: '{',
                end: '}'
            },
            groupmarker: {
                start: '(',
                end: ')'
            },
            alternatormarker: '|',
            escapeChar: '\\',
            mask: null,
            oncomplete: e.noop,
            onincomplete: e.noop,
            oncleared: e.noop,
            repeat: 0,
            greedy: !0,
            autoUnmask: !1,
            removeMaskOnSubmit: !1,
            clearMaskOnLostFocus: !0,
            insertMode: !0,
            clearIncomplete: !1,
            alias: null,
            onKeyDown: e.noop,
            onBeforeMask: null,
            onBeforePaste: function (t, n) {
                return e.isFunction(n.onBeforeMask) ? n.onBeforeMask(t, n) : t;
            },
            onBeforeWrite: null,
            onUnMask: null,
            showMaskOnFocus: !0,
            showMaskOnHover: !0,
            onKeyValidation: e.noop,
            skipOptionalPartCharacter: ' ',
            numericInput: !1,
            rightAlign: !1,
            undoOnEscape: !0,
            radixPoint: '',
            radixPointDefinitionSymbol: void 0,
            groupSeparator: '',
            keepStatic: null,
            positionCaretOnTab: !0,
            tabThrough: !1,
            supportsInputType: ["text","tel","password"],
            ignorables: [8,9,13,19,27,33,34,35,36,37,38,39,40,45,46,93,112,113,114,115,116,117,118,119,120,121,122,123,0,229],
            isComplete: null,
            canClearPosition: e.noop,
            postValidation: null,
            staticDefinitionSymbol: void 0,
            jitMasking: !1,
            nullable: !0,
            inputEventOnly: !1,
            noValuePatching: !1,
            positionCaretOnClick: 'lvp',
            casing: null,
            inputmode: 'verbatim',
            colorMask: !1,
            androidHack: !1
        },
        definitions: {
            9: {
                validator: '[0-9]',
                cardinality: 1,
                definitionSymbol: '*'
            },
            a: {
                validator: '[A-Za-z\u0410-\u044F\u0401\u0451\xC0-\xFF\xB5]',
                cardinality: 1,
                definitionSymbol: '*'
            },
            '*': {
                validator: '[0-9A-Za-z\u0410-\u044F\u0401\u0451\xC0-\xFF\xB5]',
                cardinality: 1
            }
        },
        aliases: {},
        masksCache: {},
        mask: function (o) {
            function r(t, i, a, o) {
                function r(e, n) {
                    n = void 0 !== n ? n : t.getAttribute(o + '-' + e), null !== n && ('string' == typeof n && (0 === e.indexOf('on') ? n = window[n] : 'false' === n ? n = !1 : 'true' === n && (n = !0)), a[e] = n);
                }
                var s, u, l, c, f = t.getAttribute(o);
                if (f && '' !== f && (f = f.replace(new RegExp('\'', 'g'), '"'), u = JSON.parse('{' + f + '}')), u) {
                    l = void 0;
                    for (c in u)
                        if ('alias' === c.toLowerCase()) {
                            l = u[c];
                            break;
                        }
                }
                r('alias', l), a.alias && n(a.alias, a, i);
                for (s in i) {
                    if (u) {
                        l = void 0;
                        for (c in u)
                            if (c.toLowerCase() === s.toLowerCase()) {
                                l = u[c];
                                break;
                            }
                    }
                    r(s, l);
                }
                return e.extend(!0, i, a), i;
            }
            var s = this;
            return 'string' == typeof o && (o = document.getElementById(o) || document.querySelectorAll(o)), o = o.nodeName ? [o] : o, e.each(o, function (n, o) {
                var u = e.extend(!0, {}, s.opts);
                r(o, u, e.extend(!0, {}, s.userOptions), s.dataAttribute);
                var l = i(u, s.noMasksCache);
                void 0 !== l && (void 0 !== o.inputmask && o.inputmask.remove(), o.inputmask = new t(void 0, void 0, !0), o.inputmask.opts = u, o.inputmask.noMasksCache = s.noMasksCache, o.inputmask.userOptions = e.extend(!0, {}, s.userOptions), o.inputmask.isRTL = s.isRTL, o.inputmask.el = o, o.inputmask.maskset = l, e.data(o, '_inputmask_opts', u), a.call(o.inputmask, { action: 'mask' }));
            }), o && o[0] ? o[0].inputmask || this : this;
        },
        option: function (t, n) {
            return 'string' == typeof t ? this.opts[t] : 'object' === ('undefined' == typeof t ? 'undefined' : _typeof(t)) ? (e.extend(this.userOptions, t), this.el && n !== !0 && this.mask(this.el), this) : void 0;
        },
        unmaskedvalue: function (e) {
            return this.maskset = this.maskset || i(this.opts, this.noMasksCache), a.call(this, {
                action: 'unmaskedvalue',
                value: e
            });
        },
        remove: function () {
            return a.call(this, { action: 'remove' });
        },
        getemptymask: function () {
            return this.maskset = this.maskset || i(this.opts, this.noMasksCache), a.call(this, { action: 'getemptymask' });
        },
        hasMaskedValue: function () {
            return !this.opts.autoUnmask;
        },
        isComplete: function () {
            return this.maskset = this.maskset || i(this.opts, this.noMasksCache), a.call(this, { action: 'isComplete' });
        },
        getmetadata: function () {
            return this.maskset = this.maskset || i(this.opts, this.noMasksCache), a.call(this, { action: 'getmetadata' });
        },
        isValid: function (e) {
            return this.maskset = this.maskset || i(this.opts, this.noMasksCache), a.call(this, {
                action: 'isValid',
                value: e
            });
        },
        format: function (e, t) {
            return this.maskset = this.maskset || i(this.opts, this.noMasksCache), a.call(this, {
                action: 'format',
                value: e,
                metadata: t
            });
        },
        analyseMask: function (n, i) {
            function a(e, t, n, i) {
                this.matches = [], this.openGroup = e || !1, this.isGroup = e || !1, this.isOptional = t || !1, this.isQuantifier = n || !1, this.isAlternator = i || !1, this.quantifier = {
                    min: 1,
                    max: 1
                };
            }
            function o(e, n, a) {
                var o = (i.definitions ? i.definitions[n] : void 0) || t.prototype.definitions[n];
                a = void 0 !== a ? a : e.matches.length;
                var r = e.matches[a - 1];
                if (o && !k) {
                    for (var s = o.prevalidator, u = s ? s.length : 0, l = 1; l < o.cardinality; l++) {
                        var c = u >= l ? s[l - 1] : [], f = c.validator, d = c.cardinality;
                        e.matches.splice(a++, 0, {
                            fn: f ? 'string' == typeof f ? new RegExp(f) : new function () {
                                this.test = f;
                            }() : new RegExp('.'),
                            cardinality: d ? d : 1,
                            optionality: e.isOptional,
                            newBlockMarker: void 0 === r || r.def !== (o.definitionSymbol || n),
                            casing: o.casing,
                            def: o.definitionSymbol || n,
                            placeholder: o.placeholder,
                            nativeDef: n
                        }), r = e.matches[a - 1];
                    }
                    e.matches.splice(a++, 0, {
                        fn: o.validator ? 'string' == typeof o.validator ? new RegExp(o.validator) : new function () {
                            this.test = o.validator;
                        }() : new RegExp('.'),
                        cardinality: o.cardinality,
                        optionality: e.isOptional,
                        newBlockMarker: void 0 === r || r.def !== (o.definitionSymbol || n),
                        casing: o.casing,
                        def: o.definitionSymbol || n,
                        placeholder: o.placeholder,
                        nativeDef: n
                    });
                } else
                    e.matches.splice(a++, 0, {
                        fn: null,
                        cardinality: 0,
                        optionality: e.isOptional,
                        newBlockMarker: void 0 === r || r.def !== n,
                        casing: null,
                        def: i.staticDefinitionSymbol || n,
                        placeholder: void 0 !== i.staticDefinitionSymbol ? n : void 0,
                        nativeDef: n
                    }), k = !1;
            }
            function r(t) {
                t && t.matches && e.each(t.matches, function (e, n) {
                    var a = t.matches[e + 1];
                    (void 0 === a || void 0 === a.matches || a.isQuantifier === !1) && n && n.isGroup && (n.isGroup = !1, o(n, i.groupmarker.start, 0), n.openGroup !== !0 && o(n, i.groupmarker.end)), r(n);
                });
            }
            function s() {
                if (y.length > 0) {
                    if (d = y[y.length - 1], o(d, c), d.isAlternator) {
                        p = y.pop();
                        for (var e = 0; e < p.matches.length; e++)
                            p.matches[e].isGroup = !1;
                        y.length > 0 ? (d = y[y.length - 1], d.matches.push(p)) : g.matches.push(p);
                    }
                } else
                    o(g, c);
            }
            function u(e) {
                function t(e) {
                    return e === i.optionalmarker.start ? e = i.optionalmarker.end : e === i.optionalmarker.end ? e = i.optionalmarker.start : e === i.groupmarker.start ? e = i.groupmarker.end : e === i.groupmarker.end && (e = i.groupmarker.start), e;
                }
                e.matches = e.matches.reverse();
                for (var n in e.matches)
                    if (e.matches.hasOwnProperty(n)) {
                        var a = parseInt(n);
                        if (e.matches[n].isQuantifier && e.matches[a + 1] && e.matches[a + 1].isGroup) {
                            var o = e.matches[n];
                            e.matches.splice(n, 1), e.matches.splice(a + 1, 0, o);
                        }
                        void 0 !== e.matches[n].matches ? e.matches[n] = u(e.matches[n]) : e.matches[n] = t(e.matches[n]);
                    }
                return e;
            }
            for (var l, c, f, d, p, h, v, m = /(?:[?*+]|\{[0-9\+\*]+(?:,[0-9\+\*]*)?\})|[^.?*+^${[]()|\\]+|./g, k = !1, g = new a(), y = [], b = []; l = m.exec(n);)
                if (c = l[0], k)
                    s();
                else
                    switch (c.charAt(0)) {
                    case i.escapeChar:
                        k = !0;
                        break;
                    case i.optionalmarker.end:
                    case i.groupmarker.end:
                        if (f = y.pop(), f.openGroup = !1, void 0 !== f)
                            if (y.length > 0) {
                                if (d = y[y.length - 1], d.matches.push(f), d.isAlternator) {
                                    p = y.pop();
                                    for (var A = 0; A < p.matches.length; A++)
                                        p.matches[A].isGroup = !1;
                                    y.length > 0 ? (d = y[y.length - 1], d.matches.push(p)) : g.matches.push(p);
                                }
                            } else
                                g.matches.push(f);
                        else
                            s();
                        break;
                    case i.optionalmarker.start:
                        y.push(new a(!1, !0));
                        break;
                    case i.groupmarker.start:
                        y.push(new a(!0));
                        break;
                    case i.quantifiermarker.start:
                        var E = new a(!1, !1, !0);
                        c = c.replace(/[{}]/g, '');
                        var _ = c.split(','), C = isNaN(_[0]) ? _[0] : parseInt(_[0]), D = 1 === _.length ? C : isNaN(_[1]) ? _[1] : parseInt(_[1]);
                        if ('*' !== D && '+' !== D || (C = '*' === D ? 0 : 1), E.quantifier = {
                                min: C,
                                max: D
                            }, y.length > 0) {
                            var w = y[y.length - 1].matches;
                            l = w.pop(), l.isGroup || (v = new a(!0), v.matches.push(l), l = v), w.push(l), w.push(E);
                        } else
                            l = g.matches.pop(), l.isGroup || (v = new a(!0), v.matches.push(l), l = v), g.matches.push(l), g.matches.push(E);
                        break;
                    case i.alternatormarker:
                        y.length > 0 ? (d = y[y.length - 1], h = d.matches.pop()) : h = g.matches.pop(), h.isAlternator ? y.push(h) : (p = new a(!1, !1, !1, !0), p.matches.push(h), y.push(p));
                        break;
                    default:
                        s();
                    }
            for (; y.length > 0;)
                f = y.pop(), g.matches.push(f);
            return g.matches.length > 0 && (r(g), b.push(g)), i.numericInput && u(b[0]), b;
        }
    }, t.extendDefaults = function (n) {
        e.extend(!0, t.prototype.defaults, n);
    }, t.extendDefinitions = function (n) {
        e.extend(!0, t.prototype.definitions, n);
    }, t.extendAliases = function (n) {
        e.extend(!0, t.prototype.aliases, n);
    }, t.format = function (e, n, i) {
        return t(n).format(e, i);
    }, t.unmask = function (e, n) {
        return t(n).unmaskedvalue(e);
    }, t.isValid = function (e, n) {
        return t(n).isValid(e);
    }, t.remove = function (t) {
        e.each(t, function (e, t) {
            t.inputmask && t.inputmask.remove();
        });
    }, t.escapeRegex = function (e) {
        var t = ["/",".","*","+","?","|","(",")","[","]","{","}","\\","$","^"];
        return e.replace(new RegExp('(\\' + t.join('|\\') + ')', 'gim'), '\\$1');
    }, t.keyCode = {
        ALT: 18,
        BACKSPACE: 8,
        BACKSPACE_SAFARI: 127,
        CAPS_LOCK: 20,
        COMMA: 188,
        COMMAND: 91,
        COMMAND_LEFT: 91,
        COMMAND_RIGHT: 93,
        CONTROL: 17,
        DELETE: 46,
        DOWN: 40,
        END: 35,
        ENTER: 13,
        ESCAPE: 27,
        HOME: 36,
        INSERT: 45,
        LEFT: 37,
        MENU: 93,
        NUMPAD_ADD: 107,
        NUMPAD_DECIMAL: 110,
        NUMPAD_DIVIDE: 111,
        NUMPAD_ENTER: 108,
        NUMPAD_MULTIPLY: 106,
        NUMPAD_SUBTRACT: 109,
        PAGE_DOWN: 34,
        PAGE_UP: 33,
        PERIOD: 190,
        RIGHT: 39,
        SHIFT: 16,
        SPACE: 32,
        TAB: 9,
        UP: 38,
        WINDOWS: 91,
        X: 88
    }, window.Inputmask = t, t;
});
var _typeof = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function (e) {
        return typeof e;
    } : function (e) {
        return e && 'function' == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e;
    };
!function (e, t) {
    'object' == ('undefined' == typeof exports ? 'undefined' : _typeof(exports)) && 'undefined' != typeof module ? module.exports = t() : 'function' == typeof define && define.amd ? define(t) : e.imask = t();
}(void 0, function () {
    function e(e) {
        return 'string' == typeof e || e instanceof String;
    }
    function t(t, n) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : '';
        return e(t) ? t : t ? n : i;
    }
    function n(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, i = n.MaskFactory(e, t);
        return i.bindEvents(), i.rawValue = e.value, i;
    }
    var i = function (e, t) {
            if (!(e instanceof t))
                throw new TypeError('Cannot call a class as a function');
        }, a = function () {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var i = t[n];
                    i.enumerable = i.enumerable || !1, i.configurable = !0, 'value' in i && (i.writable = !0), Object.defineProperty(e, i.key, i);
                }
            }
            return function (t, n, i) {
                return n && e(t.prototype, n), i && e(t, i), t;
            };
        }(), o = Object.assign || function (e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var i in n)
                    Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
            }
            return e;
        }, r = function h(e, t, n) {
            null === e && (e = Function.prototype);
            var i = Object.getOwnPropertyDescriptor(e, t);
            if (void 0 === i) {
                var a = Object.getPrototypeOf(e);
                return null === a ? void 0 : h(a, t, n);
            }
            if ('value' in i)
                return i.value;
            var o = i.get;
            return void 0 !== o ? o.call(n) : void 0;
        }, s = function (e, t) {
            if ('function' != typeof t && null !== t)
                throw new TypeError('Super expression must either be null or a function, not ' + ('undefined' == typeof t ? 'undefined' : _typeof(t)));
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);
        }, u = function (e, t) {
            if (!e)
                throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
            return !t || 'object' != ('undefined' == typeof t ? 'undefined' : _typeof(t)) && 'function' != typeof t ? e : t;
        }, l = function () {
            function e(e, t) {
                var n = [], i = !0, a = !1, o = void 0;
                try {
                    for (var r, s = e[Symbol.iterator](); !(i = (r = s.next()).done) && (n.push(r.value), !t || n.length !== t); i = !0);
                } catch (e) {
                    a = !0, o = e;
                } finally {
                    try {
                        !i && s['return'] && s['return']();
                    } finally {
                        if (a)
                            throw o;
                    }
                }
                return n;
            }
            return function (t, n) {
                if (Array.isArray(t))
                    return t;
                if (Symbol.iterator in Object(t))
                    return e(t, n);
                throw new TypeError('Invalid attempt to destructure non-iterable instance');
            };
        }(), c = function () {
            function e(t, n) {
                i(this, e), this.el = t, this.mask = n.mask, this._listeners = {}, this._refreshingCount = 0, this.saveState = this.saveState.bind(this), this.processInput = this.processInput.bind(this), this._onDrop = this._onDrop.bind(this);
            }
            return a(e, [{key:"bindEvents",value:function(){this.el.addEventListener("keydown",this.saveState),this.el.addEventListener("input",this.processInput),this.el.addEventListener("drop",this._onDrop)}},{key:"unbindEvents",value:function(){this.el.removeEventListener("keydown",this.saveState),this.el.removeEventListener("input",this.processInput),this.el.removeEventListener("drop",this._onDrop)}},{key:"destroy",value:function(){this.unbindEvents(),this._listeners.length=0}},{key:"saveState",value:function(e){this._oldRawValue=this.rawValue,this._oldUnmaskedValue=this.unmaskedValue,this._oldSelection={start:this.selectionStart,end:this.cursorPos}}},{key:"_changeState",value:function(e){var n=this;e=o({cursorPos:this.cursorPos,oldSelection:this._oldSelection,oldValue:this._oldRawValue,oldUnmaskedValue:this._oldUnmaskedValue},e);var i=this.rawValue,a=i;return a=t(this.resolve(a,e),a,this._oldRawValue),a!==i&&(this.el.value=a,this.cursorPos=e.cursorPos,setTimeout(function(){return n.cursorPos=e.cursorPos},0)),this._onChangeState(),a}},{key:"_onChangeState",value:function(){this._fireChangeEvents(),this.saveState()}},{key:"_fireChangeEvents",value:function(){this._isChanged&&this.fireEvent("accept")}},{key:"processInput",value:function(e){this._isChanged&&this._changeState()}},{key:"on",value:function(e,t){return this._listeners[e]||(this._listeners[e]=[]),this._listeners[e].push(t),this}},{key:"off",value:function(e,t){if(this._listeners[e]){if(!t)return void delete this._listeners[e];var n=this._listeners[e].indexOf(t);return n>=0&&this._listeners.splice(n,1),this}}},{key:"fireEvent",value:function(e){var t=this._listeners[e]||[];t.forEach(function(e){return e()})}},{key:"resolve",value:function(e,t){return e}},{key:"_onDrop",value:function(e){e.preventDefault(),e.stopPropagation()}},{key:"selectionStart",get:function(){return this.el.selectionStart}},{key:"cursorPos",get:function(){return this.el.selectionEnd},set:function(e){this.el.setSelectionRange(e,e)}},{key:"_isChanged",get:function(){return this.rawValue!==this._oldRawValue||this.unmaskedValue!==this._oldUnmaskedValue}},{key:"rawValue",get:function(){return this.el.value},set:function(e){this.el.value=e,this._changeState({cursorPos:e.length,oldSelection:{start:0,end:e.length},oldValue:e})}},{key:"unmaskedValue",get:function(){return this.rawValue},set:function(e){this.rawValue=e}}]), e;
        }(), f = function (e) {
            function t() {
                return i(this, t), u(this, (t.__proto__ || Object.getPrototypeOf(t)).apply(this, arguments));
            }
            return s(t, e), a(t, [{key:"resolve",value:function(e){return this.mask.test(e)}}]), t;
        }(c), d = function (e) {
            function t() {
                return i(this, t), u(this, (t.__proto__ || Object.getPrototypeOf(t)).apply(this, arguments));
            }
            return s(t, e), a(t, [{key:"resolve",value:function(){return this.mask.apply(this,arguments)}}]), t;
        }(c), p = function (e) {
            function n(e, t) {
                i(this, n);
                var a = u(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, e, t));
                return a._hollows = [], a.placeholder = t.placeholder, a.definitions = o({}, n.DEFINITIONS, t.definitions), a._alignCursor = a._alignCursor.bind(a), a._initialized = !0, a;
            }
            return s(n, e), a(n, [{key:"bindEvents",value:function(){var e=this;r(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"bindEvents",this).call(this),["click","focus"].forEach(function(t){return e.el.addEventListener(t,e._alignCursor)})}},{key:"unbindEvents",value:function(){var e=this;r(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"unbindEvents",this).call(this),["click","focus"].forEach(function(t){return e.el.removeEventListener(t,e._alignCursor)})}},{key:"_installDefinitions",value:function(e){this._definitions=e,this._charDefs=[];var t=this.mask;if(t&&e){for(var i=!1,a=!1,o=0;o<t.length;++o){var r=t[o],s=!i&&r in e?n.DEF_TYPES.INPUT:n.DEF_TYPES.FIXED,u=s===n.DEF_TYPES.INPUT||i,l=s===n.DEF_TYPES.INPUT&&a;if("{"!==r&&"}"!==r)if("["!==r&&"]"!==r){if("\\"===r){if(++o,r=t[o],!r)break;s=n.DEF_TYPES.FIXED}this._charDefs.push({"char":r,type:s,optional:l,unmasking:u})}else a=!a;else i=!i}this._buildResolvers()}}},{key:"_buildResolvers",value:function(){this._resolvers={};for(var e in this.definitions)this._resolvers[e]=IMask.MaskFactory(this.el,{mask:this.definitions[e]})}},{key:"_appendTail",value:function(e,i){for(var a="",o=this._hollows.slice(),r=!1,s=0,u=this._mapPosToDefIndex(e.length);s<i.length;++u){var l=i[s],c=this._charDefs[u];if(!c){r=!0;break}if(c.type===n.DEF_TYPES.INPUT){var f=this._resolvers[c["char"]],d=f.resolve(l,u,e)||"";d?(d=t(d,l),++s):(c.optional||(d=this._placeholder["char"]),o.push(u)),e+=a+d,a=""}else a+=c["char"]}return[e,o,r]}},{key:"_extractInput",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i="",a=0,o=this._mapPosToDefIndex(t);a<e.length&&o<this._charDefs.length;++o){var r=e[a],s=this._charDefs[o];this._isHiddenHollow(o)||(s.type!==n.DEF_TYPES.INPUT||this._isHollow(o)||(i+=r),++a)}return i}},{key:"_isHollow",value:function(e){return this._hollows.indexOf(e)>=0}},{key:"_isHiddenHollow",value:function(e){return this._isHollow(e)&&this._charDefs[e]&&this._charDefs[e].optional}},{key:"_hollowsBefore",value:function(e){var t=this;return this._hollows.filter(function(n){return n<e&&t._isHiddenHollow(n)})}},{key:"_mapDefIndexToPos",value:function(e){return e-this._hollowsBefore(e).length}},{key:"_mapPosToDefIndex",value:function(e){for(var t=e;this._isHiddenHollow(t-1);)++t;return e+this._hollowsBefore(t).length}},{key:"_generateInsertSteps",value:function(e,i){for(var a=e,o=this._hollows.slice(),r="",s=[[a,o.slice()]],u=0,l=this._mapPosToDefIndex(e.length);u<i.length;){var c=this._charDefs[l];if(!c)break;var f=i[u];if(c.type===n.DEF_TYPES.INPUT){var d=this._resolvers[c["char"]],p=d.resolve(f,u,a)||"";p?(a+=r+t(p,f),r="",s.push([a,o.slice()])):c.optional&&o.indexOf(l)<0&&o.push(l),(p||c.optional)&&++l,!p&&c.optional||++u}else r+=c["char"],f===c["char"]&&++u,++l}return s}},{key:"resolve",value:function(e,t){var i=t.cursorPos,a=t.oldSelection,o=t.oldValue,r=Math.min(i,a.start),s=Math.max(a.end-r||o.length-e.length,0),u=i-r,c=e.substring(0,r),f=e.substring(r+u),d=e.substr(r,u),p=this._extractInput(f,r+s),h=this._mapPosToDefIndex(r);this._hollows=this._hollows.filter(function(e){return e<h});for(var v=c,m=this._generateInsertSteps(c,d),k=m.length-1;k>=0;--k){var g,y=l(m[k],2);g=y[0],this._hollows=y[1];var b=this._appendTail(g,p),A=l(b,3),E=A[0],_=A[1],C=A[2];if(!C){var D=[E,_];v=D[0],this._hollows=D[1],i=g.length;break}}if(d){var w=this._appendFixedEnd(v);i+=w.length-v.length,v=w}if(!d&&i===v.length){for(var F=this._mapPosToDefIndex(i-1),P=!1;F>0;--F){var B=this._charDefs[F];if(B.type===n.DEF_TYPES.INPUT){if(!this._isHollow(F))break;P=!0}}P&&(v=v.slice(0,F+1))}return v=this._appendPlaceholderEnd(v),t.cursorPos=i,v}},{key:"_fireChangeEvents",value:function(){r(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"_fireChangeEvents",this).call(this),this._isChanged&&this.isComplete&&this.fireEvent("complete")}},{key:"_appendFixedEnd",value:function(e){for(var t=this._mapPosToDefIndex(e.length);;++t){var i=this._charDefs[t];if(!i)break;if(!this._isHiddenHollow(t)){if(i.type===n.DEF_TYPES.INPUT)break;t>=e.length&&(e+=i["char"])}}return e}},{key:"_appendPlaceholderEnd",value:function(e){for(var t=this._mapPosToDefIndex(e.length);t<this._charDefs.length;++t){var i=this._charDefs[t];i.type!==n.DEF_TYPES.INPUT||this._isHollow(t)||this._hollows.push(t),"always"===this._placeholder.show&&(e+=i.type===n.DEF_TYPES.FIXED?i["char"]:i.optional?"":this._placeholder["char"])}return e}},{key:"_alignCursor",value:function(){for(var e=this._mapPosToDefIndex(this.cursorPos),t=e;t>=0;--t){var i=this._charDefs[t],a=t-1,o=this._charDefs[a];if(!this._isHiddenHollow(a)&&(!i||i.type===n.DEF_TYPES.INPUT&&this._isHollow(t)&&!this._isHiddenHollow(t))&&!this._isHollow(a)&&(e=t,!o||o.type===n.DEF_TYPES.INPUT))break}this.cursorPos=this._mapDefIndexToPos(e)}},{key:"isComplete",get:function(){var e=this;return!this._charDefs.filter(function(t,i){return t.type===n.DEF_TYPES.INPUT&&!t.optional&&e._isHollow(i)}).length}},{key:"unmaskedValue",get:function(){for(var e=this.rawValue,t="",i=0,a=0;i<e.length&&a<this._charDefs.length;++a){var o=e[i],r=this._charDefs[a];this._isHiddenHollow(a)||(r.unmasking&&!this._isHollow(a)&&(r.type===n.DEF_TYPES.INPUT&&this._resolvers[r["char"]].resolve(o,i,e)||r["char"]===o)&&(t+=o),++i)}return t},set:function(e){this._hollows.length=0;var t,n=this._appendTail("",e),i=l(n,2);t=i[0],this._hollows=i[1],this.el.value=this._appendPlaceholderEnd(t),this._onChangeState()}},{key:"placeholder",get:function(){return this._placeholder},set:function(e){this._placeholder=o({},n.DEFAULT_PLACEHOLDER,e),this._initialized&&(this.unmaskedValue=this.unmaskedValue)}},{key:"placeholderLabel",get:function(){var e=this;return this._charDefs.map(function(t){return t.type===n.DEF_TYPES.FIXED?t["char"]:t.optional?"":e._placeholder["char"]}).join("")}},{key:"definitions",get:function(){return this._definitions},set:function(e){this._installDefinitions(e),this._initialized&&(this.unmaskedValue=this.unmaskedValue)}},{key:"mask",get:function(){return this._mask},set:function(e){this._mask=e,this._initialized&&(this.definitions=this.definitions)}}]), n;
        }(c);
    return p.DEFINITIONS = {
        0: /\d/,
        a: /[\u0041-\u005A\u0061-\u007A\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0\u08A2-\u08AC\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097F\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C33\u0C35-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191C\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA697\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA793\uA7A0-\uA7AA\uA7F8-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA80-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
        '*': /./
    }, p.DEF_TYPES = {
        INPUT: 'input',
        FIXED: 'fixed'
    }, p.DEFAULT_PLACEHOLDER = {
        show: 'lazy',
        'char': '_'
    }, n.MaskFactory = function (t, n) {
        var i = n.mask;
        return i instanceof c ? i : i instanceof RegExp ? new f(t, n) : i instanceof Function ? new d(t, n) : e(i) ? new p(t, n) : new c(t, n);
    }, n.BaseMask = c, n.FuncMask = d, n.RegExpMask = f, n.PatternMask = p, window.IMask = n, n;
});
var _typeof = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function (e) {
        return typeof e;
    } : function (e) {
        return e && 'function' == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e;
    };
!function (e) {
    'function' == typeof define && define.amd ? define(["jquery","inputmask"], e) : 'object' === ('undefined' == typeof exports ? 'undefined' : _typeof(exports)) ? module.exports = e(require('jquery'), require('./inputmask')) : e(jQuery, window.Inputmask);
}(function (e, t) {
    return void 0 === e.fn.inputmask && (e.fn.inputmask = function (n, i) {
        var a, o = this[0];
        if (void 0 === i && (i = {}), 'string' == typeof n)
            switch (n) {
            case 'unmaskedvalue':
                return o && o.inputmask ? o.inputmask.unmaskedvalue() : e(o).val();
            case 'remove':
                return this.each(function () {
                    this.inputmask && this.inputmask.remove();
                });
            case 'getemptymask':
                return o && o.inputmask ? o.inputmask.getemptymask() : '';
            case 'hasMaskedValue':
                return !(!o || !o.inputmask) && o.inputmask.hasMaskedValue();
            case 'isComplete':
                return !o || !o.inputmask || o.inputmask.isComplete();
            case 'getmetadata':
                return o && o.inputmask ? o.inputmask.getmetadata() : void 0;
            case 'setvalue':
                e(o).val(i), o && void 0 === o.inputmask && e(o).triggerHandler('setvalue');
                break;
            case 'option':
                if ('string' != typeof i)
                    return this.each(function () {
                        if (void 0 !== this.inputmask)
                            return this.inputmask.option(i);
                    });
                if (o && void 0 !== o.inputmask)
                    return o.inputmask.option(i);
                break;
            default:
                return i.alias = n, a = new t(i), this.each(function () {
                    a.mask(this);
                });
            }
        else {
            if ('object' == ('undefined' == typeof n ? 'undefined' : _typeof(n)))
                return a = new t(n), void 0 === n.mask && void 0 === n.alias ? this.each(function () {
                    return void 0 !== this.inputmask ? this.inputmask.option(n) : void a.mask(this);
                }) : this.each(function () {
                    a.mask(this);
                });
            if (void 0 === n)
                return this.each(function () {
                    a = new t(i), a.mask(this);
                });
        }
    }), e.fn.inputmask;
});
var _typeof = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function (e) {
        return typeof e;
    } : function (e) {
        return e && 'function' == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e;
    };
!function (e) {
    e.browser || (e.browser = {}, e.browser.mozilla = /mozilla/.test(navigator.userAgent.toLowerCase()) && !/webkit/.test(navigator.userAgent.toLowerCase()), e.browser.webkit = /webkit/.test(navigator.userAgent.toLowerCase()), e.browser.opera = /opera/.test(navigator.userAgent.toLowerCase()), e.browser.msie = /msie/.test(navigator.userAgent.toLowerCase()));
    var t = {
            destroy: function () {
                return e(this).unbind('.maskMoney'), e.browser.msie && (this.onpaste = null), this;
            },
            mask: function (t) {
                return this.each(function () {
                    var n = e(this);
                    return 'number' == typeof t && n.val(t), n.trigger('mask');
                });
            },
            unmasked: function () {
                return this.map(function () {
                    var t, n = e(this).val() || '0', i = n.indexOf('-') !== -1;
                    return e(n.split(/\D/).reverse()).each(function (e, n) {
                        if (n)
                            return t = n, !1;
                    }), n = n.replace(/\D/g, ''), n = n.replace(new RegExp(t + '$'), '.' + t), i && (n = '-' + n), parseFloat(n);
                });
            },
            init: function (t) {
                return t = e.extend({
                    prefix: '',
                    suffix: '',
                    affixesStay: !0,
                    thousands: ',',
                    decimal: '.',
                    precision: 2,
                    allowZero: !1,
                    allowNegative: !1
                }, t), this.each(function () {
                    function n() {
                        var e, t, n, i, a, o = b.get(0), r = 0, s = 0;
                        return 'number' == typeof o.selectionStart && 'number' == typeof o.selectionEnd ? (r = o.selectionStart, s = o.selectionEnd) : (t = document.selection.createRange(), t && t.parentElement() === o && (i = o.value.length, e = o.value.replace(/\r\n/g, '\n'), n = o.createTextRange(), n.moveToBookmark(t.getBookmark()), a = o.createTextRange(), a.collapse(!1), n.compareEndPoints('StartToEnd', a) > -1 ? r = s = i : (r = -n.moveStart('character', -i), r += e.slice(0, r).split('\n').length - 1, n.compareEndPoints('EndToEnd', a) > -1 ? s = i : (s = -n.moveEnd('character', -i), s += e.slice(0, s).split('\n').length - 1)))), {
                            start: r,
                            end: s
                        };
                    }
                    function i() {
                        var e = !(b.val().length >= b.attr('maxlength') && b.attr('maxlength') >= 0), t = n(), i = t.start, a = t.end, o = !(t.start === t.end || !b.val().substring(i, a).match(/\d/)), r = '0' === b.val().substring(0, 1);
                        return e || o || r;
                    }
                    function a(e) {
                        b.each(function (t, n) {
                            if (n.setSelectionRange)
                                n.focus(), n.setSelectionRange(e, e);
                            else if (n.createTextRange) {
                                var i = n.createTextRange();
                                i.collapse(!0), i.moveEnd('character', e), i.moveStart('character', e), i.select();
                            }
                        });
                    }
                    function o(e) {
                        var t = '';
                        return e.indexOf('-') > -1 && (e = e.replace('-', ''), t = '-'), t + g.prefix + e + g.suffix;
                    }
                    function r(e) {
                        var t, n, i, a = e.indexOf('-') > -1 && g.allowNegative ? '-' : '', r = e.replace(/[^0-9]/g, ''), s = r.slice(0, r.length - g.precision);
                        return s = s.replace(/^0*/g, ''), s = s.replace(/\B(?=(\d{3})+(?!\d))/g, g.thousands), '' === s && (s = '0'), t = a + s, g.precision > 0 && (n = r.slice(r.length - g.precision), i = new Array(g.precision + 1 - n.length).join(0), t += g.decimal + i + n), o(t);
                    }
                    function s(e) {
                        var t, n = b.val().length;
                        b.val(r(b.val())), t = b.val().length, e -= n - t, a(e);
                    }
                    function u() {
                        var e = b.val();
                        g.precision > 0 && e.indexOf(g.decimal) < 0 && (e += g.decimal + new Array(g.precision + 1).join(0)), b.val(r(e));
                    }
                    function l() {
                        var e = b.val();
                        return g.allowNegative ? '' !== e && '-' === e.charAt(0) ? e.replace('-', '') : '-' + e : e;
                    }
                    function c(e) {
                        e.preventDefault ? e.preventDefault() : e.returnValue = !1;
                    }
                    function f(t) {
                        t = t || window.event;
                        var a, o, r, u, f, d = t.which || t.charCode || t.keyCode;
                        return void 0 !== d && (d < 48 || d > 57 ? 45 === d ? (b.val(l()), !1) : 43 === d ? (b.val(b.val().replace('-', '')), !1) : 13 === d || 9 === d || (!(!e.browser.mozilla || 37 !== d && 39 !== d || 0 !== t.charCode) || (c(t), !0)) : !!i() && (c(t), a = String.fromCharCode(d), o = n(), r = o.start, u = o.end, f = b.val(), b.val(f.substring(0, r) + a + f.substring(u, f.length)), s(r + 1), !1));
                    }
                    function d(e) {
                        e = e || window.event;
                        var t, i, a, o, r, u = e.which || e.charCode || e.keyCode;
                        return void 0 !== u && (t = n(), i = t.start, a = t.end, 8 !== u && 46 !== u && 63272 !== u || (c(e), o = b.val(), i === a && (8 === u ? '' === g.suffix ? i -= 1 : (r = o.split('').reverse().join('').search(/\d/), i = o.length - r - 1, a = i + 1) : a += 1), b.val(o.substring(0, i) + o.substring(a, o.length)), s(i), !1));
                    }
                    function p() {
                        y = b.val(), u();
                        var e, t = b.get(0);
                        t.createTextRange && (e = t.createTextRange(), e.collapse(!1), e.select());
                    }
                    function h() {
                        setTimeout(function () {
                            u();
                        }, 0);
                    }
                    function v() {
                        var e = parseFloat('0') / Math.pow(10, g.precision);
                        return e.toFixed(g.precision).replace(new RegExp('\\.', 'g'), g.decimal);
                    }
                    function m(t) {
                        if (e.browser.msie && f(t), '' === b.val() || b.val() === o(v()))
                            g.allowZero ? g.affixesStay ? b.val(o(v())) : b.val(v()) : b.val('');
                        else if (!g.affixesStay) {
                            var n = b.val().replace(g.prefix, '').replace(g.suffix, '');
                            b.val(n);
                        }
                        b.val() !== y && b.change();
                    }
                    function k() {
                        var e, t = b.get(0);
                        t.setSelectionRange ? (e = b.val().length, t.setSelectionRange(e, e)) : b.val(b.val());
                    }
                    var g, y, b = e(this);
                    g = e.extend({}, t), g = e.extend(g, b.data()), b.unbind('.maskMoney'), b.bind('keypress.maskMoney', f), b.bind('keydown.maskMoney', d), b.bind('blur.maskMoney', m), b.bind('focus.maskMoney', p), b.bind('click.maskMoney', k), b.bind('cut.maskMoney', h), b.bind('paste.maskMoney', h), b.bind('mask.maskMoney', u);
                });
            }
        };
    e.fn.maskMoney = function (n) {
        return t[n] ? t[n].apply(this, Array.prototype.slice.call(arguments, 1)) : 'object' !== ('undefined' == typeof n ? 'undefined' : _typeof(n)) && n ? void e.error('Method ' + n + ' does not exist on jQuery.maskMoney') : t.init.apply(this, arguments);
    };
}(window.jQuery || window.Zepto), $(document).ready(function () {
    function e(e) {
        var t = this || e, n = $(t).closest('.wrap-pay-data'), i = 15 === n.find('.number').val().length, a = !n.find('input.thru').length || n.find('input.thru').length && 4 === n.find('input.thru').val().length, o = !n.find('input.ccv').length || n.find('input.ccv').length && 3 === n.find('input.ccv').val().length;
        i && o && a && parseInt(n.find('input.sum').inputmask('unmaskedvalue')) > 0 ? n.find('button.next').removeClass('disable') : n.find('button.next').addClass('disable');
    }
    $('.back').on('click', function (e) {
        e.preventDefault(), $('body').attr('class', 'home'), $('.main-keyboard').find('.number').focus();
    }), $('.operator-item, .keyboard-logo').on('click', function (e) {
        e.preventDefault(), $('body').attr('class', 'small-keyboard'), $('.small-keyboard').find('.number').focus();
    }), $(document).on('click', '.next.onkeyboard:not(.disable)', function (e) {
        e.preventDefault(), $('body').attr('class', 'check-begin');
    }), $('.next.check').on('click', function (e) {
        e.preventDefault(), $('body').attr('class', 'check-process'), setTimeout(function () {
            var e = Math.random() > 0.5 ? 'check-success' : 'check-error';
            $('body').attr('class', e);
        }, 1000);
    }), $('#nav-icon, .nav-menu-shadow').click(function () {
        $('header').toggleClass('show-menu'), $('.menu-list li:eq(1)').removeClass('help-active'), $('.help-modal').removeClass('show');
    }), $('.showmore').click(function () {
        $(this).toggleClass('show-showmore');
    }), $('ul.nav-top').tabs();
    var t = document.getElementById('number');
    if ($('.inputs-wrap input').on('focus', function () {
            t = this;
        }), $('.show-help').on('click', function (e) {
            e.preventDefault(), $('.help-modal.show').length ? $('header').removeClass('show-menu') : $('header').addClass('show-menu'), $('.menu-list li:eq(1)').toggleClass('help-active'), $('.help-modal').toggleClass('show');
        }), $('#remark').on('click', function (e) {
            e.preventDefault(), $('#remark-text').val(''), $('#remark-text').toggleClass('show'), $('#remark-text').focus();
        }), $('#remark-2').on('click', function (e) {
            e.preventDefault(), $('#remark-text-2').val(''), $('#remark-text-2').toggleClass('show'), $('#remark-text-2').focus();
        }), document.getElementById('number'))
        var n = new IMask(document.getElementById('number'), { mask: '(000)-000-00-00' });
    if (document.getElementById('number-2'))
        var i = new IMask(document.getElementById('number-2'), { mask: '(000)-000-00-00' });
    if (document.getElementById('ccv'))
        var a = new IMask(document.getElementById('ccv'), { mask: '000' });
    if (document.getElementById('thru'))
        var o = new IMask(document.getElementById('thru'), { mask: '0000' });
    $('#sum').maskMoney(), $('#sum-2').maskMoney(), $('.keyboard-wrap .key-inner').on('click', function () {
        var r = {};
        switch (t.id) {
        case 'number':
            r = n;
            break;
        case 'number-2':
            r = i;
            break;
        case 'ccv':
            r = a;
            break;
        case 'thru':
            r = o;
            break;
        case 'sum':
            var s = document.getElementById(t.id).value.split('.')[0] || '0', u = document.getElementById(t.id).value.split('.')[1] || '00', l = s + u[0] + '.' + u[1] + this.innerText;
            document.getElementById(t.id).value = l < 6 ? l : document.getElementById(t.id).value;
            break;
        case 'sum-2':
            var s = document.getElementById(t.id).value.split('.')[0] || '0', u = document.getElementById(t.id).value.split('.')[1] || '00', l = s + u[0] + '.' + u[1] + this.innerText;
            document.getElementById(t.id).value = l < 6 ? l : document.getElementById(t.id).value;
        }
        r.rawValue = r.unmaskedValue + this.innerText, t.focus(), e(this);
    }), $('.inputs-wrap input').on('keyup', e), $('.clear-sum').on('click', function () {
        var e = $(this).siblings('input')[0];
        $(this).closest('.wrap-pay-data').find('button.next').addClass('disable'), e.value = '', e.focus();
    }), $('.bkspace-input').on('click', function () {
        var e = {}, t = $(this).prev()[0];
        switch ($(this).closest('.wrap-pay-data').find('button.next').addClass('disable'), t.id) {
        case 'number':
            e = n;
            break;
        case 'number-2':
            e = i;
        }
        e.rawValue = e.unmaskedValue.slice(0, -1), t.focus();
    });
    var r = document.getElementById('modal-news'), s = document.querySelector('.wrap-table_c-modal'), u = document.querySelector('.close-news-modal');
    u.onclick = function () {
        $(r).addClass('hide-news'), $('.main-keyboard .number').focus();
    }, window.onclick = function (e) {
        e.target == s && ($(r).addClass('hide-news'), $('.main-keyboard .number').focus());
    };
});
//# sourceMappingURL=main.min.js.map
