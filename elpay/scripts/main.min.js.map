{"version":3,"sources":["main.min.js","main.js","inputmask.js","jquery.inputmask.js","jquery.maskMoney.js"],"names":["validateEmail","email","re","test","_typeof","Symbol","iterator","obj","constructor","prototype","factory","define","amd","exports","module","require","window","dependencyLib","jQuery","$","Inputmask","alias","options","internal","this","el","undefined","events","maskset","refreshValue","isPlainObject","opts","extend","defaults","noMasksCache","definitions","userOptions","isRTL","numericInput","resolveAlias","aliasStr","aliasDefinition","aliases","mask","generateMaskSet","nocache","generateMask","metadata","length","greedy","repeat","placeholder","repeatStart","groupmarker","start","end","quantifiermarker","masksetDefinition","masksCache","maskToken","analyseMask","validPositions","_buffer","buffer","tests","maskLength","split","reverse","join","ms","isFunction","isArray","keepStatic","altMask","each","ndx","msk","alternatormarker","pop","maskScope","actionObj","getMaskTemplate","baseOnInput","minimalPos","includeMode","ndxIntlzr","testPos","maskTemplate","pos","lvp","getLastValidPosition","maxLength","getMaskSet","match","locator","slice","push","input","nativeDef","getPlaceholder","getTestTemplate","jitMasking","isFinite","fn","def","resetMaskSet","soft","p","closestTo","strict","before","after","valids","posNdx","psNdx","parseInt","generatedInput","stripValidPositions","nocheck","IsEnclosedStatic","posMatch","prevMatch","nextMatch","i","startPos","positionsClone","needsValidation","optionality","canClearPosition","isMask","t","positionCanMatchDefinition","isValid","determineTestTemplate","guessNextBest","testPositions","lvTest","getTests","lvTestAltArr","alternation","toString","optionalQuantifier","newBlockMarker","checkAlternationMatch","tstPs","getTest","valid","tndx","resolveTestFromToken","ndxInitializer","loopNdx","quantifierRecurse","handleMatch","isFirstMatch","latestMatch","tokenGroup","firstMatch","inArray","matches","isQuantifier","resolveNdxInitializer","alternateNdx","targetAlternation","bestMatch","indexPos","lmnt","ndxPos","indexOf","staticCanMatchDefinition","source","target","cd","cacheDependency","isGroup","isOptional","optionalToken","insertStop","isAlternator","maltMatches","alternateToken","malternateMatches","currentMatches","loopNdxCnt","altIndex","shift","amndx","currentPos","ndxInitializerClone","altIndexArr","concat","ntndx","ndx1","altMatch","hasMatch","ndx2","altMatch2","na","map","mamatch","altLocArr","alndx","qt","qndx","isNaN","quantifier","max","min","mergeLocators","tst","filterTests","maskTokens","previousPos","mtndx","cardinality","casing","getBufferTemplate","getBuffer","noCache","refreshFromBuffer","skipOptionalPartCharacter","elem","toUpperCase","toLowerCase","posBefore","String","fromCharCode","keyCode","SPACE","altArr1","altArr2","naNdx","altArrC","isMatch","naArr","splice","c","fromSetValid","fromAlternate","isSelection","posObj","selection","begin","insertMode","_isValid","position","rslt","loopend","chrs","getBufferElement","validatedPos","possibleModifiedBuffer","remove","sort","a","b","insert","refresh","setValidPosition","alternate","lastAlt","altPos","prevAltPos","validPos","altNdxs","decisionPos","validPsClone","isValidRslt","lAltPos","decisionTaker","possibilityPos","prevPos","mndx","validInputs","staticInputsBeforePos","staticInputsBeforePosAlternate","verifyValidInput","possibilities","targetLvp","trackbackAlternations","originalPos","newPos","vp","targetLocator","tll","ps","equality","targetAI","bestMatchAI","tstAI","Math","abs","validTest","j","vps","initialLength","fillMissingNonMask","result","caret","maskPos","pndx","testTemplate","testsFromPos","radixPointDefinitionSymbol","radixPoint","handleRemove","DELETE","currentPosValid","seekNext","nPos","snPos","postValidation","newBlock","maskL","seekPrevious","writeBuffer","caretPos","event","triggerInputEvent","onBeforeWrite","inputmask","_valueSet","type","renderColorMask","skipInputEvent","trigger","returnPL","prevTest","staticAlternations","charAt","checkVal","writeOut","nptvl","initiatingEvent","stickyCaret","isTemplateMatch","charCodeNdx","initialNdx","charCodes","bufferTemplateArr","inputValue","autoUnmask","staticInput","RegExp","escapeRegex","charCode","keypress","Event","which","charCodeAt","nextTest","EventHandlers","keypressEvent","call","forwardPosition","document","activeElement","unmaskedvalue","value","setValueEvent","umValue","unmaskedValue","onUnMask","bufferValue","notranslate","translatePosition","bffrLght","range","setSelectionRange","selectionStart","selectionEnd","getSelection","getRangeAt","commonAncestorContainer","parentNode","startOffset","endOffset","createRange","duplicate","moveStart","_valueGet","text","scrollCalc","ownerDocument","defaultView","getComputedStyle","currentStyle","fontSize","scrollLeft","scrollWidth","mobile","firstChild","textNode","createTextNode","appendChild","setStart","setEnd","collapse","sel","removeAllRanges","addRange","createTextRange","moveEnd","select","determineLastRequiredPosition","returnDefinition","bl","positions","lvTestAlt","l","clearOptionalTail","rl","isComplete","complete","lrp","aml","k","generalize","BACKSPACE","pend","groupSeparator","initializeColorMask","findCaretPos","clientx","e","createElement","style","computedStyle","textTransform","letterSpacing","height","width","visibility","whiteSpace","body","itl","inputText","previousWidth","innerHTML","offsetWidth","offset1","offset2","removeChild","colorMask","top","offset","left","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","offsetHeight","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","lineHeight","zIndex","webkitAppearance","mozAppearance","Appearance","backgroundColor","color","on","clientX","clickEvent","shiftKey","setTimeout","handleStatic","isStatic","isElementTypeSupported","patchValueProperty","npt","patchValhook","valHooks","inputmaskpatch","valhookGet","get","valhookSet","set","nullable","$elem","getter","clearMaskOnLostFocus","valueGet","setter","valueSet","installNativeValueSetFallback","EventRuler","$input","__valueGet","noValuePatching","Object","getOwnPropertyDescriptor","getPrototypeOf","__proto__","object","valueProperty","defineProperty","configurable","tagName","textContent","__lookupGetter__","__lookupSetter__","__defineGetter__","__defineSetter__","__valueSet","overruleRTL","elementType","getAttribute","isSupported","supportsInputType","isContentEditable","setAttribute","off","$el","dir","rightAlign","textAlign","removeAttribute","android","hasOwnProperty","inputmode","androidHack","submitEvent","resetEvent","mouseenterEvent","blurEvent","focusEvent","mouseleaveEvent","dblclickEvent","pasteEvent","cutEvent","oncomplete","onincomplete","oncleared","inputEventOnly","keydownEvent","noop","inputFallBackEvent","initialValue","onBeforeMask","undoValue","clearIncomplete","valueBuffer","skipKeyPressEvent","ignorable","mouseEnter","eventName","eventHandler","ev","nodeName","imOpts","data","disabled","readOnly","ctrlKey","tabThrough","TAB","preventDefault","iemobile","iphone","that","args","arguments","apply","returnVal","stopPropagation","form","evArr","isInputEventSupported","evName","BACKSPACE_SAFARI","X","END","PAGE_DOWN","HOME","PAGE_UP","undoOnEscape","ESCAPE","altKey","INSERT","RIGHT","LEFT","onKeyDown","ignorables","checkval","metaKey","ENTER","writeOutBuffer","valResult","self","onKeyValidation","tempValue","originalEvent","valueBeforeCaret","substr","valueAfterCaret","clipboardData","getData","pasteValue","onBeforePaste","replace","inputChar","bufferTemplate","nptValue","showMaskOnFocus","showMaskOnHover","positionCaretOnTab","tabbed","doRadixFocus","clickPos","radixPos","selectedCaret","positionCaretOnClick","clickPosition","lvclickPosition","lastPosition","clipData","setData","execCommand","removeMaskOnSubmit","action","lmib","maskTarget","mtdt","ua","navigator","userAgent","dataAttribute","optionalmarker","escapeChar","pastedValue","staticDefinitionSymbol","9","validator","definitionSymbol","*","elems","importAttributeOptions","importOption","option","optionData","dataoptions","attrOptions","JSON","parse","getElementById","querySelectorAll","scopedOpts","noremask","getemptymask","hasMaskedValue","getmetadata","format","MaskToken","openGroup","insertTestDefinition","mtoken","element","maskdef","escaped","prevalidators","prevalidator","prevalidatorsL","verifyGroupMarker","token","nextToken","defaultCase","openenings","currentOpeningToken","m","alternator","currentToken","reverseTokens","reverseStatic","st","intMatch","openingToken","lastMatch","groupToken","tokenizer","exec","mq","mq0","mq1","extendDefaults","extendDefinitions","definition","extendAliases","unmask","str","specials","ALT","CAPS_LOCK","COMMA","COMMAND","COMMAND_LEFT","COMMAND_RIGHT","CONTROL","DOWN","MENU","NUMPAD_ADD","NUMPAD_DECIMAL","NUMPAD_DIVIDE","NUMPAD_ENTER","NUMPAD_MULTIPLY","NUMPAD_SUBTRACT","PERIOD","SHIFT","UP","WINDOWS","nptmask","val","triggerHandler","browser","mozilla","webkit","opera","msie","methods","destroy","unbind","onpaste","$this","unmasked","decimalPart","isNegative","index","parseFloat","init","parameters","prefix","suffix","affixesStay","thousands","decimal","precision","allowZero","allowNegative","getInputSelection","normalizedValue","textInputRange","len","endRange","parentElement","moveToBookmark","getBookmark","compareEndPoints","canInputMoreNumbers","haventReachedMaxLength","attr","haveNumberSelected","substring","startWithZero","setCursorPosition","focus","setSymbol","operator","settings","maskValue","newValue","leadingZeros","negative","onlyNumbers","integerPart","Array","maskAndPosition","newLen","originalLen","changeSign","returnValue","keyPressedChar","endPos","key","lastNumber","search","onFocusValue","textRange","cutPasteEvent","getDefaultMask","n","pow","toFixed","change","bind","maskMoney","method","error","Zepto","ready","u","imask","MaskFactory","bindEvents","rawValue","TypeError","enumerable","writable","s","assign","r","Function","o","create","setPrototypeOf","ReferenceError","next","done","h","_listeners","_refreshingCount","saveState","processInput","_onDrop","addEventListener","removeEventListener","unbindEvents","_oldRawValue","_oldUnmaskedValue","_oldSelection","cursorPos","oldSelection","oldValue","oldUnmaskedValue","resolve","_onChangeState","_fireChangeEvents","_isChanged","fireEvent","_changeState","forEach","A","f","_hollows","DEFINITIONS","_alignCursor","_initialized","_definitions","_charDefs","DEF_TYPES","INPUT","FIXED","char","optional","unmasking","_buildResolvers","_resolvers","IMask","_mapPosToDefIndex","_placeholder","_isHiddenHollow","_isHollow","filter","_hollowsBefore","_extractInput","F","D","E","_generateInsertSteps","_","d","v","_appendTail","B","C","y","g","P","_appendFixedEnd","w","_appendPlaceholderEnd","show","_mapDefIndexToPos","DEFAULT_PLACEHOLDER","_installDefinitions","_mask","0","BaseMask","FuncMask","RegExpMask","PatternMask","addClass","innerWidth","removeClass","Audio","play","currRootTab","inputFocus","allInputTypes","inputRules","inputs","reqCodes","setPayData","find","hide","addKeyToInput","currMask","getCurrMask","hasClass","premoney","cents","allowEnterCents","checkValidFields","validTrue","validSumTrue","id","maskPhone","maskMobContract","maskPayPhone","maskPayContract","maskCard","maskWallet","maskLogin","goFromOtherTab","click","prevLetterKeyboard","touchOnElement","touch","touches","elementFromPoint","pageX","pageY","btnWidth","ruleIdForTimeout","newClassName","random","showModalTimeO","clearTimeout","toggleClass","tabs","inputSum","prev","prevKey","closest","parent","innerText","siblings","modal","wrapModal","querySelector","span","onclick"],"mappings":"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","file":"main.min.js","sourcesContent":["\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*\n * Input Mask Core\n * http://github.com/RobinHerbots/jquery.inputmask\n * Copyright (c) 2010 -\tRobin Herbots\n * Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)\n * Version: 0.0.0-dev\n */\n(function (factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine(\"inputmask\", [\"inputmask.dependencyLib\"], factory);\n\t} else if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === \"object\") {\n\t\tmodule.exports = factory(require(\"./inputmask.dependencyLib\"));\n\t} else {\n\t\tfactory(window.dependencyLib || jQuery);\n\t}\n})(function ($) {\n\tvar ua = navigator.userAgent,\n\t    mobile = /mobile/i.test(ua),\n\t    iemobile = /iemobile/i.test(ua),\n\t    iphone = /iphone/i.test(ua) && !iemobile,\n\t    android = /android/i.test(ua) && !iemobile;\n\n\tfunction Inputmask(alias, options, internal) {\n\t\t//allow instanciating without new\n\t\tif (!(this instanceof Inputmask)) {\n\t\t\treturn new Inputmask(alias, options, internal);\n\t\t}\n\n\t\tthis.el = undefined;\n\t\tthis.events = {};\n\t\tthis.maskset = undefined;\n\t\tthis.refreshValue = false; //indicate a refresh from the inputvalue is needed (form.reset)\n\n\t\tif (internal !== true) {\n\t\t\t//init options\n\t\t\tif ($.isPlainObject(alias)) {\n\t\t\t\toptions = alias;\n\t\t\t} else {\n\t\t\t\toptions = options || {};\n\t\t\t\toptions.alias = alias;\n\t\t\t}\n\t\t\tthis.opts = $.extend(true, {}, this.defaults, options);\n\t\t\tthis.noMasksCache = options && options.definitions !== undefined;\n\t\t\tthis.userOptions = options || {}; //user passed options\n\t\t\tthis.isRTL = this.opts.numericInput;\n\t\t\tresolveAlias(this.opts.alias, options, this.opts);\n\t\t}\n\t}\n\n\tInputmask.prototype = {\n\t\tdataAttribute: \"data-inputmask\", //data attribute prefix used for attribute binding\n\t\t//options default\n\t\tdefaults: {\n\t\t\tplaceholder: \"_\",\n\t\t\toptionalmarker: {\n\t\t\t\tstart: \"[\",\n\t\t\t\tend: \"]\"\n\t\t\t},\n\t\t\tquantifiermarker: {\n\t\t\t\tstart: \"{\",\n\t\t\t\tend: \"}\"\n\t\t\t},\n\t\t\tgroupmarker: {\n\t\t\t\tstart: \"(\",\n\t\t\t\tend: \")\"\n\t\t\t},\n\t\t\talternatormarker: \"|\",\n\t\t\tescapeChar: \"\\\\\",\n\t\t\tmask: null, //needs tobe null instead of undefined as the extend method does not consider props with the undefined value\n\t\t\toncomplete: $.noop, //executes when the mask is complete\n\t\t\tonincomplete: $.noop, //executes when the mask is incomplete and focus is lost\n\t\t\toncleared: $.noop, //executes when the mask is cleared\n\t\t\trepeat: 0, //repetitions of the mask: * ~ forever, otherwise specify an integer\n\t\t\tgreedy: true, //true: allocated buffer for the mask and repetitions - false: allocate only if needed\n\t\t\tautoUnmask: false, //automatically unmask when retrieving the value with $.fn.val or value if the browser supports __lookupGetter__ or getOwnPropertyDescriptor\n\t\t\tremoveMaskOnSubmit: false, //remove the mask before submitting the form.\n\t\t\tclearMaskOnLostFocus: true,\n\t\t\tinsertMode: true, //insert the input or overwrite the input\n\t\t\tclearIncomplete: false, //clear the incomplete input on blur\n\t\t\talias: null,\n\t\t\tonKeyDown: $.noop, //callback to implement autocomplete on certain keys for example. args => event, buffer, caretPos, opts\n\t\t\tonBeforeMask: null, //executes before masking the initial value to allow preprocessing of the initial value.\targs => initialValue, opts => return processedValue\n\t\t\tonBeforePaste: function onBeforePaste(pastedValue, opts) {\n\t\t\t\treturn $.isFunction(opts.onBeforeMask) ? opts.onBeforeMask(pastedValue, opts) : pastedValue;\n\t\t\t}, //executes before masking the pasted value to allow preprocessing of the pasted value.\targs => pastedValue, opts => return processedValue\n\t\t\tonBeforeWrite: null, //executes before writing to the masked element. args => event, opts\n\t\t\tonUnMask: null, //executes after unmasking to allow postprocessing of the unmaskedvalue.\targs => maskedValue, unmaskedValue, opts\n\t\t\tshowMaskOnFocus: true, //show the mask-placeholder when the input has focus\n\t\t\tshowMaskOnHover: true, //show the mask-placeholder when hovering the empty input\n\t\t\tonKeyValidation: $.noop, //executes on every key-press with the result of isValid. Params: key, result, opts\n\t\t\tskipOptionalPartCharacter: \" \", //a character which can be used to skip an optional part of a mask\n\t\t\tnumericInput: false, //numericInput input direction style (input shifts to the left while holding the caret position)\n\t\t\trightAlign: false, //align to the right\n\t\t\tundoOnEscape: true, //pressing escape reverts the value to the value before focus\n\t\t\t//numeric basic properties\n\t\t\tradixPoint: \"\", //\".\", // | \",\"\n\t\t\tradixPointDefinitionSymbol: undefined, //set the radixPoint definitionSymbol ~ used for awareness of the radixpoint\n\t\t\tgroupSeparator: \"\", //\",\", // | \".\"\n\t\t\t//numeric basic properties\n\t\t\tkeepStatic: null, //try to keep the mask static while typing. Decisions to alter the mask will be posponed if possible - null see auto selection for multi masks\n\t\t\tpositionCaretOnTab: true, //when enabled the caret position is set after the latest valid position on TAB\n\t\t\ttabThrough: false, //allows for tabbing through the different parts of the masked field\n\t\t\tsupportsInputType: [\"text\", \"tel\", \"password\"], //list with the supported input types\n\t\t\t//specify keyCodes which should not be considered in the keypress event, otherwise the preventDefault will stop their default behavior especially in FF\n\t\t\tignorables: [8, 9, 13, 19, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 0, 229],\n\t\t\tisComplete: null, //override for isComplete - args => buffer, opts - return true || false\n\t\t\tcanClearPosition: $.noop, //hook to alter the clear behavior in the stripValidPositions args => maskset, position, lastValidPosition, opts => return true|false\n\t\t\tpostValidation: null, //hook to postValidate the result from isValid.\tUsefull for validating the entry as a whole.\targs => buffer, currentResult, opts => return true/false\n\t\t\tstaticDefinitionSymbol: undefined, //specify a definitionSymbol for static content, used to make matches for alternators\n\t\t\tjitMasking: false, //just in time masking ~ only mask while typing, can n (number), true or false\n\t\t\tnullable: true, //return nothing instead of the buffertemplate when the user hasn't entered anything.\n\t\t\tinputEventOnly: false, //dev option - testing inputfallback behavior\n\t\t\tnoValuePatching: false, //dev option - disable value property patching\n\t\t\tpositionCaretOnClick: \"lvp\", //none, lvp (based on the last valid position (default), radixFocus (position caret to radixpoint on initial click)\n\t\t\tcasing: null, //mask-level casing. Options: null, \"upper\", \"lower\" or \"title\"\n\t\t\tinputmode: \"verbatim\", //specify the inputmode  - already in place for when browsers will support it\n\t\t\tcolorMask: false, //enable css styleable mask\n\t\t\tandroidHack: false //see README_android.md\n\t\t},\n\t\tdefinitions: {\n\t\t\t\"9\": {\n\t\t\t\tvalidator: \"[0-9]\",\n\t\t\t\tcardinality: 1,\n\t\t\t\tdefinitionSymbol: \"*\"\n\t\t\t},\n\t\t\t\"a\": {\n\t\t\t\tvalidator: \"[A-Za-z\\u0410-\\u044F\\u0401\\u0451\\xC0-\\xFF\\xB5]\",\n\t\t\t\tcardinality: 1,\n\t\t\t\tdefinitionSymbol: \"*\"\n\t\t\t},\n\t\t\t\"*\": {\n\t\t\t\tvalidator: \"[0-9A-Za-z\\u0410-\\u044F\\u0401\\u0451\\xC0-\\xFF\\xB5]\",\n\t\t\t\tcardinality: 1\n\t\t\t}\n\t\t},\n\t\taliases: {}, //aliases definitions => see jquery.inputmask.extensions.js\n\t\tmasksCache: {},\n\t\tmask: function mask(elems) {\n\t\t\tvar that = this;\n\n\t\t\tfunction importAttributeOptions(npt, opts, userOptions, dataAttribute) {\n\t\t\t\tvar attrOptions = npt.getAttribute(dataAttribute),\n\t\t\t\t    option,\n\t\t\t\t    dataoptions,\n\t\t\t\t    optionData,\n\t\t\t\t    p;\n\n\t\t\t\tfunction importOption(option, optionData) {\n\t\t\t\t\toptionData = optionData !== undefined ? optionData : npt.getAttribute(dataAttribute + \"-\" + option);\n\t\t\t\t\tif (optionData !== null) {\n\t\t\t\t\t\tif (typeof optionData === \"string\") {\n\t\t\t\t\t\t\tif (option.indexOf(\"on\") === 0) optionData = window[optionData]; //get function definition\n\t\t\t\t\t\t\telse if (optionData === \"false\") optionData = false;else if (optionData === \"true\") optionData = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuserOptions[option] = optionData;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (attrOptions && attrOptions !== \"\") {\n\t\t\t\t\tattrOptions = attrOptions.replace(new RegExp(\"'\", \"g\"), '\"');\n\t\t\t\t\tdataoptions = JSON.parse(\"{\" + attrOptions + \"}\");\n\t\t\t\t}\n\n\t\t\t\t//resolve aliases\n\t\t\t\tif (dataoptions) {\n\t\t\t\t\t//pickup alias from dataAttribute\n\t\t\t\t\toptionData = undefined;\n\t\t\t\t\tfor (p in dataoptions) {\n\t\t\t\t\t\tif (p.toLowerCase() === \"alias\") {\n\t\t\t\t\t\t\toptionData = dataoptions[p];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\timportOption(\"alias\", optionData); //pickup alias from dataAttribute-alias\n\t\t\t\tif (userOptions.alias) {\n\t\t\t\t\tresolveAlias(userOptions.alias, userOptions, opts);\n\t\t\t\t}\n\n\t\t\t\tfor (option in opts) {\n\t\t\t\t\tif (dataoptions) {\n\t\t\t\t\t\toptionData = undefined;\n\t\t\t\t\t\tfor (p in dataoptions) {\n\t\t\t\t\t\t\tif (p.toLowerCase() === option.toLowerCase()) {\n\t\t\t\t\t\t\t\toptionData = dataoptions[p];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\timportOption(option, optionData);\n\t\t\t\t}\n\n\t\t\t\t$.extend(true, opts, userOptions);\n\t\t\t\treturn opts;\n\t\t\t}\n\n\t\t\tif (typeof elems === \"string\") {\n\t\t\t\telems = document.getElementById(elems) || document.querySelectorAll(elems);\n\t\t\t}\n\t\t\telems = elems.nodeName ? [elems] : elems;\n\t\t\t$.each(elems, function (ndx, el) {\n\t\t\t\tvar scopedOpts = $.extend(true, {}, that.opts);\n\t\t\t\timportAttributeOptions(el, scopedOpts, $.extend(true, {}, that.userOptions), that.dataAttribute);\n\t\t\t\tvar maskset = generateMaskSet(scopedOpts, that.noMasksCache);\n\t\t\t\tif (maskset !== undefined) {\n\t\t\t\t\tif (el.inputmask !== undefined) {\n\t\t\t\t\t\tel.inputmask.remove();\n\t\t\t\t\t}\n\t\t\t\t\t//store inputmask instance on the input with element reference\n\t\t\t\t\tel.inputmask = new Inputmask(undefined, undefined, true);\n\t\t\t\t\tel.inputmask.opts = scopedOpts;\n\t\t\t\t\tel.inputmask.noMasksCache = that.noMasksCache;\n\t\t\t\t\tel.inputmask.userOptions = $.extend(true, {}, that.userOptions);\n\t\t\t\t\tel.inputmask.isRTL = that.isRTL;\n\t\t\t\t\tel.inputmask.el = el;\n\t\t\t\t\tel.inputmask.maskset = maskset;\n\n\t\t\t\t\t$.data(el, \"_inputmask_opts\", scopedOpts);\n\n\t\t\t\t\tmaskScope.call(el.inputmask, {\n\t\t\t\t\t\t\"action\": \"mask\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn elems && elems[0] ? elems[0].inputmask || this : this;\n\t\t},\n\t\toption: function option(options, noremask) {\n\t\t\t//set extra options || retrieve value of a current option\n\t\t\tif (typeof options === \"string\") {\n\t\t\t\treturn this.opts[options];\n\t\t\t} else if ((typeof options === \"undefined\" ? \"undefined\" : _typeof(options)) === \"object\") {\n\t\t\t\t$.extend(this.userOptions, options); //user passed options\n\t\t\t\t//remask\n\t\t\t\tif (this.el && noremask !== true) {\n\t\t\t\t\tthis.mask(this.el);\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t},\n\t\tunmaskedvalue: function unmaskedvalue(value) {\n\t\t\tthis.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n\t\t\treturn maskScope.call(this, {\n\t\t\t\t\"action\": \"unmaskedvalue\",\n\t\t\t\t\"value\": value\n\t\t\t});\n\t\t},\n\t\tremove: function remove() {\n\t\t\treturn maskScope.call(this, {\n\t\t\t\t\"action\": \"remove\"\n\t\t\t});\n\t\t},\n\t\tgetemptymask: function getemptymask() {\n\t\t\t//return the default (empty) mask value, usefull for setting the default value in validation\n\t\t\tthis.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n\t\t\treturn maskScope.call(this, {\n\t\t\t\t\"action\": \"getemptymask\"\n\t\t\t});\n\t\t},\n\t\thasMaskedValue: function hasMaskedValue() {\n\t\t\t//check wheter the returned value is masked or not; currently only works reliable when using jquery.val fn to retrieve the value\n\t\t\treturn !this.opts.autoUnmask;\n\t\t},\n\t\tisComplete: function isComplete() {\n\t\t\tthis.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n\t\t\treturn maskScope.call(this, {\n\t\t\t\t\"action\": \"isComplete\"\n\t\t\t});\n\t\t},\n\t\tgetmetadata: function getmetadata() {\n\t\t\t//return mask metadata if exists\n\t\t\tthis.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n\t\t\treturn maskScope.call(this, {\n\t\t\t\t\"action\": \"getmetadata\"\n\t\t\t});\n\t\t},\n\t\tisValid: function isValid(value) {\n\t\t\tthis.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n\t\t\treturn maskScope.call(this, {\n\t\t\t\t\"action\": \"isValid\",\n\t\t\t\t\"value\": value\n\t\t\t});\n\t\t},\n\t\tformat: function format(value, metadata) {\n\t\t\tthis.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n\t\t\treturn maskScope.call(this, {\n\t\t\t\t\"action\": \"format\",\n\t\t\t\t\"value\": value,\n\t\t\t\t\"metadata\": metadata //true/false getmetadata\n\t\t\t});\n\t\t},\n\t\tanalyseMask: function analyseMask(mask, opts) {\n\t\t\tvar tokenizer = /(?:[?*+]|\\{[0-9\\+\\*]+(?:,[0-9\\+\\*]*)?\\})|[^.?*+^${[]()|\\\\]+|./g,\n\t\t\t    escaped = false,\n\t\t\t    currentToken = new MaskToken(),\n\t\t\t    match,\n\t\t\t    m,\n\t\t\t    openenings = [],\n\t\t\t    maskTokens = [],\n\t\t\t    openingToken,\n\t\t\t    currentOpeningToken,\n\t\t\t    alternator,\n\t\t\t    lastMatch,\n\t\t\t    groupToken;\n\n\t\t\tfunction MaskToken(isGroup, isOptional, isQuantifier, isAlternator) {\n\t\t\t\tthis.matches = [];\n\t\t\t\tthis.openGroup = isGroup || false;\n\t\t\t\tthis.isGroup = isGroup || false;\n\t\t\t\tthis.isOptional = isOptional || false;\n\t\t\t\tthis.isQuantifier = isQuantifier || false;\n\t\t\t\tthis.isAlternator = isAlternator || false;\n\t\t\t\tthis.quantifier = {\n\t\t\t\t\tmin: 1,\n\t\t\t\t\tmax: 1\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t//test definition => {fn: RegExp/function, cardinality: int, optionality: bool, newBlockMarker: bool, casing: null/upper/lower, def: definitionSymbol, placeholder: placeholder, mask: real maskDefinition}\n\t\t\tfunction insertTestDefinition(mtoken, element, position) {\n\t\t\t\tvar maskdef = (opts.definitions ? opts.definitions[element] : undefined) || Inputmask.prototype.definitions[element];\n\t\t\t\tposition = position !== undefined ? position : mtoken.matches.length;\n\t\t\t\tvar prevMatch = mtoken.matches[position - 1];\n\t\t\t\tif (maskdef && !escaped) {\n\t\t\t\t\tvar prevalidators = maskdef.prevalidator,\n\t\t\t\t\t    prevalidatorsL = prevalidators ? prevalidators.length : 0;\n\t\t\t\t\t//handle prevalidators\n\t\t\t\t\tfor (var i = 1; i < maskdef.cardinality; i++) {\n\t\t\t\t\t\tvar prevalidator = prevalidatorsL >= i ? prevalidators[i - 1] : [],\n\t\t\t\t\t\t    validator = prevalidator.validator,\n\t\t\t\t\t\t    cardinality = prevalidator.cardinality;\n\t\t\t\t\t\tmtoken.matches.splice(position++, 0, {\n\t\t\t\t\t\t\tfn: validator ? typeof validator === \"string\" ? new RegExp(validator) : new function () {\n\t\t\t\t\t\t\t\tthis.test = validator;\n\t\t\t\t\t\t\t}() : new RegExp(\".\"),\n\t\t\t\t\t\t\tcardinality: cardinality ? cardinality : 1,\n\t\t\t\t\t\t\toptionality: mtoken.isOptional,\n\t\t\t\t\t\t\tnewBlockMarker: prevMatch === undefined || prevMatch.def !== (maskdef.definitionSymbol || element),\n\t\t\t\t\t\t\tcasing: maskdef.casing,\n\t\t\t\t\t\t\tdef: maskdef.definitionSymbol || element,\n\t\t\t\t\t\t\tplaceholder: maskdef.placeholder,\n\t\t\t\t\t\t\tnativeDef: element\n\t\t\t\t\t\t});\n\t\t\t\t\t\tprevMatch = mtoken.matches[position - 1];\n\t\t\t\t\t}\n\t\t\t\t\tmtoken.matches.splice(position++, 0, {\n\t\t\t\t\t\tfn: maskdef.validator ? typeof maskdef.validator == \"string\" ? new RegExp(maskdef.validator) : new function () {\n\t\t\t\t\t\t\tthis.test = maskdef.validator;\n\t\t\t\t\t\t}() : new RegExp(\".\"),\n\t\t\t\t\t\tcardinality: maskdef.cardinality,\n\t\t\t\t\t\toptionality: mtoken.isOptional,\n\t\t\t\t\t\tnewBlockMarker: prevMatch === undefined || prevMatch.def !== (maskdef.definitionSymbol || element),\n\t\t\t\t\t\tcasing: maskdef.casing,\n\t\t\t\t\t\tdef: maskdef.definitionSymbol || element,\n\t\t\t\t\t\tplaceholder: maskdef.placeholder,\n\t\t\t\t\t\tnativeDef: element\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tmtoken.matches.splice(position++, 0, {\n\t\t\t\t\t\tfn: null,\n\t\t\t\t\t\tcardinality: 0,\n\t\t\t\t\t\toptionality: mtoken.isOptional,\n\t\t\t\t\t\tnewBlockMarker: prevMatch === undefined || prevMatch.def !== element,\n\t\t\t\t\t\tcasing: null,\n\t\t\t\t\t\tdef: opts.staticDefinitionSymbol || element,\n\t\t\t\t\t\tplaceholder: opts.staticDefinitionSymbol !== undefined ? element : undefined,\n\t\t\t\t\t\tnativeDef: element\n\t\t\t\t\t});\n\t\t\t\t\tescaped = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction verifyGroupMarker(maskToken) {\n\t\t\t\tif (maskToken && maskToken.matches) {\n\t\t\t\t\t$.each(maskToken.matches, function (ndx, token) {\n\t\t\t\t\t\tvar nextToken = maskToken.matches[ndx + 1];\n\t\t\t\t\t\tif ((nextToken === undefined || nextToken.matches === undefined || nextToken.isQuantifier === false) && token && token.isGroup) {\n\t\t\t\t\t\t\t//this is not a group but a normal mask => convert\n\t\t\t\t\t\t\ttoken.isGroup = false;\n\t\t\t\t\t\t\tinsertTestDefinition(token, opts.groupmarker.start, 0);\n\t\t\t\t\t\t\tif (token.openGroup !== true) {\n\t\t\t\t\t\t\t\tinsertTestDefinition(token, opts.groupmarker.end);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tverifyGroupMarker(token);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction defaultCase() {\n\t\t\t\tif (openenings.length > 0) {\n\t\t\t\t\tcurrentOpeningToken = openenings[openenings.length - 1];\n\t\t\t\t\tinsertTestDefinition(currentOpeningToken, m);\n\t\t\t\t\tif (currentOpeningToken.isAlternator) {\n\t\t\t\t\t\t//handle alternator a | b case\n\t\t\t\t\t\talternator = openenings.pop();\n\t\t\t\t\t\tfor (var mndx = 0; mndx < alternator.matches.length; mndx++) {\n\t\t\t\t\t\t\talternator.matches[mndx].isGroup = false; //don't mark alternate groups as group\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (openenings.length > 0) {\n\t\t\t\t\t\t\tcurrentOpeningToken = openenings[openenings.length - 1];\n\t\t\t\t\t\t\tcurrentOpeningToken.matches.push(alternator);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurrentToken.matches.push(alternator);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinsertTestDefinition(currentToken, m);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction reverseTokens(maskToken) {\n\t\t\t\tfunction reverseStatic(st) {\n\t\t\t\t\tif (st === opts.optionalmarker.start) st = opts.optionalmarker.end;else if (st === opts.optionalmarker.end) st = opts.optionalmarker.start;else if (st === opts.groupmarker.start) st = opts.groupmarker.end;else if (st === opts.groupmarker.end) st = opts.groupmarker.start;\n\n\t\t\t\t\treturn st;\n\t\t\t\t}\n\n\t\t\t\tmaskToken.matches = maskToken.matches.reverse();\n\t\t\t\tfor (var match in maskToken.matches) {\n\t\t\t\t\tif (maskToken.matches.hasOwnProperty(match)) {\n\t\t\t\t\t\tvar intMatch = parseInt(match);\n\t\t\t\t\t\tif (maskToken.matches[match].isQuantifier && maskToken.matches[intMatch + 1] && maskToken.matches[intMatch + 1].isGroup) {\n\t\t\t\t\t\t\t//reposition quantifier\n\t\t\t\t\t\t\tvar qt = maskToken.matches[match];\n\t\t\t\t\t\t\tmaskToken.matches.splice(match, 1);\n\t\t\t\t\t\t\tmaskToken.matches.splice(intMatch + 1, 0, qt);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (maskToken.matches[match].matches !== undefined) {\n\t\t\t\t\t\t\tmaskToken.matches[match] = reverseTokens(maskToken.matches[match]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmaskToken.matches[match] = reverseStatic(maskToken.matches[match]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn maskToken;\n\t\t\t}\n\n\t\t\twhile (match = tokenizer.exec(mask)) {\n\t\t\t\tm = match[0];\n\n\t\t\t\tif (escaped) {\n\t\t\t\t\tdefaultCase();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tswitch (m.charAt(0)) {\n\t\t\t\t\tcase opts.escapeChar:\n\t\t\t\t\t\tescaped = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase opts.optionalmarker.end:\n\t\t\t\t\t// optional closing\n\t\t\t\t\tcase opts.groupmarker.end:\n\t\t\t\t\t\t// Group closing\n\t\t\t\t\t\topeningToken = openenings.pop();\n\t\t\t\t\t\topeningToken.openGroup = false; //mark group as complete\n\t\t\t\t\t\tif (openingToken !== undefined) {\n\t\t\t\t\t\t\tif (openenings.length > 0) {\n\t\t\t\t\t\t\t\tcurrentOpeningToken = openenings[openenings.length - 1];\n\t\t\t\t\t\t\t\tcurrentOpeningToken.matches.push(openingToken);\n\t\t\t\t\t\t\t\tif (currentOpeningToken.isAlternator) {\n\t\t\t\t\t\t\t\t\t//handle alternator (a) | (b) case\n\t\t\t\t\t\t\t\t\talternator = openenings.pop();\n\t\t\t\t\t\t\t\t\tfor (var mndx = 0; mndx < alternator.matches.length; mndx++) {\n\t\t\t\t\t\t\t\t\t\talternator.matches[mndx].isGroup = false; //don't mark alternate groups as group\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (openenings.length > 0) {\n\t\t\t\t\t\t\t\t\t\tcurrentOpeningToken = openenings[openenings.length - 1];\n\t\t\t\t\t\t\t\t\t\tcurrentOpeningToken.matches.push(alternator);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tcurrentToken.matches.push(alternator);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcurrentToken.matches.push(openingToken);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else defaultCase();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase opts.optionalmarker.start:\n\t\t\t\t\t\t// optional opening\n\t\t\t\t\t\topenenings.push(new MaskToken(false, true));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase opts.groupmarker.start:\n\t\t\t\t\t\t// Group opening\n\t\t\t\t\t\topenenings.push(new MaskToken(true));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase opts.quantifiermarker.start:\n\t\t\t\t\t\t//Quantifier\n\t\t\t\t\t\tvar quantifier = new MaskToken(false, false, true);\n\n\t\t\t\t\t\tm = m.replace(/[{}]/g, \"\");\n\t\t\t\t\t\tvar mq = m.split(\",\"),\n\t\t\t\t\t\t    mq0 = isNaN(mq[0]) ? mq[0] : parseInt(mq[0]),\n\t\t\t\t\t\t    mq1 = mq.length === 1 ? mq0 : isNaN(mq[1]) ? mq[1] : parseInt(mq[1]);\n\t\t\t\t\t\tif (mq1 === \"*\" || mq1 === \"+\") {\n\t\t\t\t\t\t\tmq0 = mq1 === \"*\" ? 0 : 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tquantifier.quantifier = {\n\t\t\t\t\t\t\tmin: mq0,\n\t\t\t\t\t\t\tmax: mq1\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (openenings.length > 0) {\n\t\t\t\t\t\t\tvar matches = openenings[openenings.length - 1].matches;\n\t\t\t\t\t\t\tmatch = matches.pop();\n\t\t\t\t\t\t\tif (!match.isGroup) {\n\t\t\t\t\t\t\t\tgroupToken = new MaskToken(true);\n\t\t\t\t\t\t\t\tgroupToken.matches.push(match);\n\t\t\t\t\t\t\t\tmatch = groupToken;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmatches.push(match);\n\t\t\t\t\t\t\tmatches.push(quantifier);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmatch = currentToken.matches.pop();\n\t\t\t\t\t\t\tif (!match.isGroup) {\n\t\t\t\t\t\t\t\tgroupToken = new MaskToken(true);\n\t\t\t\t\t\t\t\tgroupToken.matches.push(match);\n\t\t\t\t\t\t\t\tmatch = groupToken;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrentToken.matches.push(match);\n\t\t\t\t\t\t\tcurrentToken.matches.push(quantifier);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase opts.alternatormarker:\n\t\t\t\t\t\tif (openenings.length > 0) {\n\t\t\t\t\t\t\tcurrentOpeningToken = openenings[openenings.length - 1];\n\t\t\t\t\t\t\tlastMatch = currentOpeningToken.matches.pop();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlastMatch = currentToken.matches.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (lastMatch.isAlternator) {\n\t\t\t\t\t\t\topenenings.push(lastMatch);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\talternator = new MaskToken(false, false, false, true);\n\t\t\t\t\t\t\talternator.matches.push(lastMatch);\n\t\t\t\t\t\t\topenenings.push(alternator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tdefaultCase();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (openenings.length > 0) {\n\t\t\t\topeningToken = openenings.pop();\n\t\t\t\tcurrentToken.matches.push(openingToken);\n\t\t\t}\n\t\t\tif (currentToken.matches.length > 0) {\n\t\t\t\tverifyGroupMarker(currentToken);\n\t\t\t\tmaskTokens.push(currentToken);\n\t\t\t}\n\n\t\t\tif (opts.numericInput) {\n\t\t\t\treverseTokens(maskTokens[0]);\n\t\t\t}\n\t\t\t// console.log(JSON.stringify(maskTokens));\n\t\t\treturn maskTokens;\n\t\t}\n\t};\n\n\t//apply defaults, definitions, aliases\n\tInputmask.extendDefaults = function (options) {\n\t\t$.extend(true, Inputmask.prototype.defaults, options);\n\t};\n\tInputmask.extendDefinitions = function (definition) {\n\t\t$.extend(true, Inputmask.prototype.definitions, definition);\n\t};\n\tInputmask.extendAliases = function (alias) {\n\t\t$.extend(true, Inputmask.prototype.aliases, alias);\n\t};\n\t//static fn on inputmask\n\tInputmask.format = function (value, options, metadata) {\n\t\treturn Inputmask(options).format(value, metadata);\n\t};\n\tInputmask.unmask = function (value, options) {\n\t\treturn Inputmask(options).unmaskedvalue(value);\n\t};\n\tInputmask.isValid = function (value, options) {\n\t\treturn Inputmask(options).isValid(value);\n\t};\n\tInputmask.remove = function (elems) {\n\t\t$.each(elems, function (ndx, el) {\n\t\t\tif (el.inputmask) el.inputmask.remove();\n\t\t});\n\t};\n\tInputmask.escapeRegex = function (str) {\n\t\tvar specials = [\"/\", \".\", \"*\", \"+\", \"?\", \"|\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", \"\\\\\", \"$\", \"^\"];\n\t\treturn str.replace(new RegExp(\"(\\\\\" + specials.join(\"|\\\\\") + \")\", \"gim\"), \"\\\\$1\");\n\t};\n\tInputmask.keyCode = {\n\t\tALT: 18,\n\t\tBACKSPACE: 8,\n\t\tBACKSPACE_SAFARI: 127,\n\t\tCAPS_LOCK: 20,\n\t\tCOMMA: 188,\n\t\tCOMMAND: 91,\n\t\tCOMMAND_LEFT: 91,\n\t\tCOMMAND_RIGHT: 93,\n\t\tCONTROL: 17,\n\t\tDELETE: 46,\n\t\tDOWN: 40,\n\t\tEND: 35,\n\t\tENTER: 13,\n\t\tESCAPE: 27,\n\t\tHOME: 36,\n\t\tINSERT: 45,\n\t\tLEFT: 37,\n\t\tMENU: 93,\n\t\tNUMPAD_ADD: 107,\n\t\tNUMPAD_DECIMAL: 110,\n\t\tNUMPAD_DIVIDE: 111,\n\t\tNUMPAD_ENTER: 108,\n\t\tNUMPAD_MULTIPLY: 106,\n\t\tNUMPAD_SUBTRACT: 109,\n\t\tPAGE_DOWN: 34,\n\t\tPAGE_UP: 33,\n\t\tPERIOD: 190,\n\t\tRIGHT: 39,\n\t\tSHIFT: 16,\n\t\tSPACE: 32,\n\t\tTAB: 9,\n\t\tUP: 38,\n\t\tWINDOWS: 91,\n\t\tX: 88\n\t};\n\n\tfunction resolveAlias(aliasStr, options, opts) {\n\t\tvar aliasDefinition = Inputmask.prototype.aliases[aliasStr];\n\t\tif (aliasDefinition) {\n\t\t\tif (aliasDefinition.alias) resolveAlias(aliasDefinition.alias, undefined, opts); //alias is another alias\n\t\t\t$.extend(true, opts, aliasDefinition); //merge alias definition in the options\n\t\t\t$.extend(true, opts, options); //reapply extra given options\n\t\t\treturn true;\n\t\t} else //alias not found - try as mask\n\t\t\tif (opts.mask === null) {\n\t\t\t\topts.mask = aliasStr;\n\t\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction generateMaskSet(opts, nocache) {\n\t\tfunction generateMask(mask, metadata, opts) {\n\t\t\tif (mask === null || mask === \"\") {\n\t\t\t\treturn undefined;\n\t\t\t} else {\n\t\t\t\tif (mask.length === 1 && opts.greedy === false && opts.repeat !== 0) {\n\t\t\t\t\topts.placeholder = \"\";\n\t\t\t\t} //hide placeholder with single non-greedy mask\n\t\t\t\tif (opts.repeat > 0 || opts.repeat === \"*\" || opts.repeat === \"+\") {\n\t\t\t\t\tvar repeatStart = opts.repeat === \"*\" ? 0 : opts.repeat === \"+\" ? 1 : opts.repeat;\n\t\t\t\t\tmask = opts.groupmarker.start + mask + opts.groupmarker.end + opts.quantifiermarker.start + repeatStart + \",\" + opts.repeat + opts.quantifiermarker.end;\n\t\t\t\t}\n\n\t\t\t\t// console.log(mask);\n\t\t\t\tvar masksetDefinition;\n\t\t\t\tif (Inputmask.prototype.masksCache[mask] === undefined || nocache === true) {\n\t\t\t\t\tmasksetDefinition = {\n\t\t\t\t\t\t\"mask\": mask,\n\t\t\t\t\t\t\"maskToken\": Inputmask.prototype.analyseMask(mask, opts),\n\t\t\t\t\t\t\"validPositions\": {},\n\t\t\t\t\t\t\"_buffer\": undefined,\n\t\t\t\t\t\t\"buffer\": undefined,\n\t\t\t\t\t\t\"tests\": {},\n\t\t\t\t\t\t\"metadata\": metadata,\n\t\t\t\t\t\tmaskLength: undefined\n\t\t\t\t\t};\n\t\t\t\t\tif (nocache !== true) {\n\t\t\t\t\t\tInputmask.prototype.masksCache[opts.numericInput ? mask.split(\"\").reverse().join(\"\") : mask] = masksetDefinition;\n\t\t\t\t\t\tmasksetDefinition = $.extend(true, {}, Inputmask.prototype.masksCache[opts.numericInput ? mask.split(\"\").reverse().join(\"\") : mask]);\n\t\t\t\t\t}\n\t\t\t\t} else masksetDefinition = $.extend(true, {}, Inputmask.prototype.masksCache[opts.numericInput ? mask.split(\"\").reverse().join(\"\") : mask]);\n\n\t\t\t\treturn masksetDefinition;\n\t\t\t}\n\t\t}\n\n\t\tvar ms;\n\n\t\tif ($.isFunction(opts.mask)) {\n\t\t\t//allow mask to be a preprocessing fn - should return a valid mask\n\t\t\topts.mask = opts.mask(opts);\n\t\t}\n\t\tif ($.isArray(opts.mask)) {\n\t\t\tif (opts.mask.length > 1) {\n\t\t\t\topts.keepStatic = opts.keepStatic === null ? true : opts.keepStatic; //enable by default when passing multiple masks when the option is not explicitly specified\n\t\t\t\tvar altMask = opts.groupmarker.start;\n\t\t\t\t$.each(opts.numericInput ? opts.mask.reverse() : opts.mask, function (ndx, msk) {\n\t\t\t\t\tif (altMask.length > 1) {\n\t\t\t\t\t\taltMask += opts.groupmarker.end + opts.alternatormarker + opts.groupmarker.start;\n\t\t\t\t\t}\n\t\t\t\t\tif (msk.mask !== undefined && !$.isFunction(msk.mask)) {\n\t\t\t\t\t\taltMask += msk.mask;\n\t\t\t\t\t} else {\n\t\t\t\t\t\taltMask += msk;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\taltMask += opts.groupmarker.end;\n\t\t\t\t// console.log(altMask);\n\t\t\t\treturn generateMask(altMask, opts.mask, opts);\n\t\t\t} else opts.mask = opts.mask.pop();\n\t\t}\n\n\t\tif (opts.mask) {\n\t\t\tif (opts.mask.mask !== undefined && !$.isFunction(opts.mask.mask)) {\n\t\t\t\tms = generateMask(opts.mask.mask, opts.mask, opts);\n\t\t\t} else {\n\t\t\t\tms = generateMask(opts.mask, opts.mask, opts);\n\t\t\t}\n\t\t}\n\n\t\treturn ms;\n\t};\n\n\t//masking scope\n\t//actionObj definition see below\n\tfunction maskScope(actionObj, maskset, opts) {\n\t\tmaskset = maskset || this.maskset;\n\t\topts = opts || this.opts;\n\t\tvar el = this.el,\n\t\t    isRTL = this.isRTL,\n\t\t    undoValue,\n\t\t    $el,\n\t\t    skipKeyPressEvent = false,\n\t\t    //Safari 5.1.x - modal dialog fires keypress twice workaround\n\t\tskipInputEvent = false,\n\t\t    //skip when triggered from within inputmask\n\t\tignorable = false,\n\t\t    maxLength,\n\t\t    mouseEnter = false,\n\t\t    colorMask;\n\n\t\t//maskset helperfunctions\n\t\tfunction getMaskTemplate(baseOnInput, minimalPos, includeMode) {\n\t\t\t//includeMode true => input, undefined => placeholder, false => mask\n\t\t\tminimalPos = minimalPos || 0;\n\t\t\tvar maskTemplate = [],\n\t\t\t    ndxIntlzr,\n\t\t\t    pos = 0,\n\t\t\t    test,\n\t\t\t    testPos,\n\t\t\t    lvp = getLastValidPosition();\n\t\t\tmaxLength = el !== undefined ? el.maxLength : undefined;\n\t\t\tif (maxLength === -1) maxLength = undefined;\n\t\t\tdo {\n\t\t\t\tif (baseOnInput === true && getMaskSet().validPositions[pos]) {\n\t\t\t\t\ttestPos = getMaskSet().validPositions[pos];\n\t\t\t\t\ttest = testPos.match;\n\t\t\t\t\tndxIntlzr = testPos.locator.slice();\n\t\t\t\t\tmaskTemplate.push(includeMode === true ? testPos.input : includeMode === false ? test.nativeDef : getPlaceholder(pos, test));\n\t\t\t\t} else {\n\t\t\t\t\ttestPos = getTestTemplate(pos, ndxIntlzr, pos - 1);\n\t\t\t\t\ttest = testPos.match;\n\t\t\t\t\tndxIntlzr = testPos.locator.slice();\n\t\t\t\t\tif (opts.jitMasking === false || pos < lvp || typeof opts.jitMasking === \"number\" && isFinite(opts.jitMasking) && opts.jitMasking > pos) {\n\t\t\t\t\t\tmaskTemplate.push(includeMode === false ? test.nativeDef : getPlaceholder(pos, test));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpos++;\n\t\t\t} while ((maxLength === undefined || pos < maxLength) && (test.fn !== null || test.def !== \"\") || minimalPos > pos);\n\t\t\tif (maskTemplate[maskTemplate.length - 1] === \"\") {\n\t\t\t\tmaskTemplate.pop(); //drop the last one which is empty\n\t\t\t}\n\n\t\t\tgetMaskSet().maskLength = pos + 1;\n\t\t\treturn maskTemplate;\n\t\t}\n\n\t\tfunction getMaskSet() {\n\t\t\treturn maskset;\n\t\t}\n\n\t\tfunction resetMaskSet(soft) {\n\t\t\tvar maskset = getMaskSet();\n\t\t\tmaskset.buffer = undefined;\n\t\t\tif (soft !== true) {\n\t\t\t\tmaskset._buffer = undefined;\n\t\t\t\tmaskset.validPositions = {};\n\t\t\t\tmaskset.p = 0;\n\t\t\t}\n\t\t}\n\n\t\tfunction getLastValidPosition(closestTo, strict, validPositions) {\n\t\t\tvar before = -1,\n\t\t\t    after = -1,\n\t\t\t    valids = validPositions || getMaskSet().validPositions; //for use in valhook ~ context switch\n\t\t\tif (closestTo === undefined) closestTo = -1;\n\t\t\tfor (var posNdx in valids) {\n\t\t\t\tvar psNdx = parseInt(posNdx);\n\t\t\t\tif (valids[psNdx] && (strict || valids[psNdx].generatedInput !== true)) {\n\t\t\t\t\tif (psNdx <= closestTo) before = psNdx;\n\t\t\t\t\tif (psNdx >= closestTo) after = psNdx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn before !== -1 && closestTo - before > 1 || after < closestTo ? before : after;\n\t\t}\n\n\t\tfunction stripValidPositions(start, end, nocheck, strict) {\n\t\t\tfunction IsEnclosedStatic(pos) {\n\t\t\t\tvar posMatch = getMaskSet().validPositions[pos];\n\t\t\t\tif (posMatch !== undefined && posMatch.match.fn === null) {\n\t\t\t\t\tvar prevMatch = getMaskSet().validPositions[pos - 1],\n\t\t\t\t\t    nextMatch = getMaskSet().validPositions[pos + 1];\n\t\t\t\t\treturn prevMatch !== undefined && nextMatch !== undefined;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i,\n\t\t\t    startPos = start,\n\t\t\t    positionsClone = $.extend(true, {}, getMaskSet().validPositions),\n\t\t\t    needsValidation = false;\n\t\t\tgetMaskSet().p = start; //needed for alternated position after overtype selection\n\n\t\t\tfor (i = end - 1; i >= startPos; i--) {\n\t\t\t\t//clear selection\n\t\t\t\tif (getMaskSet().validPositions[i] !== undefined) {\n\t\t\t\t\tif (nocheck === true || (getMaskSet().validPositions[i].match.optionality || !IsEnclosedStatic(i)) && opts.canClearPosition(getMaskSet(), i, getLastValidPosition(), strict, opts) !== false) {\n\t\t\t\t\t\tdelete getMaskSet().validPositions[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//clear buffer\n\t\t\tresetMaskSet(true);\n\t\t\tfor (i = startPos + 1; i <= getLastValidPosition();) {\n\t\t\t\twhile (getMaskSet().validPositions[startPos] !== undefined) {\n\t\t\t\t\tstartPos++;\n\t\t\t\t}if (i < startPos) i = startPos + 1;\n\t\t\t\tif (getMaskSet().validPositions[i] !== undefined || !isMask(i)) {\n\t\t\t\t\tvar t = getTestTemplate(i);\n\t\t\t\t\tif (needsValidation === false && positionsClone[startPos] && positionsClone[startPos].match.def === t.match.def) {\n\t\t\t\t\t\t//obvious match\n\t\t\t\t\t\tgetMaskSet().validPositions[startPos] = $.extend(true, {}, positionsClone[startPos]);\n\t\t\t\t\t\tgetMaskSet().validPositions[startPos].input = t.input;\n\t\t\t\t\t\tdelete getMaskSet().validPositions[i];\n\t\t\t\t\t\ti++;\n\t\t\t\t\t} else if (positionCanMatchDefinition(startPos, t.match.def)) {\n\t\t\t\t\t\tif (isValid(startPos, t.input || getPlaceholder(i), true) !== false) {\n\t\t\t\t\t\t\tdelete getMaskSet().validPositions[i];\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\tneedsValidation = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (!isMask(i)) {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tstartPos--;\n\t\t\t\t\t}\n\t\t\t\t\tstartPos++;\n\t\t\t\t} else i++;\n\t\t\t}\n\n\t\t\tresetMaskSet(true);\n\t\t}\n\n\t\tfunction determineTestTemplate(tests, guessNextBest) {\n\t\t\tvar testPos,\n\t\t\t    testPositions = tests,\n\t\t\t    lvp = getLastValidPosition(),\n\t\t\t    lvTest = getMaskSet().validPositions[lvp] || getTests(0)[0],\n\t\t\t    lvTestAltArr = lvTest.alternation !== undefined ? lvTest.locator[lvTest.alternation].toString().split(\",\") : [];\n\t\t\tfor (var ndx = 0; ndx < testPositions.length; ndx++) {\n\t\t\t\ttestPos = testPositions[ndx];\n\n\t\t\t\tif (testPos.match && (opts.greedy && testPos.match.optionalQuantifier !== true || (testPos.match.optionality === false || testPos.match.newBlockMarker === false) && testPos.match.optionalQuantifier !== true) && (lvTest.alternation === undefined || lvTest.alternation !== testPos.alternation || testPos.locator[lvTest.alternation] !== undefined && checkAlternationMatch(testPos.locator[lvTest.alternation].toString().split(\",\"), lvTestAltArr))) {\n\n\t\t\t\t\tif (guessNextBest !== true || testPos.match.fn === null && !/[0-9a-bA-Z]/.test(testPos.match.def)) break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn testPos;\n\t\t}\n\n\t\tfunction getTestTemplate(pos, ndxIntlzr, tstPs) {\n\t\t\treturn getMaskSet().validPositions[pos] || determineTestTemplate(getTests(pos, ndxIntlzr ? ndxIntlzr.slice() : ndxIntlzr, tstPs));\n\t\t}\n\n\t\tfunction getTest(pos) {\n\t\t\tif (getMaskSet().validPositions[pos]) {\n\t\t\t\treturn getMaskSet().validPositions[pos];\n\t\t\t}\n\t\t\treturn getTests(pos)[0];\n\t\t}\n\n\t\tfunction positionCanMatchDefinition(pos, def) {\n\t\t\tvar valid = false,\n\t\t\t    tests = getTests(pos);\n\t\t\tfor (var tndx = 0; tndx < tests.length; tndx++) {\n\t\t\t\tif (tests[tndx].match && tests[tndx].match.def === def) {\n\t\t\t\t\tvalid = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn valid;\n\t\t}\n\n\t\tfunction getTests(pos, ndxIntlzr, tstPs) {\n\t\t\tvar maskTokens = getMaskSet().maskToken,\n\t\t\t    testPos = ndxIntlzr ? tstPs : 0,\n\t\t\t    ndxInitializer = ndxIntlzr ? ndxIntlzr.slice() : [0],\n\t\t\t    matches = [],\n\t\t\t    insertStop = false,\n\t\t\t    latestMatch,\n\t\t\t    cacheDependency = ndxIntlzr ? ndxIntlzr.join(\"\") : \"\";\n\n\t\t\tfunction resolveTestFromToken(maskToken, ndxInitializer, loopNdx, quantifierRecurse) {\n\t\t\t\t//ndxInitializer contains a set of indexes to speedup searches in the mtokens\n\t\t\t\tfunction handleMatch(match, loopNdx, quantifierRecurse) {\n\t\t\t\t\tfunction isFirstMatch(latestMatch, tokenGroup) {\n\t\t\t\t\t\tvar firstMatch = $.inArray(latestMatch, tokenGroup.matches) === 0;\n\t\t\t\t\t\tif (!firstMatch) {\n\t\t\t\t\t\t\t$.each(tokenGroup.matches, function (ndx, match) {\n\t\t\t\t\t\t\t\tif (match.isQuantifier === true) {\n\t\t\t\t\t\t\t\t\tfirstMatch = isFirstMatch(latestMatch, tokenGroup.matches[ndx - 1]);\n\t\t\t\t\t\t\t\t\tif (firstMatch) return false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn firstMatch;\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction resolveNdxInitializer(pos, alternateNdx, targetAlternation) {\n\t\t\t\t\t\tvar bestMatch, indexPos;\n\t\t\t\t\t\tif (getMaskSet().tests[pos] || getMaskSet().validPositions[pos]) {\n\t\t\t\t\t\t\t$.each(getMaskSet().tests[pos] || [getMaskSet().validPositions[pos]], function (ndx, lmnt) {\n\t\t\t\t\t\t\t\tvar alternation = targetAlternation !== undefined ? targetAlternation : lmnt.alternation,\n\t\t\t\t\t\t\t\t    ndxPos = lmnt.locator[alternation] !== undefined ? lmnt.locator[alternation].toString().indexOf(alternateNdx) : -1;\n\t\t\t\t\t\t\t\tif ((indexPos === undefined || ndxPos < indexPos) && ndxPos !== -1) {\n\t\t\t\t\t\t\t\t\tbestMatch = lmnt;\n\t\t\t\t\t\t\t\t\tindexPos = ndxPos;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn bestMatch ? bestMatch.locator.slice((targetAlternation !== undefined ? targetAlternation : bestMatch.alternation) + 1) : targetAlternation !== undefined ? resolveNdxInitializer(pos, alternateNdx) : undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction staticCanMatchDefinition(source, target) {\n\t\t\t\t\t\tif (source.match.fn === null && target.match.fn !== null) {\n\t\t\t\t\t\t\treturn target.match.fn.test(source.match.def, getMaskSet(), pos, false, opts, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (testPos > 10000) {\n\t\t\t\t\t\tthrow \"Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. \" + getMaskSet().mask;\n\t\t\t\t\t}\n\t\t\t\t\tif (testPos === pos && match.matches === undefined) {\n\t\t\t\t\t\tmatches.push({\n\t\t\t\t\t\t\t\"match\": match,\n\t\t\t\t\t\t\t\"locator\": loopNdx.reverse(),\n\t\t\t\t\t\t\t\"cd\": cacheDependency\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (match.matches !== undefined) {\n\t\t\t\t\t\tif (match.isGroup && quantifierRecurse !== match) {\n\t\t\t\t\t\t\t//when a group pass along to the quantifier\n\t\t\t\t\t\t\tmatch = handleMatch(maskToken.matches[$.inArray(match, maskToken.matches) + 1], loopNdx);\n\t\t\t\t\t\t\tif (match) return true;\n\t\t\t\t\t\t} else if (match.isOptional) {\n\t\t\t\t\t\t\tvar optionalToken = match;\n\t\t\t\t\t\t\tmatch = resolveTestFromToken(match, ndxInitializer, loopNdx, quantifierRecurse);\n\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\tlatestMatch = matches[matches.length - 1].match;\n\t\t\t\t\t\t\t\tif (isFirstMatch(latestMatch, optionalToken)) {\n\t\t\t\t\t\t\t\t\tinsertStop = true; //insert a stop\n\t\t\t\t\t\t\t\t\ttestPos = pos; //match the position after the group\n\t\t\t\t\t\t\t\t} else return true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (match.isAlternator) {\n\t\t\t\t\t\t\tvar alternateToken = match,\n\t\t\t\t\t\t\t    malternateMatches = [],\n\t\t\t\t\t\t\t    maltMatches,\n\t\t\t\t\t\t\t    currentMatches = matches.slice(),\n\t\t\t\t\t\t\t    loopNdxCnt = loopNdx.length;\n\t\t\t\t\t\t\tvar altIndex = ndxInitializer.length > 0 ? ndxInitializer.shift() : -1;\n\t\t\t\t\t\t\tif (altIndex === -1 || typeof altIndex === \"string\") {\n\t\t\t\t\t\t\t\tvar currentPos = testPos,\n\t\t\t\t\t\t\t\t    ndxInitializerClone = ndxInitializer.slice(),\n\t\t\t\t\t\t\t\t    altIndexArr = [],\n\t\t\t\t\t\t\t\t    amndx;\n\t\t\t\t\t\t\t\tif (typeof altIndex == \"string\") {\n\t\t\t\t\t\t\t\t\taltIndexArr = altIndex.split(\",\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfor (amndx = 0; amndx < alternateToken.matches.length; amndx++) {\n\t\t\t\t\t\t\t\t\t\taltIndexArr.push(amndx);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (var ndx = 0; ndx < altIndexArr.length; ndx++) {\n\t\t\t\t\t\t\t\t\tamndx = parseInt(altIndexArr[ndx]);\n\t\t\t\t\t\t\t\t\tmatches = [];\n\t\t\t\t\t\t\t\t\t//set the correct ndxInitializer\n\t\t\t\t\t\t\t\t\tndxInitializer = resolveNdxInitializer(testPos, amndx, loopNdxCnt) || ndxInitializerClone.slice();\n\t\t\t\t\t\t\t\t\tmatch = handleMatch(alternateToken.matches[amndx] || maskToken.matches[amndx], [amndx].concat(loopNdx), quantifierRecurse) || match;\n\t\t\t\t\t\t\t\t\tif (match !== true && match !== undefined && altIndexArr[altIndexArr.length - 1] < alternateToken.matches.length) {\n\t\t\t\t\t\t\t\t\t\t//no match in the alternations (length mismatch) => look further\n\t\t\t\t\t\t\t\t\t\tvar ntndx = $.inArray(match, maskToken.matches) + 1;\n\t\t\t\t\t\t\t\t\t\tif (maskToken.matches.length > ntndx) {\n\t\t\t\t\t\t\t\t\t\t\tmatch = handleMatch(maskToken.matches[ntndx], [ntndx].concat(loopNdx.slice(1, loopNdx.length)), quantifierRecurse);\n\t\t\t\t\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\t\t\t\t\taltIndexArr.push(ntndx.toString());\n\t\t\t\t\t\t\t\t\t\t\t\t$.each(matches, function (ndx, lmnt) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tlmnt.alternation = loopNdx.length - 1;\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmaltMatches = matches.slice();\n\t\t\t\t\t\t\t\t\ttestPos = currentPos;\n\t\t\t\t\t\t\t\t\tmatches = [];\n\n\t\t\t\t\t\t\t\t\t//fuzzy merge matches\n\t\t\t\t\t\t\t\t\tfor (var ndx1 = 0; ndx1 < maltMatches.length; ndx1++) {\n\t\t\t\t\t\t\t\t\t\tvar altMatch = maltMatches[ndx1],\n\t\t\t\t\t\t\t\t\t\t    hasMatch = false;\n\t\t\t\t\t\t\t\t\t\taltMatch.alternation = altMatch.alternation || loopNdxCnt;\n\t\t\t\t\t\t\t\t\t\tfor (var ndx2 = 0; ndx2 < malternateMatches.length; ndx2++) {\n\t\t\t\t\t\t\t\t\t\t\tvar altMatch2 = malternateMatches[ndx2];\n\t\t\t\t\t\t\t\t\t\t\t//verify equality\n\t\t\t\t\t\t\t\t\t\t\tif (typeof altIndex !== \"string\" || $.inArray(altMatch.locator[altMatch.alternation].toString(), altIndexArr) !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (altMatch.match.def === altMatch2.match.def || staticCanMatchDefinition(altMatch, altMatch2)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\thasMatch = altMatch.match.nativeDef === altMatch2.match.nativeDef;\n\t\t\t\t\t\t\t\t\t\t\t\t\t// if (altMatch.alternation != altMatch2.alternation) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \tconsole.log(\"alternation mismatch\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (altMatch.alternation == altMatch2.alternation && //can we merge if the alternation is different??  TODO TOCHECK INVESTIGATE\n\t\t\t\t\t\t\t\t\t\t\t\t\taltMatch2.locator[altMatch2.alternation].toString().indexOf(altMatch.locator[altMatch.alternation]) === -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taltMatch2.locator[altMatch2.alternation] = altMatch2.locator[altMatch2.alternation] + \",\" + altMatch.locator[altMatch.alternation];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taltMatch2.alternation = altMatch.alternation; //we pass the alternation index => used in determineLastRequiredPosition\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (altMatch.match.fn == null) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//staticCanMatchDefinition => set no alternate on match\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taltMatch2.na = altMatch2.na || altMatch.locator[altMatch.alternation].toString();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (altMatch2.na.indexOf(altMatch.locator[altMatch.alternation]) === -1) altMatch2.na = altMatch2.na + \",\" + altMatch.locator[altMatch.alternation];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (!hasMatch) {\n\t\t\t\t\t\t\t\t\t\t\tmalternateMatches.push(altMatch);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (typeof altIndex == \"string\") {\n\t\t\t\t\t\t\t\t\t//filter matches\n\t\t\t\t\t\t\t\t\tmalternateMatches = $.map(malternateMatches, function (lmnt, ndx) {\n\t\t\t\t\t\t\t\t\t\tif (isFinite(ndx)) {\n\t\t\t\t\t\t\t\t\t\t\tvar mamatch,\n\t\t\t\t\t\t\t\t\t\t\t    alternation = lmnt.alternation,\n\t\t\t\t\t\t\t\t\t\t\t    altLocArr = lmnt.locator[alternation].toString().split(\",\");\n\t\t\t\t\t\t\t\t\t\t\tlmnt.locator[alternation] = undefined;\n\t\t\t\t\t\t\t\t\t\t\tlmnt.alternation = undefined;\n\n\t\t\t\t\t\t\t\t\t\t\tfor (var alndx = 0; alndx < altLocArr.length; alndx++) {\n\t\t\t\t\t\t\t\t\t\t\t\tmamatch = $.inArray(altLocArr[alndx], altIndexArr) !== -1;\n\t\t\t\t\t\t\t\t\t\t\t\tif (mamatch) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t//rebuild the locator with valid entries\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (lmnt.locator[alternation] !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlmnt.locator[alternation] += \",\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlmnt.locator[alternation] += altLocArr[alndx];\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else lmnt.locator[alternation] = parseInt(altLocArr[alndx]);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tlmnt.alternation = alternation;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif (lmnt.locator[alternation] !== undefined) return lmnt;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tmatches = currentMatches.concat(malternateMatches);\n\t\t\t\t\t\t\t\ttestPos = pos;\n\t\t\t\t\t\t\t\tinsertStop = matches.length > 0; //insert a stopelemnt when there is an alternate - needed for non-greedy option\n\n\t\t\t\t\t\t\t\t//cloneback\n\t\t\t\t\t\t\t\tndxInitializer = ndxInitializerClone.slice();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// if (alternateToken.matches[altIndex]) { //if not in the initial alternation => look further\n\t\t\t\t\t\t\t\tmatch = handleMatch(alternateToken.matches[altIndex] || maskToken.matches[altIndex], [altIndex].concat(loopNdx), quantifierRecurse);\n\t\t\t\t\t\t\t\t// } else match = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (match) return true;\n\t\t\t\t\t\t} else if (match.isQuantifier && quantifierRecurse !== maskToken.matches[$.inArray(match, maskToken.matches) - 1]) {\n\t\t\t\t\t\t\tvar qt = match;\n\t\t\t\t\t\t\tfor (var qndx = ndxInitializer.length > 0 ? ndxInitializer.shift() : 0; qndx < (isNaN(qt.quantifier.max) ? qndx + 1 : qt.quantifier.max) && testPos <= pos; qndx++) {\n\t\t\t\t\t\t\t\tvar tokenGroup = maskToken.matches[$.inArray(qt, maskToken.matches) - 1];\n\t\t\t\t\t\t\t\tmatch = handleMatch(tokenGroup, [qndx].concat(loopNdx), tokenGroup); //set the tokenGroup as quantifierRecurse marker\n\t\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\t\t//get latest match\n\t\t\t\t\t\t\t\t\tlatestMatch = matches[matches.length - 1].match;\n\t\t\t\t\t\t\t\t\tlatestMatch.optionalQuantifier = qndx > qt.quantifier.min - 1;\n\t\t\t\t\t\t\t\t\tif (isFirstMatch(latestMatch, tokenGroup)) {\n\t\t\t\t\t\t\t\t\t\t//search for next possible match\n\t\t\t\t\t\t\t\t\t\tif (qndx > qt.quantifier.min - 1) {\n\t\t\t\t\t\t\t\t\t\t\tinsertStop = true;\n\t\t\t\t\t\t\t\t\t\t\ttestPos = pos; //match the position after the group\n\t\t\t\t\t\t\t\t\t\t\tbreak; //stop quantifierloop\n\t\t\t\t\t\t\t\t\t\t} else return true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmatch = resolveTestFromToken(match, ndxInitializer, loopNdx, quantifierRecurse);\n\t\t\t\t\t\t\tif (match) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else testPos++;\n\t\t\t\t}\n\n\t\t\t\tfor (var tndx = ndxInitializer.length > 0 ? ndxInitializer.shift() : 0; tndx < maskToken.matches.length; tndx++) {\n\t\t\t\t\tif (maskToken.matches[tndx].isQuantifier !== true) {\n\t\t\t\t\t\tvar match = handleMatch(maskToken.matches[tndx], [tndx].concat(loopNdx), quantifierRecurse);\n\t\t\t\t\t\tif (match && testPos === pos) {\n\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t} else if (testPos > pos) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction mergeLocators(tests) {\n\t\t\t\tvar locator = [];\n\t\t\t\tif (!$.isArray(tests)) tests = [tests];\n\t\t\t\tif (tests.length > 0) {\n\t\t\t\t\tif (tests[0].alternation === undefined) {\n\t\t\t\t\t\tlocator = determineTestTemplate(tests.slice()).locator.slice();\n\t\t\t\t\t\tif (locator.length === 0) locator = tests[0].locator.slice();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$.each(tests, function (ndx, tst) {\n\t\t\t\t\t\t\tif (tst.def !== \"\") {\n\t\t\t\t\t\t\t\tif (locator.length === 0) locator = tst.locator.slice();else {\n\t\t\t\t\t\t\t\t\tfor (var i = 0; i < locator.length; i++) {\n\t\t\t\t\t\t\t\t\t\tif (tst.locator[i] && locator[i].toString().indexOf(tst.locator[i]) === -1) {\n\t\t\t\t\t\t\t\t\t\t\tlocator[i] += \",\" + tst.locator[i];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn locator;\n\t\t\t}\n\n\t\t\tfunction filterTests(tests) {\n\t\t\t\tif (opts.keepStatic && pos > 0) {\n\t\t\t\t\tif (tests.length > 1 + (tests[tests.length - 1].match.def === \"\" ? 1 : 0)) {\n\t\t\t\t\t\tif (tests[0].match.optionality !== true && tests[0].match.optionalQuantifier !== true && tests[0].match.fn === null && !/[0-9a-bA-Z]/.test(tests[0].match.def)) {\n\t\t\t\t\t\t\treturn [determineTestTemplate(tests)];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tests;\n\t\t\t}\n\n\t\t\tif (pos > -1) {\n\t\t\t\tif (ndxIntlzr === undefined) {\n\t\t\t\t\t//determine index initializer\n\t\t\t\t\tvar previousPos = pos - 1,\n\t\t\t\t\t    test;\n\t\t\t\t\twhile ((test = getMaskSet().validPositions[previousPos] || getMaskSet().tests[previousPos]) === undefined && previousPos > -1) {\n\t\t\t\t\t\tpreviousPos--;\n\t\t\t\t\t}\n\t\t\t\t\tif (test !== undefined && previousPos > -1) {\n\t\t\t\t\t\tndxInitializer = mergeLocators(test);\n\t\t\t\t\t\tcacheDependency = ndxInitializer.join(\"\");\n\t\t\t\t\t\ttestPos = previousPos;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (getMaskSet().tests[pos] && getMaskSet().tests[pos][0].cd === cacheDependency) {\n\t\t\t\t\t//cacheDependency is set on all tests, just check on the first\n\t\t\t\t\t//console.log(\"cache hit \" + pos + \" - \" + ndxIntlzr);\n\t\t\t\t\treturn filterTests(getMaskSet().tests[pos]);\n\t\t\t\t}\n\t\t\t\tfor (var mtndx = ndxInitializer.shift(); mtndx < maskTokens.length; mtndx++) {\n\t\t\t\t\tvar match = resolveTestFromToken(maskTokens[mtndx], ndxInitializer, [mtndx]);\n\t\t\t\t\tif (match && testPos === pos || testPos > pos) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (matches.length === 0 || insertStop) {\n\t\t\t\tmatches.push({\n\t\t\t\t\tmatch: {\n\t\t\t\t\t\tfn: null,\n\t\t\t\t\t\tcardinality: 0,\n\t\t\t\t\t\toptionality: true,\n\t\t\t\t\t\tcasing: null,\n\t\t\t\t\t\tdef: \"\",\n\t\t\t\t\t\tplaceholder: \"\"\n\t\t\t\t\t},\n\t\t\t\t\tlocator: [],\n\t\t\t\t\tcd: cacheDependency\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (ndxIntlzr !== undefined && getMaskSet().tests[pos]) {\n\t\t\t\t//prioritize full tests for caching\n\t\t\t\treturn filterTests($.extend(true, [], matches));\n\t\t\t}\n\t\t\tgetMaskSet().tests[pos] = $.extend(true, [], matches); //set a clone to prevent overwriting some props\n\t\t\t// console.log(pos + \" - \" + JSON.stringify(matches));\n\t\t\treturn filterTests(getMaskSet().tests[pos]);\n\t\t}\n\n\t\tfunction getBufferTemplate() {\n\t\t\tif (getMaskSet()._buffer === undefined) {\n\t\t\t\t//generate template\n\t\t\t\tgetMaskSet()._buffer = getMaskTemplate(false, 1);\n\t\t\t\tif (getMaskSet().buffer === undefined) {\n\t\t\t\t\tgetMaskSet()._buffer.slice();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn getMaskSet()._buffer;\n\t\t}\n\n\t\tfunction getBuffer(noCache) {\n\t\t\tif (getMaskSet().buffer === undefined || noCache === true) {\n\t\t\t\tgetMaskSet().buffer = getMaskTemplate(true, getLastValidPosition(), true);\n\t\t\t}\n\t\t\treturn getMaskSet().buffer;\n\t\t}\n\n\t\tfunction refreshFromBuffer(start, end, buffer) {\n\t\t\tvar i;\n\t\t\tif (start === true) {\n\t\t\t\tresetMaskSet();\n\t\t\t\tstart = 0;\n\t\t\t\tend = buffer.length;\n\t\t\t} else {\n\t\t\t\tfor (i = start; i < end; i++) {\n\t\t\t\t\tdelete getMaskSet().validPositions[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (i = start; i < end; i++) {\n\t\t\t\tresetMaskSet(true); //prevents clobber from the buffer\n\t\t\t\tif (buffer[i] !== opts.skipOptionalPartCharacter) {\n\t\t\t\t\tisValid(i, buffer[i], true, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction casing(elem, test, pos) {\n\t\t\tswitch (opts.casing || test.casing) {\n\t\t\t\tcase \"upper\":\n\t\t\t\t\telem = elem.toUpperCase();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"lower\":\n\t\t\t\t\telem = elem.toLowerCase();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"title\":\n\t\t\t\t\tvar posBefore = getMaskSet().validPositions[pos - 1];\n\t\t\t\t\tif (pos === 0 || posBefore && posBefore.input === String.fromCharCode(Inputmask.keyCode.SPACE)) {\n\t\t\t\t\t\telem = elem.toUpperCase();\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem = elem.toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn elem;\n\t\t}\n\n\t\tfunction checkAlternationMatch(altArr1, altArr2, na) {\n\t\t\tvar altArrC = opts.greedy ? altArr2 : altArr2.slice(0, 1),\n\t\t\t    isMatch = false,\n\t\t\t    naArr = na !== undefined ? na.split(\",\") : [],\n\t\t\t    naNdx;\n\n\t\t\t//remove no alternate indexes from alternation array\n\t\t\tfor (var i = 0; i < naArr.length; i++) {\n\t\t\t\tif ((naNdx = altArr1.indexOf(naArr[i])) !== -1) altArr1.splice(naNdx, 1);\n\t\t\t}\n\n\t\t\tfor (var alndx = 0; alndx < altArr1.length; alndx++) {\n\t\t\t\tif ($.inArray(altArr1[alndx], altArrC) !== -1) {\n\t\t\t\t\tisMatch = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isMatch;\n\t\t}\n\n\t\tfunction isValid(pos, c, strict, fromSetValid, fromAlternate) {\n\t\t\t//strict true ~ no correction or autofill\n\t\t\tfunction isSelection(posObj) {\n\t\t\t\tvar selection = isRTL ? posObj.begin - posObj.end > 1 || posObj.begin - posObj.end === 1 && opts.insertMode : posObj.end - posObj.begin > 1 || posObj.end - posObj.begin === 1 && opts.insertMode;\n\n\t\t\t\treturn selection && posObj.begin === 0 && posObj.end === getMaskSet().maskLength ? \"full\" : selection;\n\t\t\t}\n\n\t\t\tstrict = strict === true; //always set a value to strict to prevent possible strange behavior in the extensions\n\n\t\t\tvar maskPos = pos;\n\t\t\tif (pos.begin !== undefined) {\n\t\t\t\t//position was a position object - used to handle a delete by typing over a selection\n\t\t\t\tmaskPos = isRTL && !isSelection(pos) ? pos.end : pos.begin;\n\t\t\t}\n\n\t\t\tfunction _isValid(position, c, strict) {\n\t\t\t\tvar rslt = false;\n\t\t\t\t$.each(getTests(position), function (ndx, tst) {\n\t\t\t\t\tvar test = tst.match,\n\t\t\t\t\t    loopend = c ? 1 : 0,\n\t\t\t\t\t    chrs = \"\";\n\t\t\t\t\tfor (var i = test.cardinality; i > loopend; i--) {\n\t\t\t\t\t\tchrs += getBufferElement(position - (i - 1));\n\t\t\t\t\t}\n\t\t\t\t\tif (c) {\n\t\t\t\t\t\tchrs += c;\n\t\t\t\t\t}\n\n\t\t\t\t\t//make sure the buffer is set and correct\n\t\t\t\t\tgetBuffer(true);\n\t\t\t\t\t//return is false or a json object => { pos: ??, c: ??} or true\n\t\t\t\t\trslt = test.fn != null ? test.fn.test(chrs, getMaskSet(), position, strict, opts, isSelection(pos)) : (c === test.def || c === opts.skipOptionalPartCharacter) && test.def !== \"\" ? //non mask\n\t\t\t\t\t{\n\t\t\t\t\t\tc: getPlaceholder(position, test, true) || test.def,\n\t\t\t\t\t\tpos: position\n\t\t\t\t\t} : false;\n\n\t\t\t\t\tif (rslt !== false) {\n\t\t\t\t\t\tvar elem = rslt.c !== undefined ? rslt.c : c;\n\t\t\t\t\t\telem = elem === opts.skipOptionalPartCharacter && test.fn === null ? getPlaceholder(position, test, true) || test.def : elem;\n\n\t\t\t\t\t\tvar validatedPos = position,\n\t\t\t\t\t\t    possibleModifiedBuffer = getBuffer();\n\n\t\t\t\t\t\tif (rslt.remove !== undefined) {\n\t\t\t\t\t\t\t//remove position(s)\n\t\t\t\t\t\t\tif (!$.isArray(rslt.remove)) rslt.remove = [rslt.remove];\n\t\t\t\t\t\t\t$.each(rslt.remove.sort(function (a, b) {\n\t\t\t\t\t\t\t\treturn b - a;\n\t\t\t\t\t\t\t}), function (ndx, lmnt) {\n\t\t\t\t\t\t\t\tstripValidPositions(lmnt, lmnt + 1, true);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rslt.insert !== undefined) {\n\t\t\t\t\t\t\t//insert position(s)\n\t\t\t\t\t\t\tif (!$.isArray(rslt.insert)) rslt.insert = [rslt.insert];\n\t\t\t\t\t\t\t$.each(rslt.insert.sort(function (a, b) {\n\t\t\t\t\t\t\t\treturn a - b;\n\t\t\t\t\t\t\t}), function (ndx, lmnt) {\n\t\t\t\t\t\t\t\tisValid(lmnt.pos, lmnt.c, true, fromSetValid);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (rslt.refreshFromBuffer) {\n\t\t\t\t\t\t\tvar refresh = rslt.refreshFromBuffer;\n\t\t\t\t\t\t\tstrict = true;\n\t\t\t\t\t\t\trefreshFromBuffer(refresh === true ? refresh : refresh.start, refresh.end, possibleModifiedBuffer);\n\t\t\t\t\t\t\tif (rslt.pos === undefined && rslt.c === undefined) {\n\t\t\t\t\t\t\t\trslt.pos = getLastValidPosition();\n\t\t\t\t\t\t\t\treturn false; //breakout if refreshFromBuffer && nothing to insert\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalidatedPos = rslt.pos !== undefined ? rslt.pos : position;\n\t\t\t\t\t\t\tif (validatedPos !== position) {\n\t\t\t\t\t\t\t\trslt = $.extend(rslt, isValid(validatedPos, elem, true, fromSetValid)); //revalidate new position strict\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (rslt !== true && rslt.pos !== undefined && rslt.pos !== position) {\n\t\t\t\t\t\t\t//their is a position offset\n\t\t\t\t\t\t\tvalidatedPos = rslt.pos;\n\t\t\t\t\t\t\trefreshFromBuffer(position, validatedPos, getBuffer().slice());\n\t\t\t\t\t\t\tif (validatedPos !== position) {\n\t\t\t\t\t\t\t\trslt = $.extend(rslt, isValid(validatedPos, elem, true)); //revalidate new position strict\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (rslt !== true && rslt.pos === undefined && rslt.c === undefined) {\n\t\t\t\t\t\t\treturn false; //breakout if nothing to insert\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (ndx > 0) {\n\t\t\t\t\t\t\tresetMaskSet(true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!setValidPosition(validatedPos, $.extend({}, tst, {\n\t\t\t\t\t\t\t\"input\": casing(elem, test, validatedPos)\n\t\t\t\t\t\t}), fromSetValid, isSelection(pos))) {\n\t\t\t\t\t\t\trslt = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false; //break from $.each\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn rslt;\n\t\t\t}\n\n\t\t\tfunction alternate(pos, c, strict) {\n\t\t\t\tvar validPsClone = $.extend(true, {}, getMaskSet().validPositions),\n\t\t\t\t    lastAlt,\n\t\t\t\t    alternation,\n\t\t\t\t    isValidRslt = false,\n\t\t\t\t    altPos,\n\t\t\t\t    prevAltPos,\n\t\t\t\t    i,\n\t\t\t\t    validPos,\n\t\t\t\t    lAltPos = getLastValidPosition(),\n\t\t\t\t    altNdxs,\n\t\t\t\t    decisionPos;\n\t\t\t\t//find last modified alternation\n\t\t\t\tprevAltPos = getMaskSet().validPositions[lAltPos];\n\t\t\t\tfor (; lAltPos >= 0; lAltPos--) {\n\t\t\t\t\taltPos = getMaskSet().validPositions[lAltPos];\n\t\t\t\t\tif (altPos && altPos.alternation !== undefined) {\n\t\t\t\t\t\tlastAlt = lAltPos;\n\t\t\t\t\t\talternation = getMaskSet().validPositions[lastAlt].alternation;\n\t\t\t\t\t\tif (prevAltPos.locator[altPos.alternation] !== altPos.locator[altPos.alternation]) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevAltPos = altPos;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (alternation !== undefined) {\n\t\t\t\t\tdecisionPos = parseInt(lastAlt);\n\t\t\t\t\tvar decisionTaker = prevAltPos.locator[prevAltPos.alternation || alternation] !== undefined ? prevAltPos.locator[prevAltPos.alternation || alternation] : altNdxs[0]; //no match in the alternations (length mismatch)\n\t\t\t\t\tif (decisionTaker.length > 0) {\n\t\t\t\t\t\t//no decision taken ~ take first one as decider\n\t\t\t\t\t\tdecisionTaker = decisionTaker.split(\",\")[0];\n\t\t\t\t\t}\n\t\t\t\t\tvar possibilityPos = getMaskSet().validPositions[decisionPos],\n\t\t\t\t\t    prevPos = getMaskSet().validPositions[decisionPos - 1];\n\t\t\t\t\t$.each(getTests(decisionPos, prevPos ? prevPos.locator : undefined, decisionPos - 1), function (ndx, test) {\n\t\t\t\t\t\taltNdxs = test.locator[alternation] ? test.locator[alternation].toString().split(\",\") : [];\n\t\t\t\t\t\tfor (var mndx = 0; mndx < altNdxs.length; mndx++) {\n\t\t\t\t\t\t\tvar validInputs = [],\n\t\t\t\t\t\t\t    staticInputsBeforePos = 0,\n\t\t\t\t\t\t\t    staticInputsBeforePosAlternate = 0,\n\t\t\t\t\t\t\t    verifyValidInput = false;\n\t\t\t\t\t\t\tif (decisionTaker < altNdxs[mndx] && (test.na === undefined || $.inArray(altNdxs[mndx], test.na.split(\",\")) === -1)) {\n\t\t\t\t\t\t\t\tgetMaskSet().validPositions[decisionPos] = $.extend(true, {}, test);\n\t\t\t\t\t\t\t\tvar possibilities = getMaskSet().validPositions[decisionPos].locator;\n\t\t\t\t\t\t\t\tgetMaskSet().validPositions[decisionPos].locator[alternation] = parseInt(altNdxs[mndx]); //set forced decision\n\t\t\t\t\t\t\t\tif (test.match.fn == null) {\n\t\t\t\t\t\t\t\t\tif (possibilityPos.input !== test.match.def) {\n\t\t\t\t\t\t\t\t\t\tverifyValidInput = true; //verify that the new definition matches the input\n\t\t\t\t\t\t\t\t\t\tif (possibilityPos.generatedInput !== true) {\n\t\t\t\t\t\t\t\t\t\t\tvalidInputs.push(possibilityPos.input);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tstaticInputsBeforePosAlternate++;\n\t\t\t\t\t\t\t\t\tgetMaskSet().validPositions[decisionPos].generatedInput = !/[0-9a-bA-Z]/.test(test.match.def);\n\t\t\t\t\t\t\t\t\tgetMaskSet().validPositions[decisionPos].input = test.match.def;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tgetMaskSet().validPositions[decisionPos].input = possibilityPos.input;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (i = decisionPos + 1; i < getLastValidPosition(undefined, true) + 1; i++) {\n\t\t\t\t\t\t\t\t\tvalidPos = getMaskSet().validPositions[i];\n\t\t\t\t\t\t\t\t\tif (validPos && validPos.generatedInput !== true && /[0-9a-bA-Z]/.test(validPos.input)) {\n\t\t\t\t\t\t\t\t\t\tvalidInputs.push(validPos.input);\n\t\t\t\t\t\t\t\t\t} else if (i < pos) staticInputsBeforePos++;\n\t\t\t\t\t\t\t\t\tdelete getMaskSet().validPositions[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (verifyValidInput && validInputs[0] === test.match.def) {\n\t\t\t\t\t\t\t\t\tvalidInputs.shift();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tresetMaskSet(true); //clear getbuffer\n\t\t\t\t\t\t\t\tisValidRslt = true;\n\t\t\t\t\t\t\t\twhile (validInputs.length > 0) {\n\t\t\t\t\t\t\t\t\tvar input = validInputs.shift();\n\t\t\t\t\t\t\t\t\tif (input !== opts.skipOptionalPartCharacter) {\n\t\t\t\t\t\t\t\t\t\tif (!(isValidRslt = isValid(getLastValidPosition(undefined, true) + 1, input, false, fromSetValid, true))) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (isValidRslt) {\n\t\t\t\t\t\t\t\t\tgetMaskSet().validPositions[decisionPos].locator = possibilities; //reset forceddecision ~ needed for proper delete\n\t\t\t\t\t\t\t\t\tvar targetLvp = getLastValidPosition(pos) + 1;\n\t\t\t\t\t\t\t\t\tfor (i = decisionPos + 1; i < getLastValidPosition() + 1; i++) {\n\t\t\t\t\t\t\t\t\t\tvalidPos = getMaskSet().validPositions[i];\n\t\t\t\t\t\t\t\t\t\tif ((validPos === undefined || validPos.match.fn == null) && i < pos + (staticInputsBeforePosAlternate - staticInputsBeforePos)) {\n\t\t\t\t\t\t\t\t\t\t\tstaticInputsBeforePosAlternate++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tpos = pos + (staticInputsBeforePosAlternate - staticInputsBeforePos);\n\t\t\t\t\t\t\t\t\tisValidRslt = isValid(pos > targetLvp ? targetLvp : pos, c, strict, fromSetValid, true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!isValidRslt) {\n\t\t\t\t\t\t\t\t\tresetMaskSet();\n\t\t\t\t\t\t\t\t\tgetMaskSet().validPositions = $.extend(true, {}, validPsClone);\n\t\t\t\t\t\t\t\t} else return false; //exit $.each\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn isValidRslt;\n\t\t\t}\n\n\t\t\t//set alternator choice on previous skipped placeholder positions\n\t\t\tfunction trackbackAlternations(originalPos, newPos) {\n\t\t\t\tvar vp = getMaskSet().validPositions[newPos];\n\t\t\t\tif (vp) {\n\t\t\t\t\tvar targetLocator = vp.locator,\n\t\t\t\t\t    tll = targetLocator.length;\n\n\t\t\t\t\tfor (var ps = originalPos; ps < newPos; ps++) {\n\t\t\t\t\t\tif (getMaskSet().validPositions[ps] === undefined && !isMask(ps, true)) {\n\t\t\t\t\t\t\tvar tests = getTests(ps).slice(),\n\t\t\t\t\t\t\t    bestMatch = determineTestTemplate(tests, true),\n\t\t\t\t\t\t\t    equality = -1;\n\t\t\t\t\t\t\tif (tests[tests.length - 1].match.def === \"\") tests.pop();\n\t\t\t\t\t\t\t$.each(tests, function (ndx, tst) {\n\t\t\t\t\t\t\t\t//find best matching\n\t\t\t\t\t\t\t\tfor (var i = 0; i < tll; i++) {\n\t\t\t\t\t\t\t\t\tif (tst.locator[i] !== undefined && checkAlternationMatch(tst.locator[i].toString().split(\",\"), targetLocator[i].toString().split(\",\"), tst.na)) {\n\t\t\t\t\t\t\t\t\t\tif (equality < i) {\n\t\t\t\t\t\t\t\t\t\t\tequality = i;\n\t\t\t\t\t\t\t\t\t\t\tbestMatch = tst;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t//check if alternationIndex is closer then the current bestmatch\n\t\t\t\t\t\t\t\t\t\tvar targetAI = targetLocator[i],\n\t\t\t\t\t\t\t\t\t\t    bestMatchAI = bestMatch.locator[i],\n\t\t\t\t\t\t\t\t\t\t    tstAI = tst.locator[i];\n\t\t\t\t\t\t\t\t\t\tif (targetAI - bestMatchAI > Math.abs(targetAI - tstAI)) {\n\t\t\t\t\t\t\t\t\t\t\tbestMatch = tst;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbestMatch = $.extend({}, bestMatch, {\n\t\t\t\t\t\t\t\t\"input\": getPlaceholder(ps, bestMatch.match, true) || bestMatch.match.def\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbestMatch.generatedInput = true;\n\t\t\t\t\t\t\tsetValidPosition(ps, bestMatch, true);\n\t\t\t\t\t\t\t//revalidate the new position to update the locator value\n\t\t\t\t\t\t\tgetMaskSet().validPositions[newPos] = undefined;\n\t\t\t\t\t\t\t_isValid(newPos, vp.input, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction setValidPosition(pos, validTest, fromSetValid, isSelection) {\n\t\t\t\tif (isSelection || opts.insertMode && getMaskSet().validPositions[pos] !== undefined && fromSetValid === undefined) {\n\t\t\t\t\t//reposition & revalidate others\n\t\t\t\t\tvar positionsClone = $.extend(true, {}, getMaskSet().validPositions),\n\t\t\t\t\t    lvp = getLastValidPosition(undefined, true),\n\t\t\t\t\t    i;\n\t\t\t\t\tfor (i = pos; i <= lvp; i++) {\n\t\t\t\t\t\t//clear selection\n\t\t\t\t\t\tdelete getMaskSet().validPositions[i];\n\t\t\t\t\t}\n\t\t\t\t\tgetMaskSet().validPositions[pos] = $.extend(true, {}, validTest);\n\t\t\t\t\tvar valid = true,\n\t\t\t\t\t    j,\n\t\t\t\t\t    vps = getMaskSet().validPositions,\n\t\t\t\t\t    needsValidation = false,\n\t\t\t\t\t    initialLength = getMaskSet().maskLength;\n\t\t\t\t\tfor (i = j = pos; i <= lvp; i++) {\n\t\t\t\t\t\tvar t = positionsClone[i];\n\t\t\t\t\t\tif (t !== undefined /*&& (t.generatedInput !== true || t.match.fn === null)*/) {\n\t\t\t\t\t\t\t\tvar posMatch = j;\n\t\t\t\t\t\t\t\twhile (posMatch < getMaskSet().maskLength && (t.match.fn === null && vps[i] && (vps[i].match.optionalQuantifier === true || vps[i].match.optionality === true) || t.match.fn != null)) {\n\t\t\t\t\t\t\t\t\tposMatch++;\n\t\t\t\t\t\t\t\t\tif (needsValidation === false && positionsClone[posMatch] && positionsClone[posMatch].match.def === t.match.def) {\n\t\t\t\t\t\t\t\t\t\t//obvious match\n\t\t\t\t\t\t\t\t\t\tgetMaskSet().validPositions[posMatch] = $.extend(true, {}, positionsClone[posMatch]);\n\t\t\t\t\t\t\t\t\t\tgetMaskSet().validPositions[posMatch].input = t.input;\n\t\t\t\t\t\t\t\t\t\tfillMissingNonMask(posMatch);\n\t\t\t\t\t\t\t\t\t\tj = posMatch;\n\t\t\t\t\t\t\t\t\t\tvalid = true;\n\t\t\t\t\t\t\t\t\t} else if (positionCanMatchDefinition(posMatch, t.match.def)) {\n\t\t\t\t\t\t\t\t\t\t//validated match\n\t\t\t\t\t\t\t\t\t\tvar result = isValid(posMatch, t.input, true, true);\n\t\t\t\t\t\t\t\t\t\tvalid = result !== false;\n\t\t\t\t\t\t\t\t\t\tj = result.caret || result.insert ? getLastValidPosition() : posMatch;\n\t\t\t\t\t\t\t\t\t\tneedsValidation = true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvalid = t.generatedInput === true;\n\t\t\t\t\t\t\t\t\t\tif (!valid && posMatch >= getMaskSet().maskLength - 1) break;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (getMaskSet().maskLength < initialLength) getMaskSet().maskLength = initialLength; //a bit hacky but the masklength is corrected later on\n\t\t\t\t\t\t\t\t\tif (valid) break;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!valid) break;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!valid) {\n\t\t\t\t\t\tgetMaskSet().validPositions = $.extend(true, {}, positionsClone);\n\t\t\t\t\t\tresetMaskSet(true);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else getMaskSet().validPositions[pos] = $.extend(true, {}, validTest);\n\t\t\t\t;\n\n\t\t\t\tresetMaskSet(true);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tfunction fillMissingNonMask(maskPos) {\n\t\t\t\t//Check for a nonmask before the pos\n\t\t\t\t//find previous valid\n\t\t\t\tfor (var pndx = maskPos - 1; pndx > -1; pndx--) {\n\t\t\t\t\tif (getMaskSet().validPositions[pndx]) break;\n\t\t\t\t}\n\t\t\t\t////fill missing nonmask and valid placeholders\n\t\t\t\tvar testTemplate, testsFromPos;\n\t\t\t\tfor (pndx++; pndx < maskPos; pndx++) {\n\t\t\t\t\tif (getMaskSet().validPositions[pndx] === undefined && (opts.jitMasking === false || opts.jitMasking > pndx)) {\n\t\t\t\t\t\ttestsFromPos = getTests(pndx, getTestTemplate(pndx - 1).locator, pndx - 1).slice();\n\t\t\t\t\t\tif (testsFromPos[testsFromPos.length - 1].match.def === \"\") testsFromPos.pop();\n\t\t\t\t\t\ttestTemplate = determineTestTemplate(testsFromPos);\n\t\t\t\t\t\tif (testTemplate && (testTemplate.match.def === opts.radixPointDefinitionSymbol || !isMask(pndx, true) || $.inArray(opts.radixPoint, getBuffer()) < pndx && testTemplate.match.fn && testTemplate.match.fn.test(getPlaceholder(pndx), getMaskSet(), pndx, false, opts))) {\n\t\t\t\t\t\t\tresult = _isValid(pndx, getPlaceholder(pndx, testTemplate.match, true) || (testTemplate.match.fn == null ? testTemplate.match.def : getPlaceholder(pndx) !== \"\" ? getPlaceholder(pndx) : getBuffer()[pndx]), true);\n\t\t\t\t\t\t\tif (result !== false) {\n\t\t\t\t\t\t\t\tgetMaskSet().validPositions[result.pos || pndx].generatedInput = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar result = false,\n\t\t\t    positionsClone = $.extend(true, {}, getMaskSet().validPositions); //clone the currentPositions\n\n\t\t\tfillMissingNonMask(maskPos);\n\n\t\t\tif (isSelection(pos)) {\n\t\t\t\thandleRemove(undefined, Inputmask.keyCode.DELETE, pos);\n\t\t\t\tmaskPos = getMaskSet().p;\n\t\t\t}\n\n\t\t\tif (maskPos < getMaskSet().maskLength) {\n\t\t\t\tresult = _isValid(maskPos, c, strict);\n\t\t\t\tif ((!strict || fromSetValid === true) && result === false) {\n\t\t\t\t\tvar currentPosValid = getMaskSet().validPositions[maskPos];\n\t\t\t\t\tif (currentPosValid && currentPosValid.match.fn === null && (currentPosValid.match.def === c || c === opts.skipOptionalPartCharacter)) {\n\t\t\t\t\t\tresult = {\n\t\t\t\t\t\t\t\"caret\": seekNext(maskPos)\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if ((opts.insertMode || getMaskSet().validPositions[seekNext(maskPos)] === undefined) && !isMask(maskPos, true)) {\n\t\t\t\t\t\t//does the input match on a further position?\n\t\t\t\t\t\tfor (var nPos = maskPos + 1, snPos = seekNext(maskPos); nPos <= snPos; nPos++) {\n\t\t\t\t\t\t\tresult = _isValid(nPos, c, strict);\n\t\t\t\t\t\t\tif (result !== false) {\n\t\t\t\t\t\t\t\ttrackbackAlternations(maskPos, result.pos !== undefined ? result.pos : nPos);\n\t\t\t\t\t\t\t\tmaskPos = nPos;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (result === false && opts.keepStatic && !strict && fromAlternate !== true) {\n\t\t\t\t//try fuzzy alternator logic\n\t\t\t\tresult = alternate(maskPos, c, strict);\n\t\t\t}\n\t\t\tif (result === true) {\n\t\t\t\tresult = {\n\t\t\t\t\t\"pos\": maskPos\n\t\t\t\t};\n\t\t\t}\n\t\t\tif ($.isFunction(opts.postValidation) && result !== false && !strict && fromSetValid !== true) {\n\t\t\t\tresult = opts.postValidation(getBuffer(true), result, opts) ? result : false;\n\t\t\t}\n\n\t\t\tif (result.pos === undefined) {\n\t\t\t\tresult.pos = maskPos;\n\t\t\t}\n\n\t\t\tif (result === false) {\n\t\t\t\tresetMaskSet(true);\n\t\t\t\tgetMaskSet().validPositions = $.extend(true, {}, positionsClone); //revert validation changes\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction isMask(pos, strict) {\n\t\t\tvar test;\n\t\t\tif (strict) {\n\t\t\t\ttest = getTestTemplate(pos).match;\n\t\t\t\tif (test.def === \"\") test = getTest(pos).match;\n\t\t\t} else test = getTest(pos).match;\n\n\t\t\tif (test.fn != null) {\n\t\t\t\treturn test.fn;\n\t\t\t} else if (strict !== true && pos > -1) {\n\t\t\t\tvar tests = getTests(pos);\n\t\t\t\treturn tests.length > 1 + (tests[tests.length - 1].match.def === \"\" ? 1 : 0);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction seekNext(pos, newBlock) {\n\t\t\tvar maskL = getMaskSet().maskLength;\n\t\t\tif (pos >= maskL) return maskL;\n\t\t\tvar position = pos;\n\t\t\twhile (++position < maskL && (newBlock === true && (getTest(position).match.newBlockMarker !== true || !isMask(position)) || newBlock !== true && !isMask(position))) {}\n\t\t\treturn position;\n\t\t}\n\n\t\tfunction seekPrevious(pos, newBlock) {\n\t\t\tvar position = pos,\n\t\t\t    tests;\n\t\t\tif (position <= 0) return 0;\n\n\t\t\twhile (--position > 0 && (newBlock === true && getTest(position).match.newBlockMarker !== true || newBlock !== true && !isMask(position) && (tests = getTests(position), tests.length < 2 || tests.length === 2 && tests[1].match.def === \"\"))) {}\n\n\t\t\treturn position;\n\t\t}\n\n\t\tfunction getBufferElement(position) {\n\t\t\treturn getMaskSet().validPositions[position] === undefined ? getPlaceholder(position) : getMaskSet().validPositions[position].input;\n\t\t}\n\n\t\tfunction writeBuffer(input, buffer, caretPos, event, triggerInputEvent) {\n\t\t\tif (event && $.isFunction(opts.onBeforeWrite)) {\n\t\t\t\tvar result = opts.onBeforeWrite(event, buffer, caretPos, opts);\n\t\t\t\tif (result) {\n\t\t\t\t\tif (result.refreshFromBuffer) {\n\t\t\t\t\t\tvar refresh = result.refreshFromBuffer;\n\t\t\t\t\t\trefreshFromBuffer(refresh === true ? refresh : refresh.start, refresh.end, result.buffer || buffer);\n\t\t\t\t\t\tbuffer = getBuffer(true);\n\t\t\t\t\t}\n\t\t\t\t\t//only alter when intented !== undefined\n\t\t\t\t\tif (caretPos !== undefined) caretPos = result.caret !== undefined ? result.caret : caretPos;\n\t\t\t\t}\n\t\t\t}\n\t\t\tinput.inputmask._valueSet(buffer.join(\"\"));\n\t\t\tif (caretPos !== undefined && (event === undefined || event.type !== \"blur\")) {\n\t\t\t\tcaret(input, caretPos);\n\t\t\t} else renderColorMask(input, buffer, caretPos);\n\t\t\tif (triggerInputEvent === true) {\n\t\t\t\tskipInputEvent = true;\n\t\t\t\t$(input).trigger(\"input\");\n\t\t\t}\n\t\t}\n\n\t\tfunction getPlaceholder(pos, test, returnPL) {\n\t\t\ttest = test || getTest(pos).match;\n\t\t\tif (test.placeholder !== undefined || returnPL === true) {\n\t\t\t\treturn $.isFunction(test.placeholder) ? test.placeholder(opts) : test.placeholder;\n\t\t\t} else if (test.fn === null) {\n\t\t\t\tif (pos > -1 && getMaskSet().validPositions[pos] === undefined) {\n\t\t\t\t\tvar tests = getTests(pos),\n\t\t\t\t\t    staticAlternations = [],\n\t\t\t\t\t    prevTest;\n\t\t\t\t\tif (tests.length > 1 + (tests[tests.length - 1].match.def === \"\" ? 1 : 0)) {\n\t\t\t\t\t\tfor (var i = 0; i < tests.length; i++) {\n\t\t\t\t\t\t\tif (tests[i].match.optionality !== true && tests[i].match.optionalQuantifier !== true && (tests[i].match.fn === null || prevTest === undefined || tests[i].match.fn.test(prevTest.match.def, getMaskSet(), pos, true, opts) !== false)) {\n\t\t\t\t\t\t\t\tstaticAlternations.push(tests[i]);\n\t\t\t\t\t\t\t\tif (tests[i].match.fn === null) prevTest = tests[i];\n\t\t\t\t\t\t\t\tif (staticAlternations.length > 1) {\n\t\t\t\t\t\t\t\t\tif (/[0-9a-bA-Z]/.test(staticAlternations[0].match.def)) {\n\t\t\t\t\t\t\t\t\t\treturn opts.placeholder.charAt(pos % opts.placeholder.length);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn test.def;\n\t\t\t}\n\n\t\t\treturn opts.placeholder.charAt(pos % opts.placeholder.length);\n\t\t}\n\n\t\tfunction checkVal(input, writeOut, strict, nptvl, initiatingEvent, stickyCaret) {\n\t\t\tvar inputValue = nptvl.slice(),\n\t\t\t    charCodes = \"\",\n\t\t\t    initialNdx = 0,\n\t\t\t    result = undefined;\n\n\t\t\tfunction isTemplateMatch() {\n\t\t\t\tvar isMatch = false;\n\t\t\t\tvar charCodeNdx = getBufferTemplate().slice(initialNdx, seekNext(initialNdx)).join(\"\").indexOf(charCodes);\n\t\t\t\tif (charCodeNdx !== -1 && !isMask(initialNdx)) {\n\t\t\t\t\tisMatch = true;\n\t\t\t\t\tvar bufferTemplateArr = getBufferTemplate().slice(initialNdx, initialNdx + charCodeNdx);\n\t\t\t\t\tfor (var i = 0; i < bufferTemplateArr.length; i++) {\n\t\t\t\t\t\tif (bufferTemplateArr[i] !== \" \") {\n\t\t\t\t\t\t\tisMatch = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn isMatch;\n\t\t\t}\n\n\t\t\tresetMaskSet();\n\t\t\tgetMaskSet().p = seekNext(-1);\n\t\t\t// if (writeOut) input.inputmask._valueSet(\"\"); //initial clear\n\n\t\t\tif (!strict) {\n\t\t\t\tif (opts.autoUnmask !== true) {\n\t\t\t\t\tvar staticInput = getBufferTemplate().slice(0, seekNext(-1)).join(\"\"),\n\t\t\t\t\t    matches = inputValue.join(\"\").match(new RegExp(\"^\" + Inputmask.escapeRegex(staticInput), \"g\"));\n\t\t\t\t\tif (matches && matches.length > 0) {\n\t\t\t\t\t\tinputValue.splice(0, matches.length * staticInput.length);\n\t\t\t\t\t\tinitialNdx = seekNext(initialNdx);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinitialNdx = seekNext(initialNdx);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$.each(inputValue, function (ndx, charCode) {\n\t\t\t\tif (charCode !== undefined) {\n\t\t\t\t\t//inputfallback strips some elements out of the inputarray.  $.each logically presents them as undefined\n\t\t\t\t\tvar keypress = new $.Event(\"keypress\");\n\t\t\t\t\tkeypress.which = charCode.charCodeAt(0);\n\t\t\t\t\tcharCodes += charCode;\n\t\t\t\t\tvar lvp = getLastValidPosition(undefined, true),\n\t\t\t\t\t    lvTest = getMaskSet().validPositions[lvp],\n\t\t\t\t\t    nextTest = getTestTemplate(lvp + 1, lvTest ? lvTest.locator.slice() : undefined, lvp);\n\t\t\t\t\tif (!isTemplateMatch() || strict || opts.autoUnmask) {\n\t\t\t\t\t\tvar pos = strict ? ndx : nextTest.match.fn == null && nextTest.match.optionality && lvp + 1 < getMaskSet().p ? lvp + 1 : getMaskSet().p;\n\t\t\t\t\t\tresult = EventHandlers.keypressEvent.call(input, keypress, true, false, strict, pos);\n\t\t\t\t\t\tinitialNdx = pos + 1;\n\t\t\t\t\t\tcharCodes = \"\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = EventHandlers.keypressEvent.call(input, keypress, true, false, true, lvp + 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (!strict && $.isFunction(opts.onBeforeWrite)) {\n\t\t\t\t\t\tresult = opts.onBeforeWrite(keypress, getBuffer(), result.forwardPosition, opts);\n\t\t\t\t\t\tif (result && result.refreshFromBuffer) {\n\t\t\t\t\t\t\tvar refresh = result.refreshFromBuffer;\n\t\t\t\t\t\t\trefreshFromBuffer(refresh === true ? refresh : refresh.start, refresh.end, result.buffer);\n\t\t\t\t\t\t\tresetMaskSet(true);\n\t\t\t\t\t\t\tif (result.caret) {\n\t\t\t\t\t\t\t\tgetMaskSet().p = result.caret;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (writeOut) {\n\t\t\t\tvar caretPos = undefined,\n\t\t\t\t    lvp = getLastValidPosition();\n\t\t\t\tif (document.activeElement === input && (initiatingEvent || result)) {\n\t\t\t\t\tcaretPos = caret(input).begin;\n\t\t\t\t\tif (initiatingEvent && result === false) caretPos = seekNext(getLastValidPosition(caretPos));\n\t\t\t\t\tif (result && stickyCaret !== true && (caretPos < lvp + 1 || lvp === -1)) caretPos = opts.numericInput && result.caret === undefined ? seekPrevious(result.forwardPosition) : result.forwardPosition;\n\t\t\t\t}\n\t\t\t\twriteBuffer(input, getBuffer(), caretPos, initiatingEvent || new $.Event(\"checkval\"));\n\t\t\t}\n\t\t}\n\n\t\tfunction unmaskedvalue(input) {\n\t\t\tif (input) {\n\t\t\t\tif (input.inputmask === undefined) {\n\t\t\t\t\treturn input.value;\n\t\t\t\t}\n\t\t\t\tif (input.inputmask && input.inputmask.refreshValue) {\n\t\t\t\t\t//forced refresh from the value form.reset\n\t\t\t\t\tEventHandlers.setValueEvent.call(input);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar umValue = [],\n\t\t\t    vps = getMaskSet().validPositions;\n\t\t\tfor (var pndx in vps) {\n\t\t\t\tif (vps[pndx].match && vps[pndx].match.fn != null) {\n\t\t\t\t\tumValue.push(vps[pndx].input);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar unmaskedValue = umValue.length === 0 ? \"\" : (isRTL ? umValue.reverse() : umValue).join(\"\");\n\t\t\tif ($.isFunction(opts.onUnMask)) {\n\t\t\t\tvar bufferValue = (isRTL ? getBuffer().slice().reverse() : getBuffer()).join(\"\");\n\t\t\t\tunmaskedValue = opts.onUnMask(bufferValue, unmaskedValue, opts) || unmaskedValue;\n\t\t\t}\n\t\t\treturn unmaskedValue;\n\t\t}\n\n\t\tfunction caret(input, begin, end, notranslate) {\n\t\t\tfunction translatePosition(pos) {\n\t\t\t\tif (notranslate !== true && isRTL && typeof pos === \"number\" && (!opts.greedy || opts.placeholder !== \"\")) {\n\t\t\t\t\tvar bffrLght = getBuffer().join(\"\").length; //join is needed because sometimes we get an empty buffer element which must not be counted for the caret position (numeric alias)\n\t\t\t\t\tpos = bffrLght - pos;\n\t\t\t\t}\n\t\t\t\treturn pos;\n\t\t\t}\n\n\t\t\tvar range;\n\t\t\tif (typeof begin === \"number\") {\n\t\t\t\tbegin = translatePosition(begin);\n\t\t\t\tend = translatePosition(end);\n\t\t\t\tend = typeof end == \"number\" ? end : begin;\n\t\t\t\t// if (!$(input).is(\":visible\")) {\n\t\t\t\t// \treturn;\n\t\t\t\t// }\n\n\t\t\t\tvar scrollCalc = parseInt(((input.ownerDocument.defaultView || window).getComputedStyle ? (input.ownerDocument.defaultView || window).getComputedStyle(input, null) : input.currentStyle).fontSize) * end;\n\t\t\t\tinput.scrollLeft = scrollCalc > input.scrollWidth ? scrollCalc : 0;\n\n\t\t\t\tif (!mobile && opts.insertMode === false && begin === end) end++; //set visualization for insert/overwrite mode\n\t\t\t\tif (input.setSelectionRange) {\n\t\t\t\t\tinput.selectionStart = begin;\n\t\t\t\t\tinput.selectionEnd = end;\n\t\t\t\t} else if (window.getSelection) {\n\t\t\t\t\trange = document.createRange();\n\t\t\t\t\tif (input.firstChild === undefined || input.firstChild === null) {\n\t\t\t\t\t\tvar textNode = document.createTextNode(\"\");\n\t\t\t\t\t\tinput.appendChild(textNode);\n\t\t\t\t\t}\n\t\t\t\t\trange.setStart(input.firstChild, begin < input.inputmask._valueGet().length ? begin : input.inputmask._valueGet().length);\n\t\t\t\t\trange.setEnd(input.firstChild, end < input.inputmask._valueGet().length ? end : input.inputmask._valueGet().length);\n\t\t\t\t\trange.collapse(true);\n\t\t\t\t\tvar sel = window.getSelection();\n\t\t\t\t\tsel.removeAllRanges();\n\t\t\t\t\tsel.addRange(range);\n\t\t\t\t\t//input.focus();\n\t\t\t\t} else if (input.createTextRange) {\n\t\t\t\t\trange = input.createTextRange();\n\t\t\t\t\trange.collapse(true);\n\t\t\t\t\trange.moveEnd(\"character\", end);\n\t\t\t\t\trange.moveStart(\"character\", begin);\n\t\t\t\t\trange.select();\n\t\t\t\t}\n\t\t\t\trenderColorMask(input, undefined, { begin: begin, end: end });\n\t\t\t} else {\n\t\t\t\tif (input.setSelectionRange) {\n\t\t\t\t\tbegin = input.selectionStart;\n\t\t\t\t\tend = input.selectionEnd;\n\t\t\t\t} else if (window.getSelection) {\n\t\t\t\t\trange = window.getSelection().getRangeAt(0);\n\t\t\t\t\tif (range.commonAncestorContainer.parentNode === input || range.commonAncestorContainer === input) {\n\t\t\t\t\t\tbegin = range.startOffset;\n\t\t\t\t\t\tend = range.endOffset;\n\t\t\t\t\t}\n\t\t\t\t} else if (document.selection && document.selection.createRange) {\n\t\t\t\t\trange = document.selection.createRange();\n\t\t\t\t\tbegin = 0 - range.duplicate().moveStart(\"character\", -input.inputmask._valueGet().length);\n\t\t\t\t\tend = begin + range.text.length;\n\t\t\t\t}\n\t\t\t\t/*eslint-disable consistent-return */\n\t\t\t\treturn {\n\t\t\t\t\t\"begin\": translatePosition(begin),\n\t\t\t\t\t\"end\": translatePosition(end)\n\t\t\t\t};\n\t\t\t\t/*eslint-enable consistent-return */\n\t\t\t}\n\t\t}\n\n\t\tfunction determineLastRequiredPosition(returnDefinition) {\n\t\t\tvar buffer = getBuffer(),\n\t\t\t    bl = buffer.length,\n\t\t\t    pos,\n\t\t\t    lvp = getLastValidPosition(),\n\t\t\t    positions = {},\n\t\t\t    lvTest = getMaskSet().validPositions[lvp],\n\t\t\t    ndxIntlzr = lvTest !== undefined ? lvTest.locator.slice() : undefined,\n\t\t\t    testPos;\n\t\t\tfor (pos = lvp + 1; pos < buffer.length; pos++) {\n\t\t\t\ttestPos = getTestTemplate(pos, ndxIntlzr, pos - 1);\n\t\t\t\tndxIntlzr = testPos.locator.slice();\n\t\t\t\tpositions[pos] = $.extend(true, {}, testPos);\n\t\t\t}\n\n\t\t\tvar lvTestAlt = lvTest && lvTest.alternation !== undefined ? lvTest.locator[lvTest.alternation] : undefined;\n\t\t\tfor (pos = bl - 1; pos > lvp; pos--) {\n\t\t\t\ttestPos = positions[pos];\n\t\t\t\tif ((testPos.match.optionality || testPos.match.optionalQuantifier || lvTestAlt && (lvTestAlt !== positions[pos].locator[lvTest.alternation] && testPos.match.fn != null || testPos.match.fn === null && testPos.locator[lvTest.alternation] && checkAlternationMatch(testPos.locator[lvTest.alternation].toString().split(\",\"), lvTestAlt.toString().split(\",\")) && getTests(pos)[0].def !== \"\")) && buffer[pos] === getPlaceholder(pos, testPos.match)) {\n\t\t\t\t\tbl--;\n\t\t\t\t} else break;\n\t\t\t}\n\t\t\treturn returnDefinition ? {\n\t\t\t\t\"l\": bl,\n\t\t\t\t\"def\": positions[bl] ? positions[bl].match : undefined\n\t\t\t} : bl;\n\t\t}\n\n\t\tfunction clearOptionalTail(buffer) {\n\t\t\tvar rl = determineLastRequiredPosition(),\n\t\t\t    validPos,\n\t\t\t    bl = buffer.length;\n\n\t\t\twhile (rl < bl && !isMask(rl + 1) && (validPos = getTest(rl + 1)) && validPos.match.optionality !== true && validPos.match.optionalQuantifier !== true) {\n\t\t\t\trl++;\n\t\t\t}\n\n\t\t\twhile ((validPos = getTest(rl - 1)) && validPos.match.optionality && validPos.input === opts.skipOptionalPartCharacter) {\n\t\t\t\trl--;\n\t\t\t}\n\t\t\tbuffer.splice(rl);\n\t\t\treturn buffer;\n\t\t}\n\n\t\tfunction isComplete(buffer) {\n\t\t\t//return true / false / undefined (repeat *)\n\t\t\tif ($.isFunction(opts.isComplete)) return opts.isComplete(buffer, opts);\n\t\t\tif (opts.repeat === \"*\") return undefined;\n\t\t\tvar complete = false,\n\t\t\t    lrp = determineLastRequiredPosition(true),\n\t\t\t    aml = seekPrevious(lrp.l);\n\n\t\t\tif (lrp.def === undefined || lrp.def.newBlockMarker || lrp.def.optionality || lrp.def.optionalQuantifier) {\n\t\t\t\tcomplete = true;\n\t\t\t\tfor (var i = 0; i <= aml; i++) {\n\t\t\t\t\tvar test = getTestTemplate(i).match;\n\t\t\t\t\tif (test.fn !== null && getMaskSet().validPositions[i] === undefined && test.optionality !== true && test.optionalQuantifier !== true || test.fn === null && buffer[i] !== getPlaceholder(i, test)) {\n\t\t\t\t\t\tcomplete = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn complete;\n\t\t}\n\n\t\tfunction handleRemove(input, k, pos, strict) {\n\t\t\tfunction generalize() {\n\t\t\t\tif (opts.keepStatic) {\n\t\t\t\t\tvar validInputs = [],\n\t\t\t\t\t    lastAlt = getLastValidPosition(-1, true),\n\t\t\t\t\t    positionsClone = $.extend(true, {}, getMaskSet().validPositions),\n\t\t\t\t\t    prevAltPos = getMaskSet().validPositions[lastAlt];\n\t\t\t\t\t//find last alternation\n\t\t\t\t\tfor (; lastAlt >= 0; lastAlt--) {\n\t\t\t\t\t\tvar altPos = getMaskSet().validPositions[lastAlt];\n\t\t\t\t\t\tif (altPos) {\n\t\t\t\t\t\t\tif (altPos.generatedInput !== true && /[0-9a-bA-Z]/.test(altPos.input)) {\n\t\t\t\t\t\t\t\tvalidInputs.push(altPos.input);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete getMaskSet().validPositions[lastAlt];\n\t\t\t\t\t\t\tif (altPos.alternation !== undefined && altPos.locator[altPos.alternation] !== prevAltPos.locator[altPos.alternation]) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprevAltPos = altPos;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastAlt > -1) {\n\t\t\t\t\t\tgetMaskSet().p = seekNext(getLastValidPosition(-1, true));\n\t\t\t\t\t\twhile (validInputs.length > 0) {\n\t\t\t\t\t\t\tvar keypress = new $.Event(\"keypress\");\n\t\t\t\t\t\t\tkeypress.which = validInputs.pop().charCodeAt(0);\n\t\t\t\t\t\t\tEventHandlers.keypressEvent.call(input, keypress, true, false, false, getMaskSet().p);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else getMaskSet().validPositions = $.extend(true, {}, positionsClone); //restore original positions\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (opts.numericInput || isRTL) {\n\t\t\t\tif (k === Inputmask.keyCode.BACKSPACE) {\n\t\t\t\t\tk = Inputmask.keyCode.DELETE;\n\t\t\t\t} else if (k === Inputmask.keyCode.DELETE) {\n\t\t\t\t\tk = Inputmask.keyCode.BACKSPACE;\n\t\t\t\t}\n\n\t\t\t\tif (isRTL) {\n\t\t\t\t\tvar pend = pos.end;\n\t\t\t\t\tpos.end = pos.begin;\n\t\t\t\t\tpos.begin = pend;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (k === Inputmask.keyCode.BACKSPACE && (pos.end - pos.begin < 1 || opts.insertMode === false)) {\n\t\t\t\tpos.begin = seekPrevious(pos.begin);\n\t\t\t\tif (getMaskSet().validPositions[pos.begin] !== undefined && (getMaskSet().validPositions[pos.begin].input === opts.groupSeparator || getMaskSet().validPositions[pos.begin].input === opts.radixPoint)) {\n\t\t\t\t\tpos.begin--;\n\t\t\t\t}\n\t\t\t} else if (k === Inputmask.keyCode.DELETE && pos.begin === pos.end) {\n\t\t\t\tpos.end = isMask(pos.end, true) ? pos.end + 1 : seekNext(pos.end) + 1;\n\t\t\t\tif (getMaskSet().validPositions[pos.begin] !== undefined && (getMaskSet().validPositions[pos.begin].input === opts.groupSeparator || getMaskSet().validPositions[pos.begin].input === opts.radixPoint)) {\n\t\t\t\t\tpos.end++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstripValidPositions(pos.begin, pos.end, false, strict);\n\t\t\tif (strict !== true) {\n\t\t\t\tgeneralize(); //revert the alternation\n\t\t\t}\n\t\t\tvar lvp = getLastValidPosition(pos.begin, true);\n\t\t\tif (lvp < pos.begin) {\n\t\t\t\t//if (lvp === -1) resetMaskSet();\n\t\t\t\tgetMaskSet().p = seekNext(lvp);\n\t\t\t} else if (strict !== true) {\n\t\t\t\tgetMaskSet().p = pos.begin;\n\t\t\t}\n\t\t}\n\n\t\tvar EventRuler = {\n\t\t\ton: function on(input, eventName, eventHandler) {\n\t\t\t\tvar ev = function ev(e) {\n\t\t\t\t\t// console.log(\"triggered \" + e.type);\n\n\t\t\t\t\tif (this.inputmask === undefined && this.nodeName !== \"FORM\") {\n\t\t\t\t\t\t//happens when cloning an object with jquery.clone\n\t\t\t\t\t\tvar imOpts = $.data(this, \"_inputmask_opts\");\n\t\t\t\t\t\tif (imOpts) new Inputmask(imOpts).mask(this);else EventRuler.off(this);\n\t\t\t\t\t} else if (e.type !== \"setvalue\" && this.nodeName !== \"FORM\" && (this.disabled || this.readOnly && !(e.type === \"keydown\" && e.ctrlKey && e.keyCode === 67 || opts.tabThrough === false && e.keyCode === Inputmask.keyCode.TAB))) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tswitch (e.type) {\n\t\t\t\t\t\t\tcase \"input\":\n\t\t\t\t\t\t\t\tif (skipInputEvent === true) {\n\t\t\t\t\t\t\t\t\tskipInputEvent = false;\n\t\t\t\t\t\t\t\t\treturn e.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"keydown\":\n\t\t\t\t\t\t\t\t//Safari 5.1.x - modal dialog fires keypress twice workaround\n\t\t\t\t\t\t\t\tskipKeyPressEvent = false;\n\t\t\t\t\t\t\t\tskipInputEvent = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"keypress\":\n\t\t\t\t\t\t\t\tif (skipKeyPressEvent === true) {\n\t\t\t\t\t\t\t\t\treturn e.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tskipKeyPressEvent = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"click\":\n\t\t\t\t\t\t\t\tif (iemobile || iphone) {\n\t\t\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\t\t    args = arguments;\n\t\t\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\t\t\teventHandler.apply(that, args);\n\t\t\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// console.log(\"executed \" + e.type);\n\t\t\t\t\t\tvar returnVal = eventHandler.apply(this, arguments);\n\t\t\t\t\t\tif (returnVal === false) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn returnVal;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t//keep instance of the event\n\t\t\t\tinput.inputmask.events[eventName] = input.inputmask.events[eventName] || [];\n\t\t\t\tinput.inputmask.events[eventName].push(ev);\n\n\t\t\t\tif ($.inArray(eventName, [\"submit\", \"reset\"]) !== -1) {\n\t\t\t\t\tif (input.form != null) $(input.form).on(eventName, ev);\n\t\t\t\t} else {\n\t\t\t\t\t$(input).on(eventName, ev);\n\t\t\t\t}\n\t\t\t},\n\t\t\toff: function off(input, event) {\n\t\t\t\tif (input.inputmask && input.inputmask.events) {\n\t\t\t\t\tvar events;\n\t\t\t\t\tif (event) {\n\t\t\t\t\t\tevents = [];\n\t\t\t\t\t\tevents[event] = input.inputmask.events[event];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tevents = input.inputmask.events;\n\t\t\t\t\t}\n\t\t\t\t\t$.each(events, function (eventName, evArr) {\n\t\t\t\t\t\twhile (evArr.length > 0) {\n\t\t\t\t\t\t\tvar ev = evArr.pop();\n\t\t\t\t\t\t\tif ($.inArray(eventName, [\"submit\", \"reset\"]) !== -1) {\n\t\t\t\t\t\t\t\tif (input.form != null) $(input.form).off(eventName, ev);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(input).off(eventName, ev);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete input.inputmask.events[eventName];\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tvar EventHandlers = {\n\t\t\tkeydownEvent: function keydownEvent(e) {\n\t\t\t\tfunction isInputEventSupported(eventName) {\n\t\t\t\t\tvar el = document.createElement(\"input\"),\n\t\t\t\t\t    evName = \"on\" + eventName,\n\t\t\t\t\t    isSupported = evName in el;\n\t\t\t\t\tif (!isSupported) {\n\t\t\t\t\t\tel.setAttribute(evName, \"return;\");\n\t\t\t\t\t\tisSupported = typeof el[evName] == \"function\";\n\t\t\t\t\t}\n\t\t\t\t\tel = null;\n\t\t\t\t\treturn isSupported;\n\t\t\t\t}\n\n\t\t\t\tvar input = this,\n\t\t\t\t    $input = $(input),\n\t\t\t\t    k = e.keyCode,\n\t\t\t\t    pos = caret(input);\n\n\t\t\t\t//backspace, delete, and escape get special treatment\n\t\t\t\tif (k === Inputmask.keyCode.BACKSPACE || k === Inputmask.keyCode.DELETE || iphone && k === Inputmask.keyCode.BACKSPACE_SAFARI || e.ctrlKey && k === Inputmask.keyCode.X && !isInputEventSupported(\"cut\")) {\n\t\t\t\t\t//backspace/delete\n\t\t\t\t\te.preventDefault(); //stop default action but allow propagation\n\t\t\t\t\thandleRemove(input, k, pos);\n\t\t\t\t\twriteBuffer(input, getBuffer(true), getMaskSet().p, e, input.inputmask._valueGet() !== getBuffer().join(\"\"));\n\t\t\t\t\tif (input.inputmask._valueGet() === getBufferTemplate().join(\"\")) {\n\t\t\t\t\t\t$input.trigger(\"cleared\");\n\t\t\t\t\t} else if (isComplete(getBuffer()) === true) {\n\t\t\t\t\t\t$input.trigger(\"complete\");\n\t\t\t\t\t}\n\t\t\t\t} else if (k === Inputmask.keyCode.END || k === Inputmask.keyCode.PAGE_DOWN) {\n\t\t\t\t\t//when END or PAGE_DOWN pressed set position at lastmatch\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tvar caretPos = seekNext(getLastValidPosition());\n\t\t\t\t\tif (!opts.insertMode && caretPos === getMaskSet().maskLength && !e.shiftKey) caretPos--;\n\t\t\t\t\tcaret(input, e.shiftKey ? pos.begin : caretPos, caretPos, true);\n\t\t\t\t} else if (k === Inputmask.keyCode.HOME && !e.shiftKey || k === Inputmask.keyCode.PAGE_UP) {\n\t\t\t\t\t//Home or page_up\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tcaret(input, 0, e.shiftKey ? pos.begin : 0, true);\n\t\t\t\t} else if ((opts.undoOnEscape && k === Inputmask.keyCode.ESCAPE || k === 90 && e.ctrlKey) && e.altKey !== true) {\n\t\t\t\t\t//escape && undo && #762\n\t\t\t\t\tcheckVal(input, true, false, undoValue.split(\"\"));\n\t\t\t\t\t$input.trigger(\"click\");\n\t\t\t\t} else if (k === Inputmask.keyCode.INSERT && !(e.shiftKey || e.ctrlKey)) {\n\t\t\t\t\t//insert\n\t\t\t\t\topts.insertMode = !opts.insertMode;\n\t\t\t\t\tcaret(input, !opts.insertMode && pos.begin === getMaskSet().maskLength ? pos.begin - 1 : pos.begin);\n\t\t\t\t} else if (opts.tabThrough === true && k === Inputmask.keyCode.TAB) {\n\t\t\t\t\tif (e.shiftKey === true) {\n\t\t\t\t\t\tif (getTest(pos.begin).match.fn === null) {\n\t\t\t\t\t\t\tpos.begin = seekNext(pos.begin);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos.end = seekPrevious(pos.begin, true);\n\t\t\t\t\t\tpos.begin = seekPrevious(pos.end, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpos.begin = seekNext(pos.begin, true);\n\t\t\t\t\t\tpos.end = seekNext(pos.begin, true);\n\t\t\t\t\t\tif (pos.end < getMaskSet().maskLength) pos.end--;\n\t\t\t\t\t}\n\t\t\t\t\tif (pos.begin < getMaskSet().maskLength) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tcaret(input, pos.begin, pos.end);\n\t\t\t\t\t}\n\t\t\t\t} else if (!e.shiftKey) {\n\t\t\t\t\tif (opts.insertMode === false) {\n\t\t\t\t\t\tif (k === Inputmask.keyCode.RIGHT) {\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\tvar caretPos = caret(input);\n\t\t\t\t\t\t\t\tcaret(input, caretPos.begin);\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t} else if (k === Inputmask.keyCode.LEFT) {\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\tvar caretPos = caret(input);\n\t\t\t\t\t\t\t\tcaret(input, isRTL ? caretPos.begin + 1 : caretPos.begin - 1);\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\topts.onKeyDown.call(this, e, getBuffer(), caret(input).begin, opts);\n\t\t\t\tignorable = $.inArray(k, opts.ignorables) !== -1;\n\t\t\t},\n\t\t\tkeypressEvent: function keypressEvent(e, checkval, writeOut, strict, ndx) {\n\t\t\t\tvar input = this,\n\t\t\t\t    $input = $(input),\n\t\t\t\t    k = e.which || e.charCode || e.keyCode;\n\n\t\t\t\tif (checkval !== true && !(e.ctrlKey && e.altKey) && (e.ctrlKey || e.metaKey || ignorable)) {\n\t\t\t\t\tif (k === Inputmask.keyCode.ENTER && undoValue !== getBuffer().join(\"\")) {\n\t\t\t\t\t\tundoValue = getBuffer().join(\"\");\n\t\t\t\t\t\t// e.preventDefault();\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t$input.trigger(\"change\");\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tif (k) {\n\t\t\t\t\t\t//special treat the decimal separator\n\t\t\t\t\t\tif (k === 46 && e.shiftKey === false && opts.radixPoint !== \"\") k = opts.radixPoint.charCodeAt(0);\n\t\t\t\t\t\tvar pos = checkval ? {\n\t\t\t\t\t\t\tbegin: ndx,\n\t\t\t\t\t\t\tend: ndx\n\t\t\t\t\t\t} : caret(input),\n\t\t\t\t\t\t    forwardPosition,\n\t\t\t\t\t\t    c = String.fromCharCode(k);\n\n\t\t\t\t\t\tgetMaskSet().writeOutBuffer = true;\n\t\t\t\t\t\tvar valResult = isValid(pos, c, strict);\n\t\t\t\t\t\tif (valResult !== false) {\n\t\t\t\t\t\t\tresetMaskSet(true);\n\t\t\t\t\t\t\tforwardPosition = valResult.caret !== undefined ? valResult.caret : checkval ? valResult.pos + 1 : seekNext(valResult.pos);\n\t\t\t\t\t\t\tgetMaskSet().p = forwardPosition; //needed for checkval\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (writeOut !== false) {\n\t\t\t\t\t\t\tvar self = this;\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\topts.onKeyValidation.call(self, k, valResult, opts);\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t\tif (getMaskSet().writeOutBuffer && valResult !== false) {\n\t\t\t\t\t\t\t\tvar buffer = getBuffer();\n\t\t\t\t\t\t\t\twriteBuffer(input, buffer, opts.numericInput && valResult.caret === undefined ? seekPrevious(forwardPosition) : forwardPosition, e, checkval !== true);\n\t\t\t\t\t\t\t\tif (checkval !== true) {\n\t\t\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\t\t\t//timeout needed for IE\n\t\t\t\t\t\t\t\t\t\tif (isComplete(buffer) === true) $input.trigger(\"complete\");\n\t\t\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\tif (checkval) {\n\t\t\t\t\t\t\tvalResult.forwardPosition = forwardPosition;\n\t\t\t\t\t\t\treturn valResult;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpasteEvent: function pasteEvent(e) {\n\t\t\t\tvar input = this,\n\t\t\t\t    ev = e.originalEvent || e,\n\t\t\t\t    $input = $(input),\n\t\t\t\t    inputValue = input.inputmask._valueGet(true),\n\t\t\t\t    caretPos = caret(input),\n\t\t\t\t    tempValue;\n\n\t\t\t\tif (isRTL) {\n\t\t\t\t\ttempValue = caretPos.end;\n\t\t\t\t\tcaretPos.end = caretPos.begin;\n\t\t\t\t\tcaretPos.begin = tempValue;\n\t\t\t\t}\n\n\t\t\t\tvar valueBeforeCaret = inputValue.substr(0, caretPos.begin),\n\t\t\t\t    valueAfterCaret = inputValue.substr(caretPos.end, inputValue.length);\n\n\t\t\t\tif (valueBeforeCaret === (isRTL ? getBufferTemplate().reverse() : getBufferTemplate()).slice(0, caretPos.begin).join(\"\")) valueBeforeCaret = \"\";\n\t\t\t\tif (valueAfterCaret === (isRTL ? getBufferTemplate().reverse() : getBufferTemplate()).slice(caretPos.end).join(\"\")) valueAfterCaret = \"\";\n\t\t\t\tif (isRTL) {\n\t\t\t\t\ttempValue = valueBeforeCaret;\n\t\t\t\t\tvalueBeforeCaret = valueAfterCaret;\n\t\t\t\t\tvalueAfterCaret = tempValue;\n\t\t\t\t}\n\n\t\t\t\tif (window.clipboardData && window.clipboardData.getData) {\n\t\t\t\t\t// IE\n\t\t\t\t\tinputValue = valueBeforeCaret + window.clipboardData.getData(\"Text\") + valueAfterCaret;\n\t\t\t\t} else if (ev.clipboardData && ev.clipboardData.getData) {\n\t\t\t\t\tinputValue = valueBeforeCaret + ev.clipboardData.getData(\"text/plain\") + valueAfterCaret;\n\t\t\t\t} else return true; //allow native paste event as fallback ~ masking will continue by inputfallback\n\n\t\t\t\tvar pasteValue = inputValue;\n\t\t\t\tif ($.isFunction(opts.onBeforePaste)) {\n\t\t\t\t\tpasteValue = opts.onBeforePaste(inputValue, opts);\n\t\t\t\t\tif (pasteValue === false) {\n\t\t\t\t\t\treturn e.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\tif (!pasteValue) {\n\t\t\t\t\t\tpasteValue = inputValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcheckVal(input, false, false, isRTL ? pasteValue.split(\"\").reverse() : pasteValue.toString().split(\"\"));\n\t\t\t\twriteBuffer(input, getBuffer(), seekNext(getLastValidPosition()), e, undoValue !== getBuffer().join(\"\"));\n\t\t\t\tif (isComplete(getBuffer()) === true) {\n\t\t\t\t\t$input.trigger(\"complete\");\n\t\t\t\t}\n\n\t\t\t\treturn e.preventDefault();\n\t\t\t},\n\t\t\tinputFallBackEvent: function inputFallBackEvent(e) {\n\t\t\t\t//fallback when keypress fails\n\t\t\t\tvar input = this,\n\t\t\t\t    inputValue = input.inputmask._valueGet();\n\n\t\t\t\t//console.log(inputValue);\n\t\t\t\tif (getBuffer().join(\"\") !== inputValue) {\n\t\t\t\t\tvar caretPos = caret(input);\n\t\t\t\t\tinputValue = inputValue.replace(new RegExp(\"(\" + Inputmask.escapeRegex(getBufferTemplate().join(\"\")) + \")*\"), \"\");\n\n\t\t\t\t\tif (iemobile) {\n\t\t\t\t\t\t//iemobile just set the character at the end althought the caret position is correctly set\n\t\t\t\t\t\tvar inputChar = inputValue.replace(getBuffer().join(\"\"), \"\");\n\t\t\t\t\t\tif (inputChar.length === 1) {\n\t\t\t\t\t\t\tvar keypress = new $.Event(\"keypress\");\n\t\t\t\t\t\t\tkeypress.which = inputChar.charCodeAt(0);\n\t\t\t\t\t\t\tEventHandlers.keypressEvent.call(input, keypress, true, true, false, getMaskSet().validPositions[caretPos.begin - 1] ? caretPos.begin : caretPos.begin - 1);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (caretPos.begin > inputValue.length) {\n\t\t\t\t\t\tcaret(input, inputValue.length);\n\t\t\t\t\t\tcaretPos = caret(input);\n\t\t\t\t\t}\n\t\t\t\t\t//detect & treat possible backspace before static\n\t\t\t\t\tif (getBuffer().length - inputValue.length === 1 && inputValue.charAt(caretPos.begin) !== getBuffer()[caretPos.begin] && inputValue.charAt(caretPos.begin + 1) !== getBuffer()[caretPos.begin] && !isMask(caretPos.begin)) {\n\t\t\t\t\t\te.keyCode = Inputmask.keyCode.BACKSPACE;\n\t\t\t\t\t\tEventHandlers.keydownEvent.call(input, e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar lvp = getLastValidPosition() + 1;\n\t\t\t\t\t\tvar bufferTemplate = getBufferTemplate().join(\"\"); //getBuffer().slice(lvp).join('');\n\t\t\t\t\t\twhile (inputValue.match(Inputmask.escapeRegex(bufferTemplate) + \"$\") === null) {\n\t\t\t\t\t\t\tbufferTemplate = bufferTemplate.slice(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinputValue = inputValue.replace(bufferTemplate, \"\");\n\t\t\t\t\t\tinputValue = inputValue.split(\"\");\n\t\t\t\t\t\tcheckVal(input, true, false, inputValue, e, caretPos.begin < lvp);\n\n\t\t\t\t\t\tif (isComplete(getBuffer()) === true) {\n\t\t\t\t\t\t\t$(input).trigger(\"complete\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t},\n\t\t\tsetValueEvent: function setValueEvent(e) {\n\t\t\t\tthis.inputmask.refreshValue = false;\n\t\t\t\tvar input = this,\n\t\t\t\t    value = input.inputmask._valueGet();\n\t\t\t\tcheckVal(input, true, false, ($.isFunction(opts.onBeforeMask) ? opts.onBeforeMask(value, opts) || value : value).split(\"\"));\n\t\t\t\tundoValue = getBuffer().join(\"\");\n\t\t\t\tif ((opts.clearMaskOnLostFocus || opts.clearIncomplete) && input.inputmask._valueGet() === getBufferTemplate().join(\"\")) {\n\t\t\t\t\tinput.inputmask._valueSet(\"\");\n\t\t\t\t}\n\t\t\t},\n\t\t\tfocusEvent: function focusEvent(e) {\n\t\t\t\tvar input = this,\n\t\t\t\t    nptValue = input.inputmask._valueGet();\n\t\t\t\tif (opts.showMaskOnFocus && (!opts.showMaskOnHover || opts.showMaskOnHover && nptValue === \"\")) {\n\t\t\t\t\tif (input.inputmask._valueGet() !== getBuffer().join(\"\")) {\n\t\t\t\t\t\twriteBuffer(input, getBuffer(), seekNext(getLastValidPosition()));\n\t\t\t\t\t} else if (mouseEnter === false) {\n\t\t\t\t\t\t//only executed on focus without mouseenter\n\t\t\t\t\t\tcaret(input, seekNext(getLastValidPosition()));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (opts.positionCaretOnTab === true) {\n\t\t\t\t\tEventHandlers.clickEvent.apply(input, [e, true]);\n\t\t\t\t}\n\t\t\t\tundoValue = getBuffer().join(\"\");\n\t\t\t},\n\t\t\tmouseleaveEvent: function mouseleaveEvent(e) {\n\t\t\t\tvar input = this;\n\t\t\t\tmouseEnter = false;\n\t\t\t\tif (opts.clearMaskOnLostFocus && document.activeElement !== input) {\n\t\t\t\t\tvar buffer = getBuffer().slice(),\n\t\t\t\t\t    nptValue = input.inputmask._valueGet();\n\t\t\t\t\tif (nptValue !== input.getAttribute(\"placeholder\") && nptValue !== \"\") {\n\t\t\t\t\t\tif (getLastValidPosition() === -1 && nptValue === getBufferTemplate().join(\"\")) {\n\t\t\t\t\t\t\tbuffer = [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//clearout optional tail of the mask\n\t\t\t\t\t\t\tclearOptionalTail(buffer);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twriteBuffer(input, buffer);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tclickEvent: function clickEvent(e, tabbed) {\n\t\t\t\tfunction doRadixFocus(clickPos) {\n\t\t\t\t\tif (opts.radixPoint !== \"\") {\n\t\t\t\t\t\tvar vps = getMaskSet().validPositions;\n\t\t\t\t\t\tif (vps[clickPos] === undefined || vps[clickPos].input === getPlaceholder(clickPos)) {\n\t\t\t\t\t\t\tif (clickPos < seekNext(-1)) return true;\n\t\t\t\t\t\t\tvar radixPos = $.inArray(opts.radixPoint, getBuffer());\n\t\t\t\t\t\t\tif (radixPos !== -1) {\n\t\t\t\t\t\t\t\tfor (var vp in vps) {\n\t\t\t\t\t\t\t\t\tif (radixPos < vp && vps[vp].input !== getPlaceholder(vp)) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tvar input = this;\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t//needed for Chrome ~ initial selection clears after the clickevent\n\t\t\t\t\tif (document.activeElement === input) {\n\t\t\t\t\t\tvar selectedCaret = caret(input);\n\t\t\t\t\t\tif (tabbed) selectedCaret.begin = selectedCaret.end;\n\t\t\t\t\t\tif (selectedCaret.begin === selectedCaret.end) {\n\t\t\t\t\t\t\tswitch (opts.positionCaretOnClick) {\n\t\t\t\t\t\t\t\tcase \"none\":\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"radixFocus\":\n\t\t\t\t\t\t\t\t\tif (doRadixFocus(selectedCaret.begin)) {\n\t\t\t\t\t\t\t\t\t\tvar radixPos = $.inArray(opts.radixPoint, getBuffer().join(\"\"));\n\t\t\t\t\t\t\t\t\t\tcaret(input, opts.numericInput ? seekNext(radixPos) : radixPos);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t//lvp:\n\t\t\t\t\t\t\t\t\tvar clickPosition = selectedCaret.begin,\n\t\t\t\t\t\t\t\t\t    lvclickPosition = getLastValidPosition(clickPosition, true),\n\t\t\t\t\t\t\t\t\t    lastPosition = seekNext(lvclickPosition);\n\n\t\t\t\t\t\t\t\t\tif (clickPosition < lastPosition) {\n\t\t\t\t\t\t\t\t\t\tcaret(input, !isMask(clickPosition) && !isMask(clickPosition - 1) ? seekNext(clickPosition) : clickPosition);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar placeholder = getPlaceholder(lastPosition);\n\t\t\t\t\t\t\t\t\t\tif (placeholder !== \"\" && getBuffer()[lastPosition] !== placeholder && getTest(lastPosition).match.optionalQuantifier !== true || !isMask(lastPosition) && getTest(lastPosition).match.def === placeholder) {\n\t\t\t\t\t\t\t\t\t\t\tlastPosition = seekNext(lastPosition);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcaret(input, lastPosition);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t},\n\t\t\tdblclickEvent: function dblclickEvent(e) {\n\t\t\t\tvar input = this;\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tcaret(input, 0, seekNext(getLastValidPosition()));\n\t\t\t\t}, 0);\n\t\t\t},\n\t\t\tcutEvent: function cutEvent(e) {\n\t\t\t\tvar input = this,\n\t\t\t\t    $input = $(input),\n\t\t\t\t    pos = caret(input),\n\t\t\t\t    ev = e.originalEvent || e;\n\n\t\t\t\t//correct clipboardData\n\t\t\t\tvar clipboardData = window.clipboardData || ev.clipboardData,\n\t\t\t\t    clipData = isRTL ? getBuffer().slice(pos.end, pos.begin) : getBuffer().slice(pos.begin, pos.end);\n\t\t\t\tclipboardData.setData(\"text\", isRTL ? clipData.reverse().join(\"\") : clipData.join(\"\"));\n\t\t\t\tif (document.execCommand) document.execCommand(\"copy\"); // copy selected content to system clipbaord\n\n\t\t\t\thandleRemove(input, Inputmask.keyCode.DELETE, pos);\n\t\t\t\twriteBuffer(input, getBuffer(), getMaskSet().p, e, undoValue !== getBuffer().join(\"\"));\n\n\t\t\t\tif (input.inputmask._valueGet() === getBufferTemplate().join(\"\")) {\n\t\t\t\t\t$input.trigger(\"cleared\");\n\t\t\t\t}\n\t\t\t},\n\t\t\tblurEvent: function blurEvent(e) {\n\t\t\t\tvar $input = $(this),\n\t\t\t\t    input = this;\n\t\t\t\tif (input.inputmask) {\n\t\t\t\t\tvar nptValue = input.inputmask._valueGet(),\n\t\t\t\t\t    buffer = getBuffer().slice();\n\t\t\t\t\tif (undoValue !== buffer.join(\"\")) {\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t//change event should be triggered after the other buffer manipulations on blur\n\t\t\t\t\t\t\t$input.trigger(\"change\");\n\t\t\t\t\t\t\tundoValue = buffer.join(\"\");\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t\tif (nptValue !== \"\") {\n\t\t\t\t\t\tif (opts.clearMaskOnLostFocus) {\n\t\t\t\t\t\t\tif (getLastValidPosition() === -1 && nptValue === getBufferTemplate().join(\"\")) {\n\t\t\t\t\t\t\t\tbuffer = [];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t//clearout optional tail of the mask\n\t\t\t\t\t\t\t\tclearOptionalTail(buffer);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isComplete(buffer) === false) {\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\t$input.trigger(\"incomplete\");\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t\tif (opts.clearIncomplete) {\n\t\t\t\t\t\t\t\tresetMaskSet();\n\t\t\t\t\t\t\t\tif (opts.clearMaskOnLostFocus) {\n\t\t\t\t\t\t\t\t\tbuffer = [];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbuffer = getBufferTemplate().slice();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twriteBuffer(input, buffer, undefined, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tmouseenterEvent: function mouseenterEvent(e) {\n\t\t\t\tvar input = this;\n\t\t\t\tmouseEnter = true;\n\t\t\t\tif (document.activeElement !== input && opts.showMaskOnHover) {\n\t\t\t\t\tif (input.inputmask._valueGet() !== getBuffer().join(\"\")) {\n\t\t\t\t\t\twriteBuffer(input, getBuffer());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tsubmitEvent: function submitEvent(e) {\n\t\t\t\t//trigger change on submit if any\n\t\t\t\tif (undoValue !== getBuffer().join(\"\")) {\n\t\t\t\t\t$el.trigger(\"change\");\n\t\t\t\t}\n\t\t\t\tif (opts.clearMaskOnLostFocus && getLastValidPosition() === -1 && el.inputmask._valueGet && el.inputmask._valueGet() === getBufferTemplate().join(\"\")) {\n\t\t\t\t\tel.inputmask._valueSet(\"\"); //clear masktemplete on submit and still has focus\n\t\t\t\t}\n\t\t\t\tif (opts.removeMaskOnSubmit) {\n\t\t\t\t\tel.inputmask._valueSet(el.inputmask.unmaskedvalue(), true);\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\twriteBuffer(el, getBuffer());\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t},\n\t\t\tresetEvent: function resetEvent(e) {\n\t\t\t\tel.inputmask.refreshValue = true; //indicate a forced refresh when there is a call to the value before leaving the triggering event fn\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t$el.trigger(\"setvalue\");\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t};\n\n\t\tfunction initializeColorMask(input) {\n\t\t\tfunction findCaretPos(clientx) {\n\t\t\t\t//calculate text width\n\t\t\t\tvar e = document.createElement('span'),\n\t\t\t\t    caretPos;\n\t\t\t\tfor (var style in computedStyle) {\n\t\t\t\t\t//clone styles\n\t\t\t\t\tif (isNaN(style) && style.indexOf(\"font\") !== -1) {\n\t\t\t\t\t\te.style[style] = computedStyle[style];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.style.textTransform = computedStyle.textTransform;\n\t\t\t\te.style.letterSpacing = computedStyle.letterSpacing;\n\t\t\t\te.style.position = \"absolute\";\n\t\t\t\te.style.height = \"auto\";\n\t\t\t\te.style.width = \"auto\";\n\t\t\t\te.style.visibility = \"hidden\";\n\t\t\t\te.style.whiteSpace = \"nowrap\";\n\n\t\t\t\tdocument.body.appendChild(e);\n\t\t\t\tvar inputText = input.inputmask._valueGet(),\n\t\t\t\t    previousWidth = 0,\n\t\t\t\t    itl;\n\t\t\t\tfor (caretPos = 0, itl = inputText.length; caretPos <= itl; caretPos++) {\n\t\t\t\t\te.innerHTML += inputText.charAt(caretPos) || \"_\";\n\t\t\t\t\tif (e.offsetWidth >= clientx) {\n\t\t\t\t\t\tvar offset1 = clientx - previousWidth;\n\t\t\t\t\t\tvar offset2 = e.offsetWidth - clientx;\n\t\t\t\t\t\te.innerHTML = inputText.charAt(caretPos);\n\t\t\t\t\t\toffset1 -= e.offsetWidth / 3;\n\t\t\t\t\t\tcaretPos = offset1 < offset2 ? caretPos - 1 : caretPos;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tpreviousWidth = e.offsetWidth;\n\t\t\t\t}\n\t\t\t\tdocument.body.removeChild(e);\n\t\t\t\treturn caretPos;\n\t\t\t}\n\n\t\t\tfunction position() {\n\t\t\t\tcolorMask.style.position = \"absolute\";\n\t\t\t\tcolorMask.style.top = offset.top + \"px\";\n\t\t\t\tcolorMask.style.left = offset.left + \"px\";\n\t\t\t\tcolorMask.style.width = parseInt(input.offsetWidth) - parseInt(computedStyle.paddingLeft) - parseInt(computedStyle.paddingRight) - parseInt(computedStyle.borderLeftWidth) - parseInt(computedStyle.borderRightWidth) + \"px\";\n\t\t\t\tcolorMask.style.height = parseInt(input.offsetHeight) - parseInt(computedStyle.paddingTop) - parseInt(computedStyle.paddingBottom) - parseInt(computedStyle.borderTopWidth) - parseInt(computedStyle.borderBottomWidth) + \"px\";\n\n\t\t\t\tcolorMask.style.lineHeight = colorMask.style.height;\n\t\t\t\tcolorMask.style.zIndex = isNaN(computedStyle.zIndex) ? -1 : computedStyle.zIndex - 1;\n\t\t\t\tcolorMask.style.webkitAppearance = \"textfield\";\n\t\t\t\tcolorMask.style.mozAppearance = \"textfield\";\n\t\t\t\tcolorMask.style.Appearance = \"textfield\";\n\t\t\t}\n\n\t\t\tvar offset = $(input).position(),\n\t\t\t    computedStyle = (input.ownerDocument.defaultView || window).getComputedStyle(input, null),\n\t\t\t    parentNode = input.parentNode;\n\n\t\t\tcolorMask = document.createElement(\"div\");\n\t\t\tdocument.body.appendChild(colorMask); //insert at body to prevent css clash :last-child for example\n\t\t\tfor (var style in computedStyle) {\n\t\t\t\t//clone styles\n\t\t\t\tif (isNaN(style) && style !== \"cssText\" && style.indexOf(\"webkit\") == -1) {\n\t\t\t\t\tcolorMask.style[style] = computedStyle[style];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//restyle input\n\t\t\tinput.style.backgroundColor = \"transparent\";\n\t\t\tinput.style.color = \"transparent\";\n\t\t\tinput.style.webkitAppearance = \"caret\";\n\t\t\tinput.style.mozAppearance = \"caret\";\n\t\t\tinput.style.Appearance = \"caret\";\n\n\t\t\tposition();\n\n\t\t\t//event passthrough\n\t\t\t$(window).on(\"resize\", function (e) {\n\t\t\t\toffset = $(input).position();\n\t\t\t\tcomputedStyle = (input.ownerDocument.defaultView || window).getComputedStyle(input, null);\n\t\t\t\tposition();\n\t\t\t});\n\t\t\t$(input).on(\"click\", function (e) {\n\t\t\t\tcaret(input, findCaretPos(e.clientX));\n\t\t\t\treturn EventHandlers.clickEvent.call(this, [e]);\n\t\t\t});\n\t\t\t$(input).on(\"keydown\", function (e) {\n\t\t\t\tif (!e.shiftKey && opts.insertMode !== false) {\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\trenderColorMask(input);\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfunction renderColorMask(input, buffer, caretPos) {\n\t\t\tfunction handleStatic() {\n\t\t\t\tif (!isStatic && (test.fn === null || testPos.input === undefined)) {\n\t\t\t\t\tisStatic = true;\n\t\t\t\t\tmaskTemplate += \"<span class='im-static''>\";\n\t\t\t\t} else if (isStatic && test.fn !== null && testPos.input !== undefined) {\n\t\t\t\t\tisStatic = false;\n\t\t\t\t\tmaskTemplate += \"</span>\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (colorMask !== undefined) {\n\t\t\t\tbuffer = buffer || getBuffer();\n\t\t\t\tif (caretPos === undefined) {\n\t\t\t\t\tcaretPos = caret(input);\n\t\t\t\t} else if (caretPos.begin === undefined) {\n\t\t\t\t\tcaretPos = { begin: caretPos, end: caretPos };\n\t\t\t\t}\n\n\t\t\t\tvar maskTemplate = \"\",\n\t\t\t\t    isStatic = false;\n\t\t\t\tif (buffer != \"\") {\n\t\t\t\t\tvar ndxIntlzr,\n\t\t\t\t\t    pos = 0,\n\t\t\t\t\t    test,\n\t\t\t\t\t    testPos,\n\t\t\t\t\t    lvp = getLastValidPosition();\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (pos === caretPos.begin && document.activeElement === input) {\n\t\t\t\t\t\t\tmaskTemplate += \"<span class='im-caret' style='border-right-width: 1px;border-right-style: solid;'></span>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (getMaskSet().validPositions[pos]) {\n\t\t\t\t\t\t\ttestPos = getMaskSet().validPositions[pos];\n\t\t\t\t\t\t\ttest = testPos.match;\n\t\t\t\t\t\t\tndxIntlzr = testPos.locator.slice();\n\t\t\t\t\t\t\thandleStatic();\n\t\t\t\t\t\t\tmaskTemplate += testPos.input;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttestPos = getTestTemplate(pos, ndxIntlzr, pos - 1);\n\t\t\t\t\t\t\ttest = testPos.match;\n\t\t\t\t\t\t\tndxIntlzr = testPos.locator.slice();\n\t\t\t\t\t\t\tif (opts.jitMasking === false || pos < lvp || typeof opts.jitMasking === \"number\" && isFinite(opts.jitMasking) && opts.jitMasking > pos) {\n\t\t\t\t\t\t\t\thandleStatic();\n\t\t\t\t\t\t\t\tmaskTemplate += getPlaceholder(pos, test);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t} while ((maxLength === undefined || pos < maxLength) && (test.fn !== null || test.def !== \"\") || lvp > pos);\n\t\t\t\t}\n\t\t\t\tcolorMask.innerHTML = maskTemplate;\n\t\t\t}\n\t\t}\n\n\t\tfunction mask(elem) {\n\t\t\tfunction isElementTypeSupported(input, opts) {\n\t\t\t\tfunction patchValueProperty(npt) {\n\t\t\t\t\tvar valueGet;\n\t\t\t\t\tvar valueSet;\n\n\t\t\t\t\tfunction patchValhook(type) {\n\t\t\t\t\t\tif ($.valHooks && ($.valHooks[type] === undefined || $.valHooks[type].inputmaskpatch !== true)) {\n\t\t\t\t\t\t\tvar valhookGet = $.valHooks[type] && $.valHooks[type].get ? $.valHooks[type].get : function (elem) {\n\t\t\t\t\t\t\t\treturn elem.value;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tvar valhookSet = $.valHooks[type] && $.valHooks[type].set ? $.valHooks[type].set : function (elem, value) {\n\t\t\t\t\t\t\t\telem.value = value;\n\t\t\t\t\t\t\t\treturn elem;\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t$.valHooks[type] = {\n\t\t\t\t\t\t\t\tget: function get(elem) {\n\t\t\t\t\t\t\t\t\tif (elem.inputmask) {\n\t\t\t\t\t\t\t\t\t\tif (elem.inputmask.opts.autoUnmask) {\n\t\t\t\t\t\t\t\t\t\t\treturn elem.inputmask.unmaskedvalue();\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar result = valhookGet(elem);\n\t\t\t\t\t\t\t\t\t\t\treturn getLastValidPosition(undefined, undefined, elem.inputmask.maskset.validPositions) !== -1 || opts.nullable !== true ? result : \"\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else return valhookGet(elem);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tset: function set(elem, value) {\n\t\t\t\t\t\t\t\t\tvar $elem = $(elem),\n\t\t\t\t\t\t\t\t\t    result;\n\t\t\t\t\t\t\t\t\tresult = valhookSet(elem, value);\n\t\t\t\t\t\t\t\t\tif (elem.inputmask) {\n\t\t\t\t\t\t\t\t\t\t$elem.trigger(\"setvalue\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tinputmaskpatch: true\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction getter() {\n\t\t\t\t\t\tif (this.inputmask) {\n\t\t\t\t\t\t\treturn this.inputmask.opts.autoUnmask ? this.inputmask.unmaskedvalue() : getLastValidPosition() !== -1 || opts.nullable !== true ? document.activeElement === this && opts.clearMaskOnLostFocus ? (isRTL ? clearOptionalTail(getBuffer().slice()).reverse() : clearOptionalTail(getBuffer().slice())).join(\"\") : valueGet.call(this) : \"\";\n\t\t\t\t\t\t} else return valueGet.call(this);\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction setter(value) {\n\t\t\t\t\t\tvalueSet.call(this, value);\n\t\t\t\t\t\tif (this.inputmask) {\n\t\t\t\t\t\t\t$(this).trigger(\"setvalue\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction installNativeValueSetFallback(npt) {\n\t\t\t\t\t\tEventRuler.on(npt, \"mouseenter\", function (event) {\n\t\t\t\t\t\t\tvar $input = $(this),\n\t\t\t\t\t\t\t    input = this,\n\t\t\t\t\t\t\t    value = input.inputmask._valueGet();\n\t\t\t\t\t\t\tif (value !== getBuffer().join(\"\") /*&& getLastValidPosition() > 0*/) {\n\t\t\t\t\t\t\t\t\t$input.trigger(\"setvalue\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!npt.inputmask.__valueGet) {\n\t\t\t\t\t\tif (opts.noValuePatching !== true) {\n\t\t\t\t\t\t\tif (Object.getOwnPropertyDescriptor) {\n\t\t\t\t\t\t\t\tif (typeof Object.getPrototypeOf !== \"function\") {\n\t\t\t\t\t\t\t\t\tObject.getPrototypeOf = _typeof(\"test\".__proto__) === \"object\" ? function (object) {\n\t\t\t\t\t\t\t\t\t\treturn object.__proto__;\n\t\t\t\t\t\t\t\t\t} : function (object) {\n\t\t\t\t\t\t\t\t\t\treturn object.constructor.prototype;\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar valueProperty = Object.getPrototypeOf ? Object.getOwnPropertyDescriptor(Object.getPrototypeOf(npt), \"value\") : undefined;\n\t\t\t\t\t\t\t\tif (valueProperty && valueProperty.get && valueProperty.set) {\n\t\t\t\t\t\t\t\t\tvalueGet = valueProperty.get;\n\t\t\t\t\t\t\t\t\tvalueSet = valueProperty.set;\n\t\t\t\t\t\t\t\t\tObject.defineProperty(npt, \"value\", {\n\t\t\t\t\t\t\t\t\t\tget: getter,\n\t\t\t\t\t\t\t\t\t\tset: setter,\n\t\t\t\t\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else if (npt.tagName !== \"INPUT\") {\n\t\t\t\t\t\t\t\t\tvalueGet = function valueGet() {\n\t\t\t\t\t\t\t\t\t\treturn this.textContent;\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tvalueSet = function valueSet(value) {\n\t\t\t\t\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tObject.defineProperty(npt, \"value\", {\n\t\t\t\t\t\t\t\t\t\tget: getter,\n\t\t\t\t\t\t\t\t\t\tset: setter,\n\t\t\t\t\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (document.__lookupGetter__ && npt.__lookupGetter__(\"value\")) {\n\t\t\t\t\t\t\t\tvalueGet = npt.__lookupGetter__(\"value\");\n\t\t\t\t\t\t\t\tvalueSet = npt.__lookupSetter__(\"value\");\n\n\t\t\t\t\t\t\t\tnpt.__defineGetter__(\"value\", getter);\n\t\t\t\t\t\t\t\tnpt.__defineSetter__(\"value\", setter);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnpt.inputmask.__valueGet = valueGet; //store native property getter\n\t\t\t\t\t\t\tnpt.inputmask.__valueSet = valueSet; //store native property setter\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnpt.inputmask._valueGet = function (overruleRTL) {\n\t\t\t\t\t\t\treturn isRTL && overruleRTL !== true ? valueGet.call(this.el).split(\"\").reverse().join(\"\") : valueGet.call(this.el);\n\t\t\t\t\t\t};\n\t\t\t\t\t\tnpt.inputmask._valueSet = function (value, overruleRTL) {\n\t\t\t\t\t\t\t//null check is needed for IE8 => otherwise converts to \"null\"\n\t\t\t\t\t\t\tvalueSet.call(this.el, value === null || value === undefined ? \"\" : overruleRTL !== true && isRTL ? value.split(\"\").reverse().join(\"\") : value);\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (valueGet === undefined) {\n\t\t\t\t\t\t\t//jquery.val fallback\n\t\t\t\t\t\t\tvalueGet = function valueGet() {\n\t\t\t\t\t\t\t\treturn this.value;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tvalueSet = function valueSet(value) {\n\t\t\t\t\t\t\t\tthis.value = value;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tpatchValhook(npt.type);\n\t\t\t\t\t\t\tinstallNativeValueSetFallback(npt);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar elementType = input.getAttribute(\"type\");\n\t\t\t\tvar isSupported = input.tagName === \"INPUT\" && $.inArray(elementType, opts.supportsInputType) !== -1 || input.isContentEditable || input.tagName === \"TEXTAREA\";\n\t\t\t\tif (!isSupported) {\n\t\t\t\t\tif (input.tagName === \"INPUT\") {\n\t\t\t\t\t\tvar el = document.createElement(\"input\");\n\t\t\t\t\t\tel.setAttribute(\"type\", elementType);\n\t\t\t\t\t\tisSupported = el.type === \"text\"; //apply mask only if the type is not natively supported\n\t\t\t\t\t\tel = null;\n\t\t\t\t\t} else isSupported = \"partial\";\n\t\t\t\t}\n\t\t\t\tif (isSupported !== false) {\n\t\t\t\t\tpatchValueProperty(input);\n\t\t\t\t}\n\t\t\t\treturn isSupported;\n\t\t\t}\n\n\t\t\t//unbind all events - to make sure that no other mask will interfere when re-masking\n\t\t\tEventRuler.off(el);\n\t\t\tvar isSupported = isElementTypeSupported(elem, opts);\n\t\t\tif (isSupported !== false) {\n\t\t\t\tel = elem;\n\t\t\t\t$el = $(el);\n\n\t\t\t\tif (el.dir === \"rtl\" || opts.rightAlign) {\n\t\t\t\t\tel.style.textAlign = \"right\";\n\t\t\t\t}\n\n\t\t\t\tif (el.dir === \"rtl\" || opts.numericInput) {\n\t\t\t\t\tel.dir = \"ltr\";\n\t\t\t\t\tel.removeAttribute(\"dir\");\n\t\t\t\t\tel.inputmask.isRTL = true;\n\t\t\t\t\tisRTL = true;\n\t\t\t\t}\n\n\t\t\t\tif (opts.colorMask === true) {\n\t\t\t\t\tinitializeColorMask(el);\n\t\t\t\t}\n\n\t\t\t\tif (android) {\n\t\t\t\t\tif (el.hasOwnProperty(\"inputmode\")) {\n\t\t\t\t\t\tel.inputmode = opts.inputmode;\n\t\t\t\t\t\tel.setAttribute(\"inputmode\", opts.inputmode);\n\t\t\t\t\t}\n\t\t\t\t\tif (opts.androidHack === \"rtfm\") {\n\t\t\t\t\t\tif (opts.colorMask !== true) {\n\t\t\t\t\t\t\tinitializeColorMask(el);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tel.type = \"password\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isSupported === true) {\n\t\t\t\t\t//bind events\n\t\t\t\t\tEventRuler.on(el, \"submit\", EventHandlers.submitEvent);\n\t\t\t\t\tEventRuler.on(el, \"reset\", EventHandlers.resetEvent);\n\n\t\t\t\t\tEventRuler.on(el, \"mouseenter\", EventHandlers.mouseenterEvent);\n\t\t\t\t\tEventRuler.on(el, \"blur\", EventHandlers.blurEvent);\n\t\t\t\t\tEventRuler.on(el, \"focus\", EventHandlers.focusEvent);\n\t\t\t\t\tEventRuler.on(el, \"mouseleave\", EventHandlers.mouseleaveEvent);\n\t\t\t\t\tif (opts.colorMask !== true) EventRuler.on(el, \"click\", EventHandlers.clickEvent);\n\t\t\t\t\tEventRuler.on(el, \"dblclick\", EventHandlers.dblclickEvent);\n\t\t\t\t\tEventRuler.on(el, \"paste\", EventHandlers.pasteEvent);\n\t\t\t\t\tEventRuler.on(el, \"dragdrop\", EventHandlers.pasteEvent);\n\t\t\t\t\tEventRuler.on(el, \"drop\", EventHandlers.pasteEvent);\n\t\t\t\t\tEventRuler.on(el, \"cut\", EventHandlers.cutEvent);\n\t\t\t\t\tEventRuler.on(el, \"complete\", opts.oncomplete);\n\t\t\t\t\tEventRuler.on(el, \"incomplete\", opts.onincomplete);\n\t\t\t\t\tEventRuler.on(el, \"cleared\", opts.oncleared);\n\t\t\t\t\tif (!android || opts.inputEventOnly !== true) {\n\t\t\t\t\t\tEventRuler.on(el, \"keydown\", EventHandlers.keydownEvent);\n\t\t\t\t\t\tEventRuler.on(el, \"keypress\", EventHandlers.keypressEvent);\n\t\t\t\t\t}\n\t\t\t\t\tEventRuler.on(el, \"compositionstart\", $.noop);\n\t\t\t\t\tEventRuler.on(el, \"compositionupdate\", $.noop);\n\t\t\t\t\tEventRuler.on(el, \"compositionend\", $.noop);\n\t\t\t\t\tEventRuler.on(el, \"keyup\", $.noop);\n\t\t\t\t\tEventRuler.on(el, \"input\", EventHandlers.inputFallBackEvent);\n\t\t\t\t\tEventRuler.on(el, \"beforeinput\", $.noop); //https://github.com/w3c/input-events - to implement\n\t\t\t\t}\n\t\t\t\tEventRuler.on(el, \"setvalue\", EventHandlers.setValueEvent);\n\n\t\t\t\t//apply mask\n\t\t\t\tgetBufferTemplate(); //initialize the buffer and getmasklength\n\t\t\t\tif (el.inputmask._valueGet() !== \"\" || opts.clearMaskOnLostFocus === false || document.activeElement === el) {\n\t\t\t\t\tvar initialValue = $.isFunction(opts.onBeforeMask) ? opts.onBeforeMask(el.inputmask._valueGet(), opts) || el.inputmask._valueGet() : el.inputmask._valueGet();\n\t\t\t\t\tcheckVal(el, true, false, initialValue.split(\"\"));\n\t\t\t\t\tvar buffer = getBuffer().slice();\n\t\t\t\t\tundoValue = buffer.join(\"\");\n\t\t\t\t\t// Wrap document.activeElement in a try/catch block since IE9 throw \"Unspecified error\" if document.activeElement is undefined when we are in an IFrame.\n\t\t\t\t\tif (isComplete(buffer) === false) {\n\t\t\t\t\t\tif (opts.clearIncomplete) {\n\t\t\t\t\t\t\tresetMaskSet();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (opts.clearMaskOnLostFocus && document.activeElement !== el) {\n\t\t\t\t\t\tif (getLastValidPosition() === -1) {\n\t\t\t\t\t\t\tbuffer = [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclearOptionalTail(buffer);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\twriteBuffer(el, buffer);\n\t\t\t\t\tif (document.activeElement === el) {\n\t\t\t\t\t\t//position the caret when in focus\n\t\t\t\t\t\tcaret(el, seekNext(getLastValidPosition()));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//action object\n\t\tvar valueBuffer;\n\t\tif (actionObj !== undefined) {\n\t\t\tswitch (actionObj.action) {\n\t\t\t\tcase \"isComplete\":\n\t\t\t\t\tel = actionObj.el;\n\t\t\t\t\treturn isComplete(getBuffer());\n\t\t\t\tcase \"unmaskedvalue\":\n\t\t\t\t\tif (el === undefined || actionObj.value !== undefined) {\n\t\t\t\t\t\tvalueBuffer = actionObj.value;\n\t\t\t\t\t\tvalueBuffer = ($.isFunction(opts.onBeforeMask) ? opts.onBeforeMask(valueBuffer, opts) || valueBuffer : valueBuffer).split(\"\");\n\t\t\t\t\t\tcheckVal(undefined, false, false, isRTL ? valueBuffer.reverse() : valueBuffer);\n\t\t\t\t\t\tif ($.isFunction(opts.onBeforeWrite)) opts.onBeforeWrite(undefined, getBuffer(), 0, opts);\n\t\t\t\t\t}\n\t\t\t\t\treturn unmaskedvalue(el);\n\t\t\t\tcase \"mask\":\n\t\t\t\t\tmask(el);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"format\":\n\t\t\t\t\tvalueBuffer = ($.isFunction(opts.onBeforeMask) ? opts.onBeforeMask(actionObj.value, opts) || actionObj.value : actionObj.value).split(\"\");\n\t\t\t\t\tcheckVal(undefined, false, false, isRTL ? valueBuffer.reverse() : valueBuffer);\n\t\t\t\t\tif ($.isFunction(opts.onBeforeWrite)) opts.onBeforeWrite(undefined, getBuffer(), 0, opts);\n\n\t\t\t\t\tif (actionObj.metadata) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tvalue: isRTL ? getBuffer().slice().reverse().join(\"\") : getBuffer().join(\"\"),\n\t\t\t\t\t\t\tmetadata: maskScope.call(this, {\n\t\t\t\t\t\t\t\t\"action\": \"getmetadata\"\n\t\t\t\t\t\t\t}, maskset, opts)\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn isRTL ? getBuffer().slice().reverse().join(\"\") : getBuffer().join(\"\");\n\t\t\t\tcase \"isValid\":\n\t\t\t\t\tif (actionObj.value) {\n\t\t\t\t\t\tvalueBuffer = actionObj.value.split(\"\");\n\t\t\t\t\t\tcheckVal(undefined, false, true, isRTL ? valueBuffer.reverse() : valueBuffer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactionObj.value = getBuffer().join(\"\");\n\t\t\t\t\t}\n\t\t\t\t\tvar buffer = getBuffer();\n\t\t\t\t\tvar rl = determineLastRequiredPosition(),\n\t\t\t\t\t    lmib = buffer.length - 1;\n\t\t\t\t\tfor (; lmib > rl; lmib--) {\n\t\t\t\t\t\tif (isMask(lmib)) break;\n\t\t\t\t\t}\n\t\t\t\t\tbuffer.splice(rl, lmib + 1 - rl);\n\n\t\t\t\t\treturn isComplete(buffer) && actionObj.value === getBuffer().join(\"\");\n\t\t\t\tcase \"getemptymask\":\n\t\t\t\t\treturn getBufferTemplate().join(\"\");\n\t\t\t\tcase \"remove\":\n\t\t\t\t\tif (el) {\n\t\t\t\t\t\t$el = $(el);\n\t\t\t\t\t\t//writeout the unmaskedvalue\n\t\t\t\t\t\tel.inputmask._valueSet(unmaskedvalue(el));\n\t\t\t\t\t\t//unbind all events\n\t\t\t\t\t\tEventRuler.off(el);\n\t\t\t\t\t\t//restore the value property\n\t\t\t\t\t\tvar valueProperty;\n\t\t\t\t\t\tif (Object.getOwnPropertyDescriptor && Object.getPrototypeOf) {\n\t\t\t\t\t\t\tvalueProperty = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(el), \"value\");\n\t\t\t\t\t\t\tif (valueProperty) {\n\t\t\t\t\t\t\t\tif (el.inputmask.__valueGet) {\n\t\t\t\t\t\t\t\t\tObject.defineProperty(el, \"value\", {\n\t\t\t\t\t\t\t\t\t\tget: el.inputmask.__valueGet,\n\t\t\t\t\t\t\t\t\t\tset: el.inputmask.__valueSet,\n\t\t\t\t\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (document.__lookupGetter__ && el.__lookupGetter__(\"value\")) {\n\t\t\t\t\t\t\tif (el.inputmask.__valueGet) {\n\t\t\t\t\t\t\t\tel.__defineGetter__(\"value\", el.inputmask.__valueGet);\n\t\t\t\t\t\t\t\tel.__defineSetter__(\"value\", el.inputmask.__valueSet);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//clear data\n\t\t\t\t\t\tel.inputmask = undefined;\n\t\t\t\t\t}\n\t\t\t\t\treturn el;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"getmetadata\":\n\t\t\t\t\tif ($.isArray(maskset.metadata)) {\n\t\t\t\t\t\tvar maskTarget = getMaskTemplate(true, 0, false).join(\"\");\n\t\t\t\t\t\t$.each(maskset.metadata, function (ndx, mtdt) {\n\t\t\t\t\t\t\tif (mtdt.mask === maskTarget) {\n\t\t\t\t\t\t\t\tmaskTarget = mtdt;\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn maskTarget;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn maskset.metadata;\n\t\t\t}\n\t\t}\n\t}\n\n\t//make inputmask available\n\twindow.Inputmask = Inputmask;\n\treturn Inputmask;\n});\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*\n * Input Mask plugin for jquery\n * http://github.com/RobinHerbots/jquery.inputmask\n * Copyright (c) 2010 -\tRobin Herbots\n * Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)\n * Version: 0.0.0-dev\n */\n\n(function (factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine([\"jquery\", \"inputmask\"], factory);\n\t} else if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === \"object\") {\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"./inputmask\"));\n\t} else {\n\t\tfactory(jQuery, window.Inputmask);\n\t}\n})(function ($, Inputmask) {\n\tif ($.fn.inputmask === undefined) {\n\t\t//jquery plugin\n\t\t$.fn.inputmask = function (fn, options) {\n\t\t\tvar nptmask,\n\t\t\t    input = this[0];\n\t\t\tif (options === undefined) options = {};\n\t\t\tif (typeof fn === \"string\") {\n\t\t\t\tswitch (fn) {\n\t\t\t\t\tcase \"unmaskedvalue\":\n\t\t\t\t\t\treturn input && input.inputmask ? input.inputmask.unmaskedvalue() : $(input).val();\n\t\t\t\t\tcase \"remove\":\n\t\t\t\t\t\treturn this.each(function () {\n\t\t\t\t\t\t\tif (this.inputmask) this.inputmask.remove();\n\t\t\t\t\t\t});\n\t\t\t\t\tcase \"getemptymask\":\n\t\t\t\t\t\treturn input && input.inputmask ? input.inputmask.getemptymask() : \"\";\n\t\t\t\t\tcase \"hasMaskedValue\":\n\t\t\t\t\t\t//check wheter the returned value is masked or not; currently only works reliable when using jquery.val fn to retrieve the value\n\t\t\t\t\t\treturn input && input.inputmask ? input.inputmask.hasMaskedValue() : false;\n\t\t\t\t\tcase \"isComplete\":\n\t\t\t\t\t\treturn input && input.inputmask ? input.inputmask.isComplete() : true;\n\t\t\t\t\tcase \"getmetadata\":\n\t\t\t\t\t\t//return mask metadata if exists\n\t\t\t\t\t\treturn input && input.inputmask ? input.inputmask.getmetadata() : undefined;\n\t\t\t\t\tcase \"setvalue\":\n\t\t\t\t\t\t$(input).val(options);\n\t\t\t\t\t\tif (input && input.inputmask === undefined) {\n\t\t\t\t\t\t\t//reactivate jquery.clone\n\t\t\t\t\t\t\t$(input).triggerHandler(\"setvalue\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"option\":\n\t\t\t\t\t\tif (typeof options === \"string\") {\n\t\t\t\t\t\t\tif (input && input.inputmask !== undefined) {\n\t\t\t\t\t\t\t\treturn input.inputmask.option(options);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn this.each(function () {\n\t\t\t\t\t\t\t\tif (this.inputmask !== undefined) {\n\t\t\t\t\t\t\t\t\treturn this.inputmask.option(options);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\toptions.alias = fn;\n\t\t\t\t\t\tnptmask = new Inputmask(options);\n\t\t\t\t\t\treturn this.each(function () {\n\t\t\t\t\t\t\tnptmask.mask(this);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ((typeof fn === \"undefined\" ? \"undefined\" : _typeof(fn)) == \"object\") {\n\t\t\t\tnptmask = new Inputmask(fn);\n\t\t\t\tif (fn.mask === undefined && fn.alias === undefined) {\n\t\t\t\t\treturn this.each(function () {\n\t\t\t\t\t\tif (this.inputmask !== undefined) {\n\t\t\t\t\t\t\treturn this.inputmask.option(fn);\n\t\t\t\t\t\t} else nptmask.mask(this);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn this.each(function () {\n\t\t\t\t\t\tnptmask.mask(this);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (fn === undefined) {\n\t\t\t\t//look for data-inputmask atributes\n\t\t\t\treturn this.each(function () {\n\t\t\t\t\tnptmask = new Inputmask(options);\n\t\t\t\t\tnptmask.mask(this);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\treturn $.fn.inputmask;\n});\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function ($) {\n    \"use strict\";\n\n    if (!$.browser) {\n        $.browser = {};\n        $.browser.mozilla = /mozilla/.test(navigator.userAgent.toLowerCase()) && !/webkit/.test(navigator.userAgent.toLowerCase());\n        $.browser.webkit = /webkit/.test(navigator.userAgent.toLowerCase());\n        $.browser.opera = /opera/.test(navigator.userAgent.toLowerCase());\n        $.browser.msie = /msie/.test(navigator.userAgent.toLowerCase());\n    }\n\n    var methods = {\n        destroy: function destroy() {\n            $(this).unbind(\".maskMoney\");\n\n            if ($.browser.msie) {\n                this.onpaste = null;\n            }\n            return this;\n        },\n\n        mask: function mask(value) {\n            return this.each(function () {\n                var $this = $(this);\n                if (typeof value === \"number\") {\n                    $this.val(value);\n                }\n                return $this.trigger(\"mask\");\n            });\n        },\n\n        unmasked: function unmasked() {\n            return this.map(function () {\n                var value = $(this).val() || \"0\",\n                    isNegative = value.indexOf(\"-\") !== -1,\n                    decimalPart;\n                // get the last position of the array that is a number(coercion makes \"\" to be evaluated as false)\n                $(value.split(/\\D/).reverse()).each(function (index, element) {\n                    if (element) {\n                        decimalPart = element;\n                        return false;\n                    }\n                });\n                value = value.replace(/\\D/g, \"\");\n                value = value.replace(new RegExp(decimalPart + \"$\"), \".\" + decimalPart);\n                if (isNegative) {\n                    value = \"-\" + value;\n                }\n                return parseFloat(value);\n            });\n        },\n\n        init: function init(parameters) {\n            parameters = $.extend({\n                prefix: \"\",\n                suffix: \"\",\n                affixesStay: true,\n                thousands: \",\",\n                decimal: \".\",\n                precision: 2,\n                allowZero: false,\n                allowNegative: false\n            }, parameters);\n\n            return this.each(function () {\n                var $input = $(this),\n                    settings,\n                    onFocusValue;\n\n                // data-* api\n                settings = $.extend({}, parameters);\n                settings = $.extend(settings, $input.data());\n\n                function getInputSelection() {\n                    var el = $input.get(0),\n                        start = 0,\n                        end = 0,\n                        normalizedValue,\n                        range,\n                        textInputRange,\n                        len,\n                        endRange;\n\n                    if (typeof el.selectionStart === \"number\" && typeof el.selectionEnd === \"number\") {\n                        start = el.selectionStart;\n                        end = el.selectionEnd;\n                    } else {\n                        range = document.selection.createRange();\n\n                        if (range && range.parentElement() === el) {\n                            len = el.value.length;\n                            normalizedValue = el.value.replace(/\\r\\n/g, \"\\n\");\n\n                            // Create a working TextRange that lives only in the input\n                            textInputRange = el.createTextRange();\n                            textInputRange.moveToBookmark(range.getBookmark());\n\n                            // Check if the start and end of the selection are at the very end\n                            // of the input, since moveStart/moveEnd doesn't return what we want\n                            // in those cases\n                            endRange = el.createTextRange();\n                            endRange.collapse(false);\n\n                            if (textInputRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\n                                start = end = len;\n                            } else {\n                                start = -textInputRange.moveStart(\"character\", -len);\n                                start += normalizedValue.slice(0, start).split(\"\\n\").length - 1;\n\n                                if (textInputRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\n                                    end = len;\n                                } else {\n                                    end = -textInputRange.moveEnd(\"character\", -len);\n                                    end += normalizedValue.slice(0, end).split(\"\\n\").length - 1;\n                                }\n                            }\n                        }\n                    }\n\n                    return {\n                        start: start,\n                        end: end\n                    };\n                } // getInputSelection\n\n                function canInputMoreNumbers() {\n                    var haventReachedMaxLength = !($input.val().length >= $input.attr(\"maxlength\") && $input.attr(\"maxlength\") >= 0),\n                        selection = getInputSelection(),\n                        start = selection.start,\n                        end = selection.end,\n                        haveNumberSelected = selection.start !== selection.end && $input.val().substring(start, end).match(/\\d/) ? true : false,\n                        startWithZero = $input.val().substring(0, 1) === \"0\";\n                    return haventReachedMaxLength || haveNumberSelected || startWithZero;\n                }\n\n                function setCursorPosition(pos) {\n                    $input.each(function (index, elem) {\n                        if (elem.setSelectionRange) {\n                            elem.focus();\n                            elem.setSelectionRange(pos, pos);\n                        } else if (elem.createTextRange) {\n                            var range = elem.createTextRange();\n                            range.collapse(true);\n                            range.moveEnd(\"character\", pos);\n                            range.moveStart(\"character\", pos);\n                            range.select();\n                        }\n                    });\n                }\n\n                function setSymbol(value) {\n                    var operator = \"\";\n                    if (value.indexOf(\"-\") > -1) {\n                        value = value.replace(\"-\", \"\");\n                        operator = \"-\";\n                    }\n                    return operator + settings.prefix + value + settings.suffix;\n                }\n\n                function maskValue(value) {\n                    var negative = value.indexOf(\"-\") > -1 && settings.allowNegative ? \"-\" : \"\",\n                        onlyNumbers = value.replace(/[^0-9]/g, \"\"),\n                        integerPart = onlyNumbers.slice(0, onlyNumbers.length - settings.precision),\n                        newValue,\n                        decimalPart,\n                        leadingZeros;\n\n                    // remove initial zeros\n                    integerPart = integerPart.replace(/^0*/g, \"\");\n                    // put settings.thousands every 3 chars\n                    integerPart = integerPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, settings.thousands);\n                    if (integerPart === \"\") {\n                        integerPart = \"0\";\n                    }\n                    newValue = negative + integerPart;\n\n                    if (settings.precision > 0) {\n                        decimalPart = onlyNumbers.slice(onlyNumbers.length - settings.precision);\n                        leadingZeros = new Array(settings.precision + 1 - decimalPart.length).join(0);\n                        newValue += settings.decimal + leadingZeros + decimalPart;\n                    }\n                    return setSymbol(newValue);\n                }\n\n                function maskAndPosition(startPos) {\n                    var originalLen = $input.val().length,\n                        newLen;\n                    $input.val(maskValue($input.val()));\n                    newLen = $input.val().length;\n                    startPos = startPos - (originalLen - newLen);\n                    setCursorPosition(startPos);\n                }\n\n                function mask() {\n                    var value = $input.val();\n                    if (settings.precision > 0 && value.indexOf(settings.decimal) < 0) {\n                        value += settings.decimal + new Array(settings.precision + 1).join(0);\n                    }\n                    $input.val(maskValue(value));\n                }\n\n                function changeSign() {\n                    var inputValue = $input.val();\n                    if (settings.allowNegative) {\n                        if (inputValue !== \"\" && inputValue.charAt(0) === \"-\") {\n                            return inputValue.replace(\"-\", \"\");\n                        } else {\n                            return \"-\" + inputValue;\n                        }\n                    } else {\n                        return inputValue;\n                    }\n                }\n\n                function preventDefault(e) {\n                    if (e.preventDefault) {\n                        //standard browsers\n                        e.preventDefault();\n                    } else {\n                        // old internet explorer\n                        e.returnValue = false;\n                    }\n                }\n\n                function keypressEvent(e) {\n                    e = e || window.event;\n                    var key = e.which || e.charCode || e.keyCode,\n                        keyPressedChar,\n                        selection,\n                        startPos,\n                        endPos,\n                        value;\n                    //added to handle an IE \"special\" event\n                    if (key === undefined) {\n                        return false;\n                    }\n\n                    // any key except the numbers 0-9\n                    if (key < 48 || key > 57) {\n                        // -(minus) key\n                        if (key === 45) {\n                            $input.val(changeSign());\n                            return false;\n                            // +(plus) key\n                        } else if (key === 43) {\n                            $input.val($input.val().replace(\"-\", \"\"));\n                            return false;\n                            // enter key or tab key\n                        } else if (key === 13 || key === 9) {\n                            return true;\n                        } else if ($.browser.mozilla && (key === 37 || key === 39) && e.charCode === 0) {\n                            // needed for left arrow key or right arrow key with firefox\n                            // the charCode part is to avoid allowing \"%\"(e.charCode 0, e.keyCode 37)\n                            return true;\n                        } else {\n                            // any other key with keycode less than 48 and greater than 57\n                            preventDefault(e);\n                            return true;\n                        }\n                    } else if (!canInputMoreNumbers()) {\n                        return false;\n                    } else {\n                        preventDefault(e);\n\n                        keyPressedChar = String.fromCharCode(key);\n                        selection = getInputSelection();\n                        startPos = selection.start;\n                        endPos = selection.end;\n                        value = $input.val();\n                        $input.val(value.substring(0, startPos) + keyPressedChar + value.substring(endPos, value.length));\n                        maskAndPosition(startPos + 1);\n                        return false;\n                    }\n                }\n\n                function keydownEvent(e) {\n                    e = e || window.event;\n                    var key = e.which || e.charCode || e.keyCode,\n                        selection,\n                        startPos,\n                        endPos,\n                        value,\n                        lastNumber;\n                    //needed to handle an IE \"special\" event\n                    if (key === undefined) {\n                        return false;\n                    }\n\n                    selection = getInputSelection();\n                    startPos = selection.start;\n                    endPos = selection.end;\n\n                    if (key === 8 || key === 46 || key === 63272) {\n                        // backspace or delete key (with special case for safari)\n                        preventDefault(e);\n\n                        value = $input.val();\n                        // not a selection\n                        if (startPos === endPos) {\n                            // backspace\n                            if (key === 8) {\n                                if (settings.suffix === \"\") {\n                                    startPos -= 1;\n                                } else {\n                                    // needed to find the position of the last number to be erased\n                                    lastNumber = value.split(\"\").reverse().join(\"\").search(/\\d/);\n                                    startPos = value.length - lastNumber - 1;\n                                    endPos = startPos + 1;\n                                }\n                                //delete\n                            } else {\n                                endPos += 1;\n                            }\n                        }\n\n                        $input.val(value.substring(0, startPos) + value.substring(endPos, value.length));\n\n                        maskAndPosition(startPos);\n                        return false;\n                    } else if (key === 9) {\n                        // tab key\n                        return true;\n                    } else {\n                        // any other key\n                        return true;\n                    }\n                }\n\n                function focusEvent() {\n                    onFocusValue = $input.val();\n                    mask();\n                    var input = $input.get(0),\n                        textRange;\n                    if (input.createTextRange) {\n                        textRange = input.createTextRange();\n                        textRange.collapse(false); // set the cursor at the end of the input\n                        textRange.select();\n                    }\n                }\n\n                function cutPasteEvent() {\n                    setTimeout(function () {\n                        mask();\n                    }, 0);\n                }\n\n                function getDefaultMask() {\n                    var n = parseFloat(\"0\") / Math.pow(10, settings.precision);\n                    return n.toFixed(settings.precision).replace(new RegExp(\"\\\\.\", \"g\"), settings.decimal);\n                }\n\n                function blurEvent(e) {\n                    if ($.browser.msie) {\n                        keypressEvent(e);\n                    }\n\n                    if ($input.val() === \"\" || $input.val() === setSymbol(getDefaultMask())) {\n                        if (!settings.allowZero) {\n                            $input.val(\"\");\n                        } else if (!settings.affixesStay) {\n                            $input.val(getDefaultMask());\n                        } else {\n                            $input.val(setSymbol(getDefaultMask()));\n                        }\n                    } else {\n                        if (!settings.affixesStay) {\n                            var newValue = $input.val().replace(settings.prefix, \"\").replace(settings.suffix, \"\");\n                            $input.val(newValue);\n                        }\n                    }\n                    if ($input.val() !== onFocusValue) {\n                        $input.change();\n                    }\n                }\n\n                function clickEvent() {\n                    var input = $input.get(0),\n                        length;\n                    if (input.setSelectionRange) {\n                        length = $input.val().length;\n                        input.setSelectionRange(length, length);\n                    } else {\n                        $input.val($input.val());\n                    }\n                }\n\n                $input.unbind(\".maskMoney\");\n                $input.bind(\"keypress.maskMoney\", keypressEvent);\n                $input.bind(\"keydown.maskMoney\", keydownEvent);\n                $input.bind(\"blur.maskMoney\", blurEvent);\n                $input.bind(\"focus.maskMoney\", focusEvent);\n                $input.bind(\"click.maskMoney\", clickEvent);\n                $input.bind(\"cut.maskMoney\", cutPasteEvent);\n                $input.bind(\"paste.maskMoney\", cutPasteEvent);\n                $input.bind(\"mask.maskMoney\", mask);\n            });\n        }\n    };\n\n    $.fn.maskMoney = function (method) {\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if ((typeof method === \"undefined\" ? \"undefined\" : _typeof(method)) === \"object\" || !method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.maskMoney\");\n        }\n    };\n})(window.jQuery || window.Zepto);\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS5tYXNrTW9uZXkuanMiXSwibmFtZXMiOlsiJCIsImJyb3dzZXIiLCJtb3ppbGxhIiwidGVzdCIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsInRvTG93ZXJDYXNlIiwid2Via2l0Iiwib3BlcmEiLCJtc2llIiwibWV0aG9kcyIsImRlc3Ryb3kiLCJ1bmJpbmQiLCJvbnBhc3RlIiwibWFzayIsInZhbHVlIiwiZWFjaCIsIiR0aGlzIiwidmFsIiwidHJpZ2dlciIsInVubWFza2VkIiwibWFwIiwiaXNOZWdhdGl2ZSIsImluZGV4T2YiLCJkZWNpbWFsUGFydCIsInNwbGl0IiwicmV2ZXJzZSIsImluZGV4IiwiZWxlbWVudCIsInJlcGxhY2UiLCJSZWdFeHAiLCJwYXJzZUZsb2F0IiwiaW5pdCIsInBhcmFtZXRlcnMiLCJleHRlbmQiLCJwcmVmaXgiLCJzdWZmaXgiLCJhZmZpeGVzU3RheSIsInRob3VzYW5kcyIsImRlY2ltYWwiLCJwcmVjaXNpb24iLCJhbGxvd1plcm8iLCJhbGxvd05lZ2F0aXZlIiwiJGlucHV0Iiwic2V0dGluZ3MiLCJvbkZvY3VzVmFsdWUiLCJkYXRhIiwiZ2V0SW5wdXRTZWxlY3Rpb24iLCJlbCIsImdldCIsInN0YXJ0IiwiZW5kIiwibm9ybWFsaXplZFZhbHVlIiwicmFuZ2UiLCJ0ZXh0SW5wdXRSYW5nZSIsImxlbiIsImVuZFJhbmdlIiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJkb2N1bWVudCIsInNlbGVjdGlvbiIsImNyZWF0ZVJhbmdlIiwicGFyZW50RWxlbWVudCIsImxlbmd0aCIsImNyZWF0ZVRleHRSYW5nZSIsIm1vdmVUb0Jvb2ttYXJrIiwiZ2V0Qm9va21hcmsiLCJjb2xsYXBzZSIsImNvbXBhcmVFbmRQb2ludHMiLCJtb3ZlU3RhcnQiLCJzbGljZSIsIm1vdmVFbmQiLCJjYW5JbnB1dE1vcmVOdW1iZXJzIiwiaGF2ZW50UmVhY2hlZE1heExlbmd0aCIsImF0dHIiLCJoYXZlTnVtYmVyU2VsZWN0ZWQiLCJzdWJzdHJpbmciLCJtYXRjaCIsInN0YXJ0V2l0aFplcm8iLCJzZXRDdXJzb3JQb3NpdGlvbiIsInBvcyIsImVsZW0iLCJzZXRTZWxlY3Rpb25SYW5nZSIsImZvY3VzIiwic2VsZWN0Iiwic2V0U3ltYm9sIiwib3BlcmF0b3IiLCJtYXNrVmFsdWUiLCJuZWdhdGl2ZSIsIm9ubHlOdW1iZXJzIiwiaW50ZWdlclBhcnQiLCJuZXdWYWx1ZSIsImxlYWRpbmdaZXJvcyIsIkFycmF5Iiwiam9pbiIsIm1hc2tBbmRQb3NpdGlvbiIsInN0YXJ0UG9zIiwib3JpZ2luYWxMZW4iLCJuZXdMZW4iLCJjaGFuZ2VTaWduIiwiaW5wdXRWYWx1ZSIsImNoYXJBdCIsInByZXZlbnREZWZhdWx0IiwiZSIsInJldHVyblZhbHVlIiwia2V5cHJlc3NFdmVudCIsIndpbmRvdyIsImV2ZW50Iiwia2V5Iiwid2hpY2giLCJjaGFyQ29kZSIsImtleUNvZGUiLCJrZXlQcmVzc2VkQ2hhciIsImVuZFBvcyIsInVuZGVmaW5lZCIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsImtleWRvd25FdmVudCIsImxhc3ROdW1iZXIiLCJzZWFyY2giLCJmb2N1c0V2ZW50IiwiaW5wdXQiLCJ0ZXh0UmFuZ2UiLCJjdXRQYXN0ZUV2ZW50Iiwic2V0VGltZW91dCIsImdldERlZmF1bHRNYXNrIiwibiIsIk1hdGgiLCJwb3ciLCJ0b0ZpeGVkIiwiYmx1ckV2ZW50IiwiY2hhbmdlIiwiY2xpY2tFdmVudCIsImJpbmQiLCJmbiIsIm1hc2tNb25leSIsIm1ldGhvZCIsImFwcGx5IiwicHJvdG90eXBlIiwiY2FsbCIsImFyZ3VtZW50cyIsImVycm9yIiwialF1ZXJ5IiwiWmVwdG8iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxDQUFDLFVBQVVBLENBQVYsRUFBYTtBQUNWOztBQUNBLFFBQUksQ0FBQ0EsRUFBRUMsT0FBUCxFQUFnQjtBQUNaRCxVQUFFQyxPQUFGLEdBQVksRUFBWjtBQUNBRCxVQUFFQyxPQUFGLENBQVVDLE9BQVYsR0FBb0IsVUFBVUMs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TzlILFFBQVE4SCxNQUFSLEVBQWdCQyxLQUFoQixDQUFzQixJQUF0QixFQUE0QjVDLE1BQU02QyxTQUFOLENBQWdCcEUsS0FBaEIsQ0FBc0JxRSxJQUF0QixDQUEyQkMsU0FBM0IsRUFBc0MsQ0FBdEMsQ0FBNUIsQ0FBUDtBQUNILFNBRkQsTUFFTyxJQUFJLFFBQU9KLE1BQVAseUNBQU9BLE1BQVAsT0FBa0IsUUFBbEIsSUFBOEIsQ0FBRUEsTUFBcEMsRUFBNEM7QUFDL0MsbUJBQU85SCxRQUFRc0IsSUFBUixDQUFheUcsS0FBYixDQUFtQixJQUFuQixFQUF5QkcsU0FBekIsQ0FBUDtBQUNILFNBRk0sTUFFQTtBQUNINUksY0FBRTZJLEtBQUYsQ0FBUSxZQUFhTCxNQUFiLEdBQXNCLHFDQUE5QjtBQUNIO0FBQ0osS0FSRDtBQVNILENBalpELEVBaVpHOUIsT0FBT29DLE1BQVAsSUFBaUJwQyxPQUFPcUMsS0FqWjNCIiwiZmlsZSI6ImpxdWVyeS5tYXNrTW9uZXkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKCQpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBpZiAoISQuYnJvd3Nlcikge1xuICAgICAgICAkLmJyb3dzZXIgPSB7fTtcbiAgICAgICAgJC5icm93c2VyLm1vemlsbGEgPSAvbW96aWxsYS8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkpICYmICEvd2Via2l0Ly50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKSk7XG4gICAgICAgICQuYnJvd3Nlci53ZWJraXQgPSAvd2Via2l0Ly50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKSk7XG4gICAgICAgICQuYnJvd3Nlci5vcGVyYSA9IC9vcGVyYS8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkpO1xuICAgICAgICAkLmJyb3dzZXIubXNpZSA9IC9tc2llLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKSk7XG4gICAgfVxuXG4gICAgdmFyIG1ldGhvZHMgPSB7XG4gICAgICAgIGRlc3Ryb3kgOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkKHRoaXMpLnVuYmluZChcIi5tYXNrTW9uZXlcIik7XG5cbiAgICAgICAgICAgIGlmICgkLmJyb3dzZXIubXNpZSkge1xuICAgICAgICAgICAgICAgIHRoaXMub25wYXN0ZSA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSxcblxuICAgICAgICBtYXNrIDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgJHRoaXMudmFsKHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuICR0aGlzLnRyaWdnZXIoXCJtYXNrXCIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgdW5tYXNrZWQgOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9ICgkKHRoaXMpLnZhbCgpIHx8IFwiMFwiKSxcbiAgICAgICAgICAgICAgICAgICAgaXNOZWdhdGl2ZSA9IHZhbHVlLmluZGV4T2YoXCItXCIpICE9PSAtMSxcbiAgICAgICAgICAgICAgICAgICAgZGVjaW1hbFBhcnQ7XG4gICAgICAgICAgICAgICAgLy8gZ2V0IHRoZSBsYXN0IHBvc2l0aW9uIG9mIHRoZSBhcnJheSB0aGF0IGlzIGEgbnVtYmVyKGNvZXJjaW9uIG1ha2VzIFwiXCIgdG8gYmUgZXZhbHVhdGVkIGFzIGZhbHNlKVxuICAgICAgICAgICAgICAgICQodmFsdWUuc3BsaXQoL1xcRC8pLnJldmVyc2UoKSkuZWFjaChmdW5jdGlvbiAoaW5kZXgsIGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYoZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVjaW1hbFBhcnQgPSBlbGVtZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoL1xcRC9nLCBcIlwiKTtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UobmV3IFJlZ0V4cChkZWNpbWFsUGFydCArIFwiJFwiKSwgXCIuXCIgKyBkZWNpbWFsUGFydCk7XG4gICAgICAgICAgICAgICAgaWYgKGlzTmVnYXRpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBcIi1cIiArIHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcGFyc2VGbG9hdCh2YWx1ZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcblxuICAgICAgICBpbml0IDogZnVuY3Rpb24gKHBhcmFtZXRlcnMpIHtcbiAgICAgICAgICAgIHBhcmFtZXRlcnMgPSAkLmV4dGVuZCh7XG4gICAgICAgICAgICAgICAgcHJlZml4OiBcIlwiLFxuICAgICAgICAgICAgICAgIHN1ZmZpeDogXCJcIixcbiAgICAgICAgICAgICAgICBhZmZpeGVzU3RheTogdHJ1ZSxcbiAgICAgICAgICAgICAgICB0aG91c2FuZHM6IFwiLFwiLFxuICAgICAgICAgICAgICAgIGRlY2ltYWw6IFwiLlwiLFxuICAgICAgICAgICAgICAgIHByZWNpc2lvbjogMixcbiAgICAgICAgICAgICAgICBhbGxvd1plcm86IGZhbHNlLFxuICAgICAgICAgICAgICAgIGFsbG93TmVnYXRpdmU6IGZhbHNlXG4gICAgICAgICAgICB9LCBwYXJhbWV0ZXJzKTtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyICRpbnB1dCA9ICQodGhpcyksIHNldHRpbmdzLFxuICAgICAgICAgICAgICAgICAgICBvbkZvY3VzVmFsdWU7XG5cbiAgICAgICAgICAgICAgICAvLyBkYXRhLSogYXBpXG4gICAgICAgICAgICAgICAgc2V0dGluZ3MgPSAkLmV4dGVuZCh7fSwgcGFyYW1ldGVycyk7XG4gICAgICAgICAgICAgICAgc2V0dGluZ3MgPSAkLmV4dGVuZChzZXR0aW5ncywgJGlucHV0LmRhdGEoKSk7XG5cbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBnZXRJbnB1dFNlbGVjdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGVsID0gJGlucHV0LmdldCgwKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuZCA9IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBub3JtYWxpemVkVmFsdWUsXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRJbnB1dFJhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbGVuLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kUmFuZ2U7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBlbC5zZWxlY3Rpb25TdGFydCA9PT0gXCJudW1iZXJcIiAmJiB0eXBlb2YgZWwuc2VsZWN0aW9uRW5kID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFydCA9IGVsLnNlbGVjdGlvblN0YXJ0O1xuICAgICAgICAgICAgICAgICAgICAgICAgZW5kID0gZWwuc2VsZWN0aW9uRW5kO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UgPSBkb2N1bWVudC5zZWxlY3Rpb24uY3JlYXRlUmFuZ2UoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJhbmdlICYmIHJhbmdlLnBhcmVudEVsZW1lbnQoKSA9PT0gZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZW4gPSBlbC52YWx1ZS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9ybWFsaXplZFZhbHVlID0gZWwudmFsdWUucmVwbGFjZSgvXFxyXFxuL2csIFwiXFxuXCIpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQ3JlYXRlIGEgd29ya2luZyBUZXh0UmFuZ2UgdGhhdCBsaXZlcyBvbmx5IGluIHRoZSBpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHRJbnB1dFJhbmdlID0gZWwuY3JlYXRlVGV4dFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dElucHV0UmFuZ2UubW92ZVRvQm9va21hcmsocmFuZ2UuZ2V0Qm9va21hcmsoKSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgc3RhcnQgYW5kIGVuZCBvZiB0aGUgc2VsZWN0aW9uIGFyZSBhdCB0aGUgdmVyeSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBvZiB0aGUgaW5wdXQsIHNpbmNlIG1vdmVTdGFydC9tb3ZlRW5kIGRvZXNuJ3QgcmV0dXJuIHdoYXQgd2Ugd2FudFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGluIHRob3NlIGNhc2VzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kUmFuZ2UgPSBlbC5jcmVhdGVUZXh0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmRSYW5nZS5jb2xsYXBzZShmYWxzZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGV4dElucHV0UmFuZ2UuY29tcGFyZUVuZFBvaW50cyhcIlN0YXJ0VG9FbmRcIiwgZW5kUmFuZ2UpID4gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBlbmQgPSBsZW47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSAtdGV4dElucHV0UmFuZ2UubW92ZVN0YXJ0KFwiY2hhcmFjdGVyXCIsIC1sZW4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydCArPSBub3JtYWxpemVkVmFsdWUuc2xpY2UoMCwgc3RhcnQpLnNwbGl0KFwiXFxuXCIpLmxlbmd0aCAtIDE7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRleHRJbnB1dFJhbmdlLmNvbXBhcmVFbmRQb2ludHMoXCJFbmRUb0VuZFwiLCBlbmRSYW5nZSkgPiAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kID0gbGVuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kID0gLXRleHRJbnB1dFJhbmdlLm1vdmVFbmQoXCJjaGFyYWN0ZXJcIiwgLWxlbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQgKz0gbm9ybWFsaXplZFZhbHVlLnNsaWNlKDAsIGVuZCkuc3BsaXQoXCJcXG5cIikubGVuZ3RoIC0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFydDogc3RhcnQsXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmQ6IGVuZFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0gLy8gZ2V0SW5wdXRTZWxlY3Rpb25cblxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGNhbklucHV0TW9yZU51bWJlcnMoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBoYXZlbnRSZWFjaGVkTWF4TGVuZ3RoID0gISgkaW5wdXQudmFsKCkubGVuZ3RoID49ICRpbnB1dC5hdHRyKFwibWF4bGVuZ3RoXCIpICYmICRpbnB1dC5hdHRyKFwibWF4bGVuZ3RoXCIpID49IDApLFxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uID0gZ2V0SW5wdXRTZWxlY3Rpb24oKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gc2VsZWN0aW9uLnN0YXJ0LFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kID0gc2VsZWN0aW9uLmVuZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhdmVOdW1iZXJTZWxlY3RlZCA9IChzZWxlY3Rpb24uc3RhcnQgIT09IHNlbGVjdGlvbi5lbmQgJiYgJGlucHV0LnZhbCgpLnN1YnN0cmluZyhzdGFydCwgZW5kKS5tYXRjaCgvXFxkLykpID8gdHJ1ZSA6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRXaXRoWmVybyA9ICgkaW5wdXQudmFsKCkuc3Vic3RyaW5nKDAsIDEpID09PSBcIjBcIik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBoYXZlbnRSZWFjaGVkTWF4TGVuZ3RoIHx8IGhhdmVOdW1iZXJTZWxlY3RlZCB8fCBzdGFydFdpdGhaZXJvO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHNldEN1cnNvclBvc2l0aW9uKHBvcykge1xuICAgICAgICAgICAgICAgICAgICAkaW5wdXQuZWFjaChmdW5jdGlvbiAoaW5kZXgsIGVsZW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtLnNldFNlbGVjdGlvblJhbmdlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbS5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW0uc2V0U2VsZWN0aW9uUmFuZ2UocG9zLCBwb3MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChlbGVtLmNyZWF0ZVRleHRSYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IGVsZW0uY3JlYXRlVGV4dFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UuY29sbGFwc2UodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UubW92ZUVuZChcImNoYXJhY3RlclwiLCBwb3MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLm1vdmVTdGFydChcImNoYXJhY3RlclwiLCBwb3MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBzZXRTeW1ib2wodmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG9wZXJhdG9yID0gXCJcIjtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlLmluZGV4T2YoXCItXCIpID4gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZShcIi1cIiwgXCJcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcGVyYXRvciA9IFwiLVwiO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBvcGVyYXRvciArIHNldHRpbmdzLnByZWZpeCArIHZhbHVlICsgc2V0dGluZ3Muc3VmZml4O1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIG1hc2tWYWx1ZSh2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbmVnYXRpdmUgPSAodmFsdWUuaW5kZXhPZihcIi1cIikgPiAtMSAmJiBzZXR0aW5ncy5hbGxvd05lZ2F0aXZlKSA/IFwiLVwiIDogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ubHlOdW1iZXJzID0gdmFsdWUucmVwbGFjZSgvW14wLTldL2csIFwiXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW50ZWdlclBhcnQgPSBvbmx5TnVtYmVycy5zbGljZSgwLCBvbmx5TnVtYmVycy5sZW5ndGggLSBzZXR0aW5ncy5wcmVjaXNpb24pLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3VmFsdWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWNpbWFsUGFydCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlYWRpbmdaZXJvcztcblxuICAgICAgICAgICAgICAgICAgICAvLyByZW1vdmUgaW5pdGlhbCB6ZXJvc1xuICAgICAgICAgICAgICAgICAgICBpbnRlZ2VyUGFydCA9IGludGVnZXJQYXJ0LnJlcGxhY2UoL14wKi9nLCBcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gcHV0IHNldHRpbmdzLnRob3VzYW5kcyBldmVyeSAzIGNoYXJzXG4gICAgICAgICAgICAgICAgICAgIGludGVnZXJQYXJ0ID0gaW50ZWdlclBhcnQucmVwbGFjZSgvXFxCKD89KFxcZHszfSkrKD8hXFxkKSkvZywgc2V0dGluZ3MudGhvdXNhbmRzKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGludGVnZXJQYXJ0ID09PSBcIlwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnRlZ2VyUGFydCA9IFwiMFwiO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIG5ld1ZhbHVlID0gbmVnYXRpdmUgKyBpbnRlZ2VyUGFydDtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoc2V0dGluZ3MucHJlY2lzaW9uID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVjaW1hbFBhcnQgPSBvbmx5TnVtYmVycy5zbGljZShvbmx5TnVtYmVycy5sZW5ndGggLSBzZXR0aW5ncy5wcmVjaXNpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgbGVhZGluZ1plcm9zID0gbmV3IEFycmF5KChzZXR0aW5ncy5wcmVjaXNpb24gKyAxKSAtIGRlY2ltYWxQYXJ0Lmxlbmd0aCkuam9pbigwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld1ZhbHVlICs9IHNldHRpbmdzLmRlY2ltYWwgKyBsZWFkaW5nWmVyb3MgKyBkZWNpbWFsUGFydDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2V0U3ltYm9sKG5ld1ZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIG1hc2tBbmRQb3NpdGlvbihzdGFydFBvcykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgb3JpZ2luYWxMZW4gPSAkaW5wdXQudmFsKCkubGVuZ3RoLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3TGVuO1xuICAgICAgICAgICAgICAgICAgICAkaW5wdXQudmFsKG1hc2tWYWx1ZSgkaW5wdXQudmFsKCkpKTtcbiAgICAgICAgICAgICAgICAgICAgbmV3TGVuID0gJGlucHV0LnZhbCgpLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgc3RhcnRQb3MgPSBzdGFydFBvcyAtIChvcmlnaW5hbExlbiAtIG5ld0xlbik7XG4gICAgICAgICAgICAgICAgICAgIHNldEN1cnNvclBvc2l0aW9uKHN0YXJ0UG9zKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBtYXNrKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSAkaW5wdXQudmFsKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzZXR0aW5ncy5wcmVjaXNpb24gPiAwICYmIHZhbHVlLmluZGV4T2Yoc2V0dGluZ3MuZGVjaW1hbCkgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSArPSBzZXR0aW5ncy5kZWNpbWFsICsgbmV3IEFycmF5KHNldHRpbmdzLnByZWNpc2lvbisxKS5qb2luKDApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICRpbnB1dC52YWwobWFza1ZhbHVlKHZhbHVlKSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gY2hhbmdlU2lnbigpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlucHV0VmFsdWUgPSAkaW5wdXQudmFsKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzZXR0aW5ncy5hbGxvd05lZ2F0aXZlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5wdXRWYWx1ZSAhPT0gXCJcIiAmJiBpbnB1dFZhbHVlLmNoYXJBdCgwKSA9PT0gXCItXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW5wdXRWYWx1ZS5yZXBsYWNlKFwiLVwiLCBcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFwiLVwiICsgaW5wdXRWYWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnB1dFZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gcHJldmVudERlZmF1bHQoZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZS5wcmV2ZW50RGVmYXVsdCkgeyAvL3N0YW5kYXJkIGJyb3dzZXJzXG4gICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7IC8vIG9sZCBpbnRlcm5ldCBleHBsb3JlclxuICAgICAgICAgICAgICAgICAgICAgICAgZS5yZXR1cm5WYWx1ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24ga2V5cHJlc3NFdmVudChlKSB7XG4gICAgICAgICAgICAgICAgICAgIGUgPSBlIHx8IHdpbmRvdy5ldmVudDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGtleSA9IGUud2hpY2ggfHwgZS5jaGFyQ29kZSB8fCBlLmtleUNvZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXlQcmVzc2VkQ2hhcixcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0UG9zLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kUG9zLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIC8vYWRkZWQgdG8gaGFuZGxlIGFuIElFIFwic3BlY2lhbFwiIGV2ZW50XG4gICAgICAgICAgICAgICAgICAgIGlmIChrZXkgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gYW55IGtleSBleGNlcHQgdGhlIG51bWJlcnMgMC05XG4gICAgICAgICAgICAgICAgICAgIGlmIChrZXkgPCA0OCB8fCBrZXkgPiA1Nykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gLShtaW51cykga2V5XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoa2V5ID09PSA0NSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC52YWwoY2hhbmdlU2lnbigpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyArKHBsdXMpIGtleVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09IDQzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJGlucHV0LnZhbCgkaW5wdXQudmFsKCkucmVwbGFjZShcIi1cIiwgXCJcIikpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGVudGVyIGtleSBvciB0YWIga2V5XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gMTMgfHwga2V5ID09PSA5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCQuYnJvd3Nlci5tb3ppbGxhICYmIChrZXkgPT09IDM3IHx8IGtleSA9PT0gMzkpICYmIGUuY2hhckNvZGUgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBuZWVkZWQgZm9yIGxlZnQgYXJyb3cga2V5IG9yIHJpZ2h0IGFycm93IGtleSB3aXRoIGZpcmVmb3hcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB0aGUgY2hhckNvZGUgcGFydCBpcyB0byBhdm9pZCBhbGxvd2luZyBcIiVcIihlLmNoYXJDb2RlIDAsIGUua2V5Q29kZSAzNylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7IC8vIGFueSBvdGhlciBrZXkgd2l0aCBrZXljb2RlIGxlc3MgdGhhbiA0OCBhbmQgZ3JlYXRlciB0aGFuIDU3XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldmVudERlZmF1bHQoZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoIWNhbklucHV0TW9yZU51bWJlcnMoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmVudERlZmF1bHQoZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGtleVByZXNzZWRDaGFyID0gU3RyaW5nLmZyb21DaGFyQ29kZShrZXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uID0gZ2V0SW5wdXRTZWxlY3Rpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0UG9zID0gc2VsZWN0aW9uLnN0YXJ0O1xuICAgICAgICAgICAgICAgICAgICAgICAgZW5kUG9zID0gc2VsZWN0aW9uLmVuZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gJGlucHV0LnZhbCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgJGlucHV0LnZhbCh2YWx1ZS5zdWJzdHJpbmcoMCwgc3RhcnRQb3MpICsga2V5UHJlc3NlZENoYXIgKyB2YWx1ZS5zdWJzdHJpbmcoZW5kUG9zLCB2YWx1ZS5sZW5ndGgpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hc2tBbmRQb3NpdGlvbihzdGFydFBvcyArIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24ga2V5ZG93bkV2ZW50KGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZSA9IGUgfHwgd2luZG93LmV2ZW50O1xuICAgICAgICAgICAgICAgICAgICB2YXIga2V5ID0gZS53aGljaCB8fCBlLmNoYXJDb2RlIHx8IGUua2V5Q29kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0UG9zLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kUG9zLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBsYXN0TnVtYmVyO1xuICAgICAgICAgICAgICAgICAgICAvL25lZWRlZCB0byBoYW5kbGUgYW4gSUUgXCJzcGVjaWFsXCIgZXZlbnRcbiAgICAgICAgICAgICAgICAgICAgaWYgKGtleSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBzZWxlY3Rpb24gPSBnZXRJbnB1dFNlbGVjdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICBzdGFydFBvcyA9IHNlbGVjdGlvbi5zdGFydDtcbiAgICAgICAgICAgICAgICAgICAgZW5kUG9zID0gc2VsZWN0aW9uLmVuZDtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoa2V5ID09PSA4IHx8IGtleSA9PT0gNDYgfHwga2V5ID09PSA2MzI3MikgeyAvLyBiYWNrc3BhY2Ugb3IgZGVsZXRlIGtleSAod2l0aCBzcGVjaWFsIGNhc2UgZm9yIHNhZmFyaSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXZlbnREZWZhdWx0KGUpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9ICRpbnB1dC52YWwoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG5vdCBhIHNlbGVjdGlvblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXJ0UG9zID09PSBlbmRQb3MpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBiYWNrc3BhY2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoa2V5ID09PSA4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZXR0aW5ncy5zdWZmaXggPT09IFwiXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0UG9zIC09IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBuZWVkZWQgdG8gZmluZCB0aGUgcG9zaXRpb24gb2YgdGhlIGxhc3QgbnVtYmVyIHRvIGJlIGVyYXNlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdE51bWJlciA9IHZhbHVlLnNwbGl0KFwiXCIpLnJldmVyc2UoKS5qb2luKFwiXCIpLnNlYXJjaCgvXFxkLyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydFBvcyA9IHZhbHVlLmxlbmd0aCAtIGxhc3ROdW1iZXIgLSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kUG9zID0gc3RhcnRQb3MgKyAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9kZWxldGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmRQb3MgKz0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC52YWwodmFsdWUuc3Vic3RyaW5nKDAsIHN0YXJ0UG9zKSArIHZhbHVlLnN1YnN0cmluZyhlbmRQb3MsIHZhbHVlLmxlbmd0aCkpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXNrQW5kUG9zaXRpb24oc3RhcnRQb3MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gOSkgeyAvLyB0YWIga2V5XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsgLy8gYW55IG90aGVyIGtleVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBmb2N1c0V2ZW50KCkge1xuICAgICAgICAgICAgICAgICAgICBvbkZvY3VzVmFsdWUgPSAkaW5wdXQudmFsKCk7XG4gICAgICAgICAgICAgICAgICAgIG1hc2soKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlucHV0ID0gJGlucHV0LmdldCgwKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRSYW5nZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlucHV0LmNyZWF0ZVRleHRSYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dFJhbmdlID0gaW5wdXQuY3JlYXRlVGV4dFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0UmFuZ2UuY29sbGFwc2UoZmFsc2UpOyAvLyBzZXQgdGhlIGN1cnNvciBhdCB0aGUgZW5kIG9mIHRoZSBpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dFJhbmdlLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gY3V0UGFzdGVFdmVudCgpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hc2soKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgMCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gZ2V0RGVmYXVsdE1hc2soKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBuID0gcGFyc2VGbG9hdChcIjBcIikgLyBNYXRoLnBvdygxMCwgc2V0dGluZ3MucHJlY2lzaW9uKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChuLnRvRml4ZWQoc2V0dGluZ3MucHJlY2lzaW9uKSkucmVwbGFjZShuZXcgUmVnRXhwKFwiXFxcXC5cIiwgXCJnXCIpLCBzZXR0aW5ncy5kZWNpbWFsKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBibHVyRXZlbnQoZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoJC5icm93c2VyLm1zaWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleXByZXNzRXZlbnQoZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAoJGlucHV0LnZhbCgpID09PSBcIlwiIHx8ICRpbnB1dC52YWwoKSA9PT0gc2V0U3ltYm9sKGdldERlZmF1bHRNYXNrKCkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXNldHRpbmdzLmFsbG93WmVybykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC52YWwoXCJcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCFzZXR0aW5ncy5hZmZpeGVzU3RheSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC52YWwoZ2V0RGVmYXVsdE1hc2soKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC52YWwoc2V0U3ltYm9sKGdldERlZmF1bHRNYXNrKCkpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghc2V0dGluZ3MuYWZmaXhlc1N0YXkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmV3VmFsdWUgPSAkaW5wdXQudmFsKCkucmVwbGFjZShzZXR0aW5ncy5wcmVmaXgsIFwiXCIpLnJlcGxhY2Uoc2V0dGluZ3Muc3VmZml4LCBcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaW5wdXQudmFsKG5ld1ZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoJGlucHV0LnZhbCgpICE9PSBvbkZvY3VzVmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC5jaGFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGNsaWNrRXZlbnQoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpbnB1dCA9ICRpbnB1dC5nZXQoMCksXG4gICAgICAgICAgICAgICAgICAgICAgICBsZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dC5zZXRTZWxlY3Rpb25SYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGVuZ3RoID0gJGlucHV0LnZhbCgpLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0LnNldFNlbGVjdGlvblJhbmdlKGxlbmd0aCwgbGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC52YWwoJGlucHV0LnZhbCgpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICRpbnB1dC51bmJpbmQoXCIubWFza01vbmV5XCIpO1xuICAgICAgICAgICAgICAgICRpbnB1dC5iaW5kKFwia2V5cHJlc3MubWFza01vbmV5XCIsIGtleXByZXNzRXZlbnQpO1xuICAgICAgICAgICAgICAgICRpbnB1dC5iaW5kKFwia2V5ZG93bi5tYXNrTW9uZXlcIiwga2V5ZG93bkV2ZW50KTtcbiAgICAgICAgICAgICAgICAkaW5wdXQuYmluZChcImJsdXIubWFza01vbmV5XCIsIGJsdXJFdmVudCk7XG4gICAgICAgICAgICAgICAgJGlucHV0LmJpbmQoXCJmb2N1cy5tYXNrTW9uZXlcIiwgZm9jdXNFdmVudCk7XG4gICAgICAgICAgICAgICAgJGlucHV0LmJpbmQoXCJjbGljay5tYXNrTW9uZXlcIiwgY2xpY2tFdmVudCk7XG4gICAgICAgICAgICAgICAgJGlucHV0LmJpbmQoXCJjdXQubWFza01vbmV5XCIsIGN1dFBhc3RlRXZlbnQpO1xuICAgICAgICAgICAgICAgICRpbnB1dC5iaW5kKFwicGFzdGUubWFza01vbmV5XCIsIGN1dFBhc3RlRXZlbnQpO1xuICAgICAgICAgICAgICAgICRpbnB1dC5iaW5kKFwibWFzay5tYXNrTW9uZXlcIiwgbWFzayk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAkLmZuLm1hc2tNb25leSA9IGZ1bmN0aW9uIChtZXRob2QpIHtcbiAgICAgICAgaWYgKG1ldGhvZHNbbWV0aG9kXSkge1xuICAgICAgICAgICAgcmV0dXJuIG1ldGhvZHNbbWV0aG9kXS5hcHBseSh0aGlzLCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpKTtcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgbWV0aG9kID09PSBcIm9iamVjdFwiIHx8ICEgbWV0aG9kKSB7XG4gICAgICAgICAgICByZXR1cm4gbWV0aG9kcy5pbml0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAkLmVycm9yKFwiTWV0aG9kIFwiICsgIG1ldGhvZCArIFwiIGRvZXMgbm90IGV4aXN0IG9uIGpRdWVyeS5tYXNrTW9uZXlcIik7XG4gICAgICAgIH1cbiAgICB9O1xufSkod2luZG93LmpRdWVyeSB8fCB3aW5kb3cuWmVwdG8pO1xuIl19\n\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n$(document).ready(function () {\n  !function (u, e) {\n    \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) && \"undefined\" != typeof module ? module.exports = e() : \"function\" == typeof define && define.amd ? define(e) : u.imask = e();\n  }(this, function () {\n    function u(u) {\n      return \"string\" == typeof u || u instanceof String;\n    }\n\n    function e(e, t) {\n      var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : \"\";\n      return u(e) ? e : e ? t : n;\n    }\n\n    function t(u) {\n      var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n          n = t.MaskFactory(u, e);\n      return n.bindEvents(), n.rawValue = u.value, n;\n    }\n\n    var n = function n(u, e) {\n      if (!(u instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    },\n        i = function () {\n      function u(u, e) {\n        for (var t = 0; t < e.length; t++) {\n          var n = e[t];\n          n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(u, n.key, n);\n        }\n      }\n\n      return function (e, t, n) {\n        return t && u(e.prototype, t), n && u(e, n), e;\n      };\n    }(),\n        s = Object.assign || function (u) {\n      for (var e = 1; e < arguments.length; e++) {\n        var t = arguments[e];\n        for (var n in t) {\n          Object.prototype.hasOwnProperty.call(t, n) && (u[n] = t[n]);\n        }\n      }\n      return u;\n    },\n        r = function u(e, t, n) {\n      null === e && (e = Function.prototype);\n      var i = Object.getOwnPropertyDescriptor(e, t);\n      if (void 0 === i) {\n        var s = Object.getPrototypeOf(e);\n        return null === s ? void 0 : u(s, t, n);\n      }\n      if (\"value\" in i) return i.value;\n      var r = i.get;\n      if (void 0 !== r) return r.call(n);\n    },\n        o = function o(u, e) {\n      if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof e === \"undefined\" ? \"undefined\" : _typeof(e)));\n      u.prototype = Object.create(e && e.prototype, {\n        constructor: {\n          value: u,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(u, e) : u.__proto__ = e);\n    },\n        a = function a(u, e) {\n      if (!u) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return !e || \"object\" != (typeof e === \"undefined\" ? \"undefined\" : _typeof(e)) && \"function\" != typeof e ? u : e;\n    },\n        l = function () {\n      function u(u, e) {\n        var t = [],\n            n = !0,\n            i = !1,\n            s = void 0;\n        try {\n          for (var r, o = u[Symbol.iterator](); !(n = (r = o.next()).done) && (t.push(r.value), !e || t.length !== e); n = !0) {}\n        } catch (u) {\n          i = !0, s = u;\n        } finally {\n          try {\n            !n && o.return && o.return();\n          } finally {\n            if (i) throw s;\n          }\n        }\n        return t;\n      }\n\n      return function (e, t) {\n        if (Array.isArray(e)) return e;\n        if (Symbol.iterator in Object(e)) return u(e, t);\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      };\n    }(),\n        h = function () {\n      function u(e, t) {\n        n(this, u), this.el = e, this.mask = t.mask, this._listeners = {}, this._refreshingCount = 0, this.saveState = this.saveState.bind(this), this.processInput = this.processInput.bind(this), this._onDrop = this._onDrop.bind(this);\n      }\n\n      return i(u, [{\n        key: \"bindEvents\", value: function value() {\n          this.el.addEventListener(\"keydown\", this.saveState), this.el.addEventListener(\"input\", this.processInput), this.el.addEventListener(\"drop\", this._onDrop);\n        }\n      }, {\n        key: \"unbindEvents\", value: function value() {\n          this.el.removeEventListener(\"keydown\", this.saveState), this.el.removeEventListener(\"input\", this.processInput), this.el.removeEventListener(\"drop\", this._onDrop);\n        }\n      }, {\n        key: \"destroy\", value: function value() {\n          this.unbindEvents(), this._listeners.length = 0;\n        }\n      }, {\n        key: \"saveState\", value: function value(u) {\n          this._oldRawValue = this.rawValue, this._oldUnmaskedValue = this.unmaskedValue, this._oldSelection = {\n            start: this.selectionStart,\n            end: this.cursorPos\n          };\n        }\n      }, {\n        key: \"_changeState\", value: function value(u) {\n          var t = this;\n          u = s({\n            cursorPos: this.cursorPos,\n            oldSelection: this._oldSelection,\n            oldValue: this._oldRawValue,\n            oldUnmaskedValue: this._oldUnmaskedValue\n          }, u);\n          var n = this.rawValue,\n              i = n;\n          return i = e(this.resolve(i, u), i, this._oldRawValue), i !== n && (this.el.value = i, this.cursorPos = u.cursorPos, setTimeout(function () {\n            return t.cursorPos = u.cursorPos;\n          }, 0)), this._onChangeState(), i;\n        }\n      }, {\n        key: \"_onChangeState\", value: function value() {\n          this._fireChangeEvents(), this.saveState();\n        }\n      }, {\n        key: \"_fireChangeEvents\", value: function value() {\n          this._isChanged && this.fireEvent(\"accept\");\n        }\n      }, {\n        key: \"processInput\", value: function value(u) {\n          this._isChanged && this._changeState();\n        }\n      }, {\n        key: \"on\", value: function value(u, e) {\n          return this._listeners[u] || (this._listeners[u] = []), this._listeners[u].push(e), this;\n        }\n      }, {\n        key: \"off\", value: function value(u, e) {\n          if (this._listeners[u]) {\n            if (!e) return void delete this._listeners[u];\n            var t = this._listeners[u].indexOf(e);\n            return t >= 0 && this._listeners.splice(t, 1), this;\n          }\n        }\n      }, {\n        key: \"fireEvent\", value: function value(u) {\n          var e = this._listeners[u] || [];\n          e.forEach(function (u) {\n            return u();\n          });\n        }\n      }, {\n        key: \"resolve\", value: function value(u, e) {\n          return u;\n        }\n      }, {\n        key: \"_onDrop\", value: function value(u) {\n          u.preventDefault(), u.stopPropagation();\n        }\n      }, {\n        key: \"selectionStart\", get: function get() {\n          return this.el.selectionStart;\n        }\n      }, {\n        key: \"cursorPos\", get: function get() {\n          return this.el.selectionEnd;\n        }, set: function set(u) {\n          this.el.setSelectionRange(u, u);\n        }\n      }, {\n        key: \"_isChanged\", get: function get() {\n          return this.rawValue !== this._oldRawValue || this.unmaskedValue !== this._oldUnmaskedValue;\n        }\n      }, {\n        key: \"rawValue\", get: function get() {\n          return this.el.value;\n        }, set: function set(u) {\n          this.el.value = u, this._changeState({\n            cursorPos: u.length,\n            oldSelection: { start: 0, end: u.length },\n            oldValue: u\n          });\n        }\n      }, {\n        key: \"unmaskedValue\", get: function get() {\n          return this.rawValue;\n        }, set: function set(u) {\n          this.rawValue = u;\n        }\n      }]), u;\n    }(),\n        A = function (u) {\n      function e() {\n        return n(this, e), a(this, (e.__proto__ || Object.getPrototypeOf(e)).apply(this, arguments));\n      }\n\n      return o(e, u), i(e, [{\n        key: \"resolve\", value: function value(u) {\n          return this.mask.test(u);\n        }\n      }]), e;\n    }(h),\n        c = function (u) {\n      function e() {\n        return n(this, e), a(this, (e.__proto__ || Object.getPrototypeOf(e)).apply(this, arguments));\n      }\n\n      return o(e, u), i(e, [{\n        key: \"resolve\", value: function value() {\n          return this.mask.apply(this, arguments);\n        }\n      }]), e;\n    }(h),\n        f = function (u) {\n      function t(u, e) {\n        n(this, t);\n        var i = a(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, u, e));\n        return i._hollows = [], i.placeholder = e.placeholder, i.definitions = s({}, t.DEFINITIONS, e.definitions), i._alignCursor = i._alignCursor.bind(i), i._initialized = !0, i;\n      }\n\n      return o(t, u), i(t, [{\n        key: \"bindEvents\", value: function value() {\n          var u = this;\n          r(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), \"bindEvents\", this).call(this), [\"click\", \"focus\"].forEach(function (e) {\n            return u.el.addEventListener(e, u._alignCursor);\n          });\n        }\n      }, {\n        key: \"unbindEvents\", value: function value() {\n          var u = this;\n          r(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), \"unbindEvents\", this).call(this), [\"click\", \"focus\"].forEach(function (e) {\n            return u.el.removeEventListener(e, u._alignCursor);\n          });\n        }\n      }, {\n        key: \"_installDefinitions\", value: function value(u) {\n          this._definitions = u, this._charDefs = [];\n          var e = this.mask;\n          if (e && u) {\n            for (var n = !1, i = !1, s = 0; s < e.length; ++s) {\n              var r = e[s],\n                  o = !n && r in u ? t.DEF_TYPES.INPUT : t.DEF_TYPES.FIXED,\n                  a = o === t.DEF_TYPES.INPUT || n,\n                  l = o === t.DEF_TYPES.INPUT && i;\n              if (\"{\" !== r && \"}\" !== r) {\n                if (\"[\" !== r && \"]\" !== r) {\n                  if (\"\\\\\" === r) {\n                    if (++s, r = e[s], !r) break;\n                    o = t.DEF_TYPES.FIXED;\n                  }\n                  this._charDefs.push({ char: r, type: o, optional: l, unmasking: a });\n                } else i = !i;\n              } else n = !n;\n            }\n            this._buildResolvers();\n          }\n        }\n      }, {\n        key: \"_buildResolvers\", value: function value() {\n          this._resolvers = {};\n          for (var u in this.definitions) {\n            this._resolvers[u] = IMask.MaskFactory(this.el, { mask: this.definitions[u] });\n          }\n        }\n      }, {\n        key: \"_appendTail\", value: function value(u, n) {\n          for (var i = \"\", s = this._hollows.slice(), r = !1, o = 0, a = this._mapPosToDefIndex(u.length); o < n.length; ++a) {\n            var l = n[o],\n                h = this._charDefs[a];\n            if (!h) {\n              r = !0;\n              break;\n            }\n            if (h.type === t.DEF_TYPES.INPUT) {\n              var A = this._resolvers[h.char],\n                  c = A.resolve(l, a, u) || \"\";\n              c ? (c = e(c, l), ++o) : (h.optional || (c = this._placeholder.char), s.push(a)), u += i + c, i = \"\";\n            } else i += h.char;\n          }\n          return [u, s, r];\n        }\n      }, {\n        key: \"_extractInput\", value: function value(u) {\n          for (var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = \"\", i = 0, s = this._mapPosToDefIndex(e); i < u.length && s < this._charDefs.length; ++s) {\n            var r = u[i],\n                o = this._charDefs[s];\n            this._isHiddenHollow(s) || (o.type !== t.DEF_TYPES.INPUT || this._isHollow(s) || (n += r), ++i);\n          }\n          return n;\n        }\n      }, {\n        key: \"_isHollow\", value: function value(u) {\n          return this._hollows.indexOf(u) >= 0;\n        }\n      }, {\n        key: \"_isHiddenHollow\", value: function value(u) {\n          return this._isHollow(u) && this._charDefs[u] && this._charDefs[u].optional;\n        }\n      }, {\n        key: \"_hollowsBefore\", value: function value(u) {\n          var e = this;\n          return this._hollows.filter(function (t) {\n            return t < u && e._isHiddenHollow(t);\n          });\n        }\n      }, {\n        key: \"_mapDefIndexToPos\", value: function value(u) {\n          return u - this._hollowsBefore(u).length;\n        }\n      }, {\n        key: \"_mapPosToDefIndex\", value: function value(u) {\n          for (var e = u; this._isHiddenHollow(e - 1);) {\n            ++e;\n          }return u + this._hollowsBefore(e).length;\n        }\n      }, {\n        key: \"_generateInsertSteps\", value: function value(u, n) {\n          for (var i = u, s = this._hollows.slice(), r = \"\", o = [[i, s.slice()]], a = 0, l = this._mapPosToDefIndex(u.length); a < n.length;) {\n            var h = this._charDefs[l];\n            if (!h) break;\n            var A = n[a];\n            if (h.type === t.DEF_TYPES.INPUT) {\n              var c = this._resolvers[h.char],\n                  f = c.resolve(A, a, i) || \"\";\n              f ? (i += r + e(f, A), r = \"\", o.push([i, s.slice()])) : h.optional && s.indexOf(l) < 0 && s.push(l), (f || h.optional) && ++l, !f && h.optional || ++a;\n            } else r += h.char, A === h.char && ++a, ++l;\n          }\n          return o;\n        }\n      }, {\n        key: \"resolve\", value: function value(u, e) {\n          var n = e.cursorPos,\n              i = e.oldSelection,\n              s = e.oldValue,\n              r = Math.min(n, i.start),\n              o = Math.max(i.end - r || s.length - u.length, 0),\n              a = n - r,\n              h = u.substring(0, r),\n              A = u.substring(r + a),\n              c = u.substr(r, a),\n              f = this._extractInput(A, r + o),\n              F = this._mapPosToDefIndex(r);\n          this._hollows = this._hollows.filter(function (u) {\n            return u < F;\n          });\n          for (var D = h, E = this._generateInsertSteps(h, c), _ = E.length - 1; _ >= 0; --_) {\n            var p,\n                d = l(E[_], 2);\n            p = d[0], this._hollows = d[1];\n            var v = this._appendTail(p, f),\n                B = l(v, 3),\n                C = B[0],\n                y = B[1],\n                k = B[2];\n            if (!k) {\n              var g = [C, y];\n              D = g[0], this._hollows = g[1], n = p.length;\n              break;\n            }\n          }\n          if (c) {\n            var P = this._appendFixedEnd(D);\n            n += P.length - D.length, D = P;\n          }\n          if (!c && n === D.length) {\n            for (var w = this._mapPosToDefIndex(n - 1), m = !1; w > 0; --w) {\n              var b = this._charDefs[w];\n              if (b.type === t.DEF_TYPES.INPUT) {\n                if (!this._isHollow(w)) break;\n                m = !0;\n              }\n            }\n            m && (D = D.slice(0, w + 1));\n          }\n          return D = this._appendPlaceholderEnd(D), e.cursorPos = n, D;\n        }\n      }, {\n        key: \"_fireChangeEvents\", value: function value() {\n          r(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), \"_fireChangeEvents\", this).call(this), this._isChanged && this.isComplete && this.fireEvent(\"complete\");\n        }\n      }, {\n        key: \"_appendFixedEnd\", value: function value(u) {\n          for (var e = this._mapPosToDefIndex(u.length);; ++e) {\n            var n = this._charDefs[e];\n            if (!n) break;\n            if (!this._isHiddenHollow(e)) {\n              if (n.type === t.DEF_TYPES.INPUT) break;\n              e >= u.length && (u += n.char);\n            }\n          }\n          return u;\n        }\n      }, {\n        key: \"_appendPlaceholderEnd\", value: function value(u) {\n          for (var e = this._mapPosToDefIndex(u.length); e < this._charDefs.length; ++e) {\n            var n = this._charDefs[e];\n            n.type !== t.DEF_TYPES.INPUT || this._isHollow(e) || this._hollows.push(e), \"always\" === this._placeholder.show && (u += n.type === t.DEF_TYPES.FIXED ? n.char : n.optional ? \"\" : this._placeholder.char);\n          }\n          return u;\n        }\n      }, {\n        key: \"_alignCursor\", value: function value() {\n          for (var u = this._mapPosToDefIndex(this.cursorPos), e = u; e >= 0; --e) {\n            var n = this._charDefs[e],\n                i = e - 1,\n                s = this._charDefs[i];\n            if (!this._isHiddenHollow(i) && (!n || n.type === t.DEF_TYPES.INPUT && this._isHollow(e) && !this._isHiddenHollow(e)) && !this._isHollow(i) && (u = e, !s || s.type === t.DEF_TYPES.INPUT)) break;\n          }\n          this.cursorPos = this._mapDefIndexToPos(u);\n        }\n      }, {\n        key: \"isComplete\", get: function get() {\n          var u = this;\n          return !this._charDefs.filter(function (e, n) {\n            return e.type === t.DEF_TYPES.INPUT && !e.optional && u._isHollow(n);\n          }).length;\n        }\n      }, {\n        key: \"unmaskedValue\", get: function get() {\n          for (var u = this.rawValue, e = \"\", n = 0, i = 0; n < u.length && i < this._charDefs.length; ++i) {\n            var s = u[n],\n                r = this._charDefs[i];\n            this._isHiddenHollow(i) || (r.unmasking && !this._isHollow(i) && (r.type === t.DEF_TYPES.INPUT && this._resolvers[r.char].resolve(s, n, u) || r.char === s) && (e += s), ++n);\n          }\n          return e;\n        }, set: function set(u) {\n          this._hollows.length = 0;\n          var e,\n              t = this._appendTail(\"\", u),\n              n = l(t, 2);\n          e = n[0], this._hollows = n[1], this.el.value = this._appendPlaceholderEnd(e), this._onChangeState();\n        }\n      }, {\n        key: \"placeholder\", get: function get() {\n          return this._placeholder;\n        }, set: function set(u) {\n          this._placeholder = s({}, t.DEFAULT_PLACEHOLDER, u), this._initialized && (this.unmaskedValue = this.unmaskedValue);\n        }\n      }, {\n        key: \"placeholderLabel\", get: function get() {\n          var u = this;\n          return this._charDefs.map(function (e) {\n            return e.type === t.DEF_TYPES.FIXED ? e.char : e.optional ? \"\" : u._placeholder.char;\n          }).join(\"\");\n        }\n      }, {\n        key: \"definitions\", get: function get() {\n          return this._definitions;\n        }, set: function set(u) {\n          this._installDefinitions(u), this._initialized && (this.unmaskedValue = this.unmaskedValue);\n        }\n      }, {\n        key: \"mask\", get: function get() {\n          return this._mask;\n        }, set: function set(u) {\n          this._mask = u, this._initialized && (this.definitions = this.definitions);\n        }\n      }]), t;\n    }(h);\n    return f.DEFINITIONS = {\n      0: /\\d/,\n      a: /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n      \"*\": /./\n    }, f.DEF_TYPES = { INPUT: \"input\", FIXED: \"fixed\" }, f.DEFAULT_PLACEHOLDER = {\n      show: \"lazy\",\n      char: \"_\"\n    }, t.MaskFactory = function (e, t) {\n      var n = t.mask;\n      return n instanceof h ? n : n instanceof RegExp ? new A(e, t) : n instanceof Function ? new c(e, t) : u(n) ? new f(e, t) : new h(e, t);\n    }, t.BaseMask = h, t.FuncMask = c, t.RegExpMask = A, t.PatternMask = f, window.IMask = t, t;\n  });\n  //# sourceMappingURL=imask.min.js.map\n});\n\nif ($('.news-item-inner').length == 0) {\n  $('.main-wrap').addClass('no-news');\n}\nif (window.innerWidth > 1024) {\n  $('body').removeClass('overfl-hidden');\n}\n\n$(document).ready(function () {\n  $('button, .bkspace-input, .clear-sum').on('mousedown', function (event) {\n    event.preventDefault();\n    new Audio('audio/tink.mp3').play();\n  });\n});\n\nvar currRootTab = $('#mob');\nvar inputFocus = document.getElementById('number');\n\nvar allInputTypes = ['number', 'mobile-contract', 'pay-number', 'pay-contract', 'card', 'wallet', 'login'];\n\nvar inputRules = {\n  inputs: ['number'],\n  reqCodes: ''\n};\n\n$(document).ready(function () {\n\n  // / ================================= INIT MASKS ===============\n  var maskPhone = new IMask(document.getElementById('number'), { mask: '(000) 000-00-00' });\n  var maskMobContract = new IMask(document.getElementById('mobile-contract'), { mask: '000-000-000' });\n  var maskPayPhone = new IMask(document.getElementById('pay-number'), { mask: '(000) 000-00-00' });\n  var maskPayContract = new IMask(document.getElementById('pay-contract'), { mask: '00 00 00 00' });\n  var maskCard = new IMask(document.getElementById('card'), { mask: '0000 0000 0000 0000' });\n  var maskWallet = new IMask(document.getElementById('wallet'), { mask: '000-000-000' });\n  var maskLogin = new IMask(document.getElementById('login'), { mask: '************************' });\n\n  $(\".sum\").maskMoney({ allowNegative: false });\n  /* END ============================= INIT MASKS============================= */\n\n  var goFromOtherTab = false;\n  $('li.tab a').on('click', function () {\n    currRootTab = $($(this).attr('href'));\n    goFromOtherTab = true;\n    $(currRootTab).find('.operator-item')[0].click();\n    prevLetterKeyboard = $(currRootTab).find('.keyboard-wrap.letters.ru');\n  });\n  setTimeout(function () {\n    $('li.tab a')[0].click();\n  }, 100);\n\n  $('.operator-item').on('click', function (event) {\n    event.preventDefault();\n    allowEnterCents = false;\n    $(currRootTab).find('input').val('');\n\n    if (!goFromOtherTab) {\n      $('#' + $(currRootTab).attr('id') + '-rule').attr('class', 'small-keyboard');\n    }\n    goFromOtherTab = false;\n\n    currRootTab.find('.keyboard-operator-name').text($(this).find('.operator-name').text());\n    currRootTab.find('.input-wrap-icon').removeClass('show');\n\n    inputRules.inputs = [];\n    inputRules.reqCodes = '';\n    if (currRootTab.attr('id') == 'mob') {\n      if (this.getAttribute('number') != null) {\n        $('#mobile-number').addClass('show');\n        inputRules.inputs.push('number');\n        inputRules.reqCodes = this.getAttribute('number');\n      }\n      if (this.getAttribute('mobile-contract') != null) {\n        $('#mobile-contract-wrap').addClass('show');\n        inputRules.inputs.push('mobile-contract');\n      }\n    }\n\n    if (currRootTab.attr('id') == 'internet') {\n      if (this.getAttribute('pay-contract') != null) {\n        $('#pay-contract-wrap').addClass('show');\n        inputRules.inputs.push('pay-contract');\n      }\n      if (this.getAttribute('number') != null) {\n        $('#pay-mobile-number').addClass('show');\n        inputRules.inputs.push('pay-number');\n        inputRules.reqCodes = this.getAttribute('number');\n      }\n    }\n\n    if (currRootTab.attr('id') == 'pay-systems') {\n      if (this.getAttribute('card') != null) {\n        $('#card-wrap').addClass('show');\n        inputRules.inputs.push('card');\n      }\n      if (this.getAttribute('wallet') != null) {\n        $('#wallet-wrap').addClass('show');\n        inputRules.inputs.push('wallet');\n      }\n    }\n\n    if (currRootTab.attr('id') == 'web-services') {\n      if (this.getAttribute('login') != null) {\n        $('#service-login-wrap').addClass('show');\n        inputRules.inputs.push('login');\n      }\n    }\n\n    checkValidFields();\n  });\n\n  // ===============================================\n  // DEMO NAVIGATION ==================\n  $('.back').on('click', function (event) {\n    event.preventDefault();\n\n    $('#' + $(currRootTab).attr('id') + '-rule').attr('class', 'small-keyboard');\n  });\n\n  $('input').on('click', function () {\n    $(inputFocus).removeClass('active');\n\n    inputFocus = this;\n    $(inputFocus).addClass('active');\n  });\n\n  // ANIMATION NEXT BUTTON =========================================\n  var element;\n  var touchOnElement = true;\n  $(document).on('touchstart', '.next.onkeyboard:not(.disable)', function (event) {\n    event.preventDefault();\n    touchOnElement = true;\n\n    var touch = event.touches[0];\n    $(this).addClass('allow');\n    element = document.elementFromPoint(touch.pageX, touch.pageY);\n  });\n  $(document).on('touchmove', '.next.onkeyboard:not(.disable)', function (event) {\n    var touch = event.touches[0];\n    if (element !== document.elementFromPoint(touch.pageX, touch.pageY)) {\n      $(this).removeClass('allow');\n      touchOnElement = false;\n    }\n  });\n\n  $(document).on('touchend', '.next.onkeyboard:not(.disable)', function (event) {\n    $(this).removeClass('allow');\n\n    if (touchOnElement) {\n      setPayData();\n\n      var btnWidth = this.offsetWidth;\n      var innerWidth = $(this).find('.next-onkeyboard-inner').width();\n\n      if (btnWidth != innerWidth) {\n        setTimeout(function () {\n          $('#' + currRootTab.attr('id') + '-rule').attr('class', 'check-begin');\n        }, 100);\n      } else {\n        $('#' + currRootTab.attr('id') + '-rule').attr('class', 'check-process');\n\n        var ruleIdForTimeout = '#' + currRootTab.attr('id') + '-rule';\n        setTimeout(function () {\n          var newClassName = Math.random() > 0.5 ? 'check-success' : 'check-error';\n          $(ruleIdForTimeout).attr('class', newClassName);\n\n          if (newClassName == 'check-success') {\n            new Audio('audio/payed.mp3').play();\n            setTimeout(function () {\n              $('#' + $(currRootTab).attr('id') + '-rule').attr('class', 'small-keyboard');\n            }, 10000);\n          }\n        }, 2500);\n      }\n    }\n  });\n\n  function setPayData() {\n    switch (currRootTab.attr('id')) {\n      case 'mob':\n        $(currRootTab).find('.pay-number').text(document.getElementById(inputRules.inputs[0]).value);\n        break;\n      case 'internet':\n        $(currRootTab).find('.pay-number').text(document.getElementById(inputRules.inputs[0]).value);\n        break;\n      case 'pay-systems':\n        $(currRootTab).find('.pay-number').text(document.getElementById(inputRules.inputs[0]).value);\n        break;\n      case 'web-services':\n        $(currRootTab).find('.pay-number:not(second-data)').text(document.getElementById(inputRules.inputs[0]).value);\n        break;\n    }\n\n    $(currRootTab).find('.owner-score .value').text($(currRootTab).find('.sum').val());\n    $(currRootTab).find('.from-client .value').text($(currRootTab).find('.sum').val());\n    if ($(currRootTab).find('.remark-text').val()) {\n      $(currRootTab).find('.wrap-remark-check').show();\n      $(currRootTab).find('.reseiver-name').text($(currRootTab).find('.remark-text').val());\n    } else {\n      $(currRootTab).find('.wrap-remark-check').hide();\n    }\n  }\n\n  $(document).on('mousedown', '.next.onkeyboard:not(.disable)', function (event) {\n    // event.preventDefault();\n\n    $(this).addClass('allow');\n  });\n\n  $(document).on('mouseup', '.next.onkeyboard:not(.disable)', function (event) {\n    // event.preventDefault();\n\n    setPayData();\n\n    var btnWidth = this.offsetWidth;\n    var innerWidth = $(this).find('.next-onkeyboard-inner').width();\n\n    if (btnWidth != innerWidth) {\n      setTimeout(function () {\n        $('#' + currRootTab.attr('id') + '-rule').attr('class', 'check-begin');\n      }, 100);\n    } else {\n      $('#' + currRootTab.attr('id') + '-rule').attr('class', 'check-process');\n\n      var ruleIdForTimeout = '#' + currRootTab.attr('id') + '-rule';\n      setTimeout(function () {\n        var newClassName = Math.random() > 0.5 ? 'check-success' : 'check-error';\n        $(ruleIdForTimeout).attr('class', newClassName);\n\n        if (newClassName == 'check-success') {\n          new Audio('audio/payed.mp3').play();\n          setTimeout(function () {\n            $('#' + $(currRootTab).attr('id') + '-rule').attr('class', 'small-keyboard');\n          }, 10000);\n        }\n      }, 2500);\n    }\n  });\n\n  $(document).on('mouseleave', '.next.onkeyboard:not(.disable)', function (event) {\n    $(this).removeClass('allow');\n  });\n  // END ================== ANIMATION NEXT BUTTON =======================\n\n  $('.next.check').on('click', function (event) {\n    event.preventDefault();\n\n    $('#' + currRootTab.attr('id') + '-rule').attr('class', 'check-process');\n\n    var ruleIdForTimeout = '#' + currRootTab.attr('id') + '-rule';\n    setTimeout(function () {\n      var newClassName = Math.random() > 0.5 ? 'check-success' : 'check-error';\n      $(ruleIdForTimeout).attr('class', newClassName);\n\n      if (newClassName == 'check-success') {\n        new Audio('audio/payed.mp3').play();\n        setTimeout(function () {\n          $('#' + $(currRootTab).attr('id') + '-rule').attr('class', 'small-keyboard');\n        }, 10000);\n      }\n    }, 2500);\n  });\n\n  // END DEMO NAVIGATION ==============\n\n  var showModalTimeO;\n  $(document).on('mouseenter', '#wrap-nav-icon, .keyboard-wrap:not(.deprecate-modal), li.menu-item', function () {\n    var self = this;\n    showModalTimeO = setTimeout(function () {\n      $(self).addClass('show-modal');\n    }, 700);\n  });\n\n  $('#wrap-nav-icon, .keyboard-wrap, li.menu-item').on('mouseleave', function () {\n    clearTimeout(showModalTimeO);\n    $(this).removeClass('show-modal');\n  });\n\n  $('#wrap-nav-icon, .nav-menu-shadow').click(function () {\n    $(this).removeClass('show-modal');\n    clearTimeout(showModalTimeO);\n    $('body').toggleClass('show-menu');\n    $('.menu-list li:eq(1)').removeClass('help-active');\n    $(\".help-modal\").removeClass('show');\n  });\n\n  $('.showmore').click(function () {\n    $(this).toggleClass('show-showmore');\n  });\n\n  $('ul.nav-top').tabs();\n\n  $('.inputs-wrap input').on('focus click touch tap', function () {\n    event.preventDefault();\n    $(inputFocus).removeClass('active');\n    $(this).addClass('active');\n\n    inputFocus = this;\n  });\n\n  $('.show-help').on('click', function (event) {\n    event.preventDefault();\n    // if($(\".help-modal.show\").length) {\n    //   $('body').removeClass('show-menu');\n    // }\n    // else {\n    //   $('body').addClass('show-menu');\n    // }\n\n    // $('.menu-list li:eq(1)').toggleClass('help-active');\n    $(\".help\").toggleClass('show-modal');\n  });\n\n  $('.remark:not(.check)').on('click', function (event) {\n    event.preventDefault();\n    $(inputFocus).removeClass('active');\n    $(currRootTab).find('.remark-text').val('');\n    $(currRootTab).find('.remark-text').toggleClass('show');\n    if ($(currRootTab).find('.remark-text').hasClass('show')) {\n      inputFocus = $(currRootTab).find('.remark-text')[0];\n      inputFocus.focus();\n      $(inputFocus).addClass('active');\n    } else inputFocus = document.getElementById(inputRules.inputs[0]);\n  });\n\n  $('.wrap-sum .input-overfl').on('click', function () {\n    var inputSum = $(this).prev()[0];\n\n    $(inputFocus).removeClass('active');\n    $(inputSum).addClass('active');\n\n    inputFocus = inputSum;\n  });\n\n  var prevKey = {};\n  var prevLetterKeyboard = $(currRootTab).find('.keyboard-wrap.letters.ru')[0];\n  $('.keyboard-wrap .key-inner').on('click', function () {\n\n    $(this).closest('.keyboard-wrap').addClass('deprecate-modal');\n\n    if ($(this).parent().hasClass('upper')) {\n      $(this).parent().toggleClass('active');\n      $(this).closest('.keyboard-wrap.letters').toggleClass('uppercased');\n      return;\n    } else {\n      var self = this;\n      $(prevKey).removeClass('noHover');\n      prevKey = this;\n      setTimeout(function () {\n        $(self).addClass('noHover');\n      }, 400);\n    }\n    if ($(this).parent().hasClass('switch-numbers')) {\n      $(currRootTab).find('.keyboard-wrap.numbers').show();\n      $(currRootTab).find('.keyboard-wrap.letters.ru').hide();\n      $(currRootTab).find('.keyboard-wrap.letters.en').hide();\n      return;\n    }\n    if ($(this).hasClass('letters')) {\n      $(currRootTab).find('.keyboard-wrap.numbers').hide();\n      $(prevLetterKeyboard).show();\n      $(currRootTab).find('.keyboard-wrap.symbols').hide();\n      return;\n    }\n    if ($(this).parent().hasClass('switch-ru')) {\n      prevLetterKeyboard = $(currRootTab).find('.keyboard-wrap.letters.ru')[0];\n      $(currRootTab).find('.keyboard-wrap.letters.en').hide();\n      $(currRootTab).find('.keyboard-wrap.letters.ru').show();\n      return;\n    }\n    if ($(this).parent().hasClass('switch-en')) {\n      prevLetterKeyboard = $(currRootTab).find('.keyboard-wrap.letters.en')[0];\n      $(currRootTab).find('.keyboard-wrap.letters.en').show();\n      $(currRootTab).find('.keyboard-wrap.letters.ru').hide();\n      return;\n    }\n    if ($(this).parent().hasClass('switch-symbols')) {\n      $(currRootTab).find('.keyboard-wrap.letters.en').hide();\n      $(currRootTab).find('.keyboard-wrap.letters.ru').hide();\n      $(currRootTab).find('.keyboard-wrap.symbols').show();\n      return;\n    }\n\n    if ($(this).parent().hasClass('space')) {\n      if (!$(inputFocus).hasClass('remark-text')) return;\n\n      inputFocus.value = inputFocus.value + ' ';\n      inputFocus.scrollLeft = inputFocus.scrollWidth;\n      return;\n    }\n    if ($(this).parent().hasClass('bkspace')) {\n      if ($(inputFocus).hasClass('remark-text')) {\n        inputFocus.value = inputFocus.value.slice(0, -1);\n        inputFocus.scrollLeft = inputFocus.scrollWidth;\n        return;\n      }\n      if (!$(inputFocus).hasClass('sum')) {\n        var currMask = getCurrMask(inputFocus);\n        currMask.rawValue = currMask.unmaskedValue.slice(0, -1);\n        inputFocus.scrollLeft = inputFocus.scrollWidth;\n      } else {\n        if (inputFocus.value) {\n          var premoney = inputFocus.value.split('.')[0] || '';\n          var cents = inputFocus.value.split('.')[1] || '00';\n          var newValue;\n          if (!allowEnterCents) {\n            newValue = parseInt('0' + premoney.slice(0, -1)) + '.' + cents;\n          } else {\n            newValue = premoney + '.0' + cents[0];\n            if (cents[0] == '0') allowEnterCents = false;\n          }\n\n          inputFocus.value = newValue;\n        }\n      }\n      return;\n    }\n\n    if ($(inputFocus).hasClass('sum') && !(this.innerText >= 0 && this.innerText <= 9) && this.innerText != '.') {\n\n      return;\n    }\n\n    if ($(inputFocus).hasClass('remark-text')) {\n      inputFocus.value = inputFocus.value + this.innerText;\n    } else {\n      addKeyToInput(this.innerText);\n      checkValidFields();\n    }\n    inputFocus.scrollLeft = inputFocus.scrollWidth;\n  });\n\n  $(document).on('keydown', function (event) {\n    if (event.key.length > 1 && event.keyCode != 8) return;\n\n    if ($(inputFocus).hasClass('remark-text')) {\n      //backspace\n      if (event.keyCode == 8) {\n        inputFocus.value = inputFocus.value.slice(0, -1);\n        inputFocus.scrollLeft = inputFocus.scrollWidth;\n        return;\n      }\n\n      inputFocus.value = inputFocus.value + event.key;\n      inputFocus.scrollLeft = inputFocus.scrollWidth;\n    } else {\n      //backspace\n      if (event.keyCode == 8) {\n        if (!$(inputFocus).hasClass('sum')) {\n          var currMask = getCurrMask(inputFocus);\n          currMask.rawValue = currMask.unmaskedValue.slice(0, -1);\n        } else {\n          var premoney = inputFocus.value.split('.')[0] || '';\n          var cents = inputFocus.value.split('.')[1] || '00';\n          var newValue;\n          if (!allowEnterCents) {\n            newValue = parseInt('0' + premoney.slice(0, -1)) + '.' + cents;\n          } else {\n            newValue = premoney + '.0' + cents[0];\n            if (cents[0] == '0') allowEnterCents = false;\n          }\n\n          inputFocus.value = newValue;\n        }\n      } else {\n        if (!$(inputFocus).hasClass('sum') || $(inputFocus).hasClass('sum') && event.keyCode >= 48 && event.key <= 57) {\n          addKeyToInput(event.key);\n        }\n        if ($(inputFocus).hasClass('sum') && event.key == '.') {\n          addKeyToInput(event.key);\n        }\n      }\n\n      inputFocus.scrollLeft = inputFocus.scrollWidth;\n      checkValidFields();\n    }\n  });\n\n  var allowEnterCents = false;\n  function addKeyToInput(key) {\n    var currMask = getCurrMask(inputFocus);\n\n    if (currMask) {\n      var newValue = currMask.unmaskedValue + key;\n      if (currMask.unmaskedValue.length >= 3 || !inputRules.reqCodes || inputRules.reqCodes.indexOf(newValue) % 4 == 0) currMask.rawValue = newValue;\n    } else {\n      if ($(inputFocus).hasClass('sum')) {\n        var premoney = +inputFocus.value.split('.')[0] || '';\n        var cents = inputFocus.value.split('.')[1] || '00';\n        var newValue = inputFocus.value;\n\n        if (key != '.') {\n          if (!allowEnterCents) newValue = parseInt(premoney + key) + '.' + cents;else {\n            if (parseInt(cents) > 9) return;\n            newValue = parseInt('0' + premoney) + '.' + parseInt(cents) + key;\n          }\n        } else {\n          allowEnterCents = true;\n          return;\n        }\n        inputFocus.value = newValue.length < 8 ? newValue : inputFocus.value;\n      }\n    }\n  }\n\n  function checkValidFields() {\n    var validTrue = false;\n    inputRules.inputs.forEach(function (el) {\n      var currMask = getCurrMask(document.getElementById(el));\n      validTrue = currMask.isComplete;\n      if ($(currRootTab).attr('id') == 'web-services') {\n        if (el == 'login') validTrue = currMask.rawValue.length;\n      }\n\n      if (!validTrue) return;\n    });\n\n    var validSumTrue = parseInt(currRootTab.find('input.sum').inputmask('unmaskedvalue')) > 0;\n\n    if (validTrue && validSumTrue) {\n      currRootTab.find('button.next.onkeyboard').removeClass('disable');\n    } else {\n      currRootTab.find('button.next.onkeyboard').addClass('disable');\n    }\n  }\n\n  $('.clear-sum').on('click', function () {\n    var inputSum = $(this).siblings(\"input\")[0];\n    $(this).closest('.wrap-pay-data').find('button.next').addClass('disable');\n    inputSum.value = '';\n    allowEnterCents = false;\n  });\n\n  $('.bkspace-input').on('click', function () {\n    var currMask = {};\n    var input = $(this).siblings('input')[0];\n\n    currMask = getCurrMask(input);\n\n    currMask.rawValue = currMask.unmaskedValue.slice(0, -1);\n\n    checkValidFields();\n    input.focus();\n  });\n\n  function getCurrMask(input) {\n    switch (input.id) {\n      case 'number':\n        return maskPhone;\n      case 'mobile-contract':\n        return maskMobContract;\n      case 'pay-number':\n        return maskPayPhone;\n      case 'pay-contract':\n        return maskPayContract;\n      case 'card':\n        return maskCard;\n      case 'wallet':\n        return maskWallet;\n      case 'login':\n        return maskLogin;\n      default:\n        return;\n    }\n  }\n\n  // Get the modal\n  var modal = document.getElementById('modal-news');\n  var wrapModal = document.querySelector('.wrap-table_c-modal'); //click for close modal!!!!!\n\n  // Get the button that opens the modal\n  //   var btn = document.getElementById(\"myBtn\");\n\n  // Get the <span> element that closes the modal\n  var span = document.querySelector(\".close-news-modal\");\n\n  // When the user clicks the button, open the modal\n  //   btn.onclick = function() {\n  //     modal.style.display = \"table\";\n  // }\n\n  // When the user clicks on <span> (x), close the modal\n  span.onclick = function () {\n    $(modal).addClass('hide-news');\n    $('body').removeClass('overfl-hidden');\n    // $('.main-keyboard .number').focus();\n  };\n\n  // When the user clicks anywhere outside of the modal, close it\n  window.onclick = function (event) {\n    if (event.target == wrapModal) {\n      $(modal).addClass('hide-news');\n      $('body').removeClass('overfl-hidden');\n      // $('.main-keyboard .number').focus();\n    }\n  };\n});\n\nfunction validateEmail(email) {\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n}\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","$(document).ready(function() {\n  !function (u, e) {\n    \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = e() : \"function\" == typeof define && define.amd ? define(e) : u.imask = e()\n  }(this, function () {\n    function u(u) {\n      return \"string\" == typeof u || u instanceof String\n    }\n\n    function e(e, t) {\n      var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : \"\";\n      return u(e) ? e : e ? t : n\n    }\n\n    function t(u) {\n      var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = t.MaskFactory(u, e);\n      return n.bindEvents(), n.rawValue = u.value, n\n    }\n\n    var n = function (u, e) {\n      if (!(u instanceof e))throw new TypeError(\"Cannot call a class as a function\")\n    }, i = function () {\n      function u(u, e) {\n        for (var t = 0; t < e.length; t++) {\n          var n = e[t];\n          n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(u, n.key, n)\n        }\n      }\n\n      return function (e, t, n) {\n        return t && u(e.prototype, t), n && u(e, n), e\n      }\n    }(), s = Object.assign || function (u) {\n        for (var e = 1; e < arguments.length; e++) {\n          var t = arguments[e];\n          for (var n in t)Object.prototype.hasOwnProperty.call(t, n) && (u[n] = t[n])\n        }\n        return u\n      }, r = function u(e, t, n) {\n      null === e && (e = Function.prototype);\n      var i = Object.getOwnPropertyDescriptor(e, t);\n      if (void 0 === i) {\n        var s = Object.getPrototypeOf(e);\n        return null === s ? void 0 : u(s, t, n)\n      }\n      if (\"value\" in i)return i.value;\n      var r = i.get;\n      if (void 0 !== r)return r.call(n)\n    }, o = function (u, e) {\n      if (\"function\" != typeof e && null !== e)throw new TypeError(\"Super expression must either be null or a function, not \" + typeof e);\n      u.prototype = Object.create(e && e.prototype, {\n        constructor: {\n          value: u,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(u, e) : u.__proto__ = e)\n    }, a = function (u, e) {\n      if (!u)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return !e || \"object\" != typeof e && \"function\" != typeof e ? u : e\n    }, l = function () {\n      function u(u, e) {\n        var t = [], n = !0, i = !1, s = void 0;\n        try {\n          for (var r, o = u[Symbol.iterator](); !(n = (r = o.next()).done) && (t.push(r.value), !e || t.length !== e); n = !0);\n        } catch (u) {\n          i = !0, s = u\n        } finally {\n          try {\n            !n && o.return && o.return()\n          } finally {\n            if (i)throw s\n          }\n        }\n        return t\n      }\n\n      return function (e, t) {\n        if (Array.isArray(e))return e;\n        if (Symbol.iterator in Object(e))return u(e, t);\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")\n      }\n    }(), h = function () {\n      function u(e, t) {\n        n(this, u), this.el = e, this.mask = t.mask, this._listeners = {}, this._refreshingCount = 0, this.saveState = this.saveState.bind(this), this.processInput = this.processInput.bind(this), this._onDrop = this._onDrop.bind(this)\n      }\n\n      return i(u, [{\n        key: \"bindEvents\", value: function () {\n          this.el.addEventListener(\"keydown\", this.saveState), this.el.addEventListener(\"input\", this.processInput), this.el.addEventListener(\"drop\", this._onDrop)\n        }\n      }, {\n        key: \"unbindEvents\", value: function () {\n          this.el.removeEventListener(\"keydown\", this.saveState), this.el.removeEventListener(\"input\", this.processInput), this.el.removeEventListener(\"drop\", this._onDrop)\n        }\n      }, {\n        key: \"destroy\", value: function () {\n          this.unbindEvents(), this._listeners.length = 0\n        }\n      }, {\n        key: \"saveState\", value: function (u) {\n          this._oldRawValue = this.rawValue, this._oldUnmaskedValue = this.unmaskedValue, this._oldSelection = {\n            start: this.selectionStart,\n            end: this.cursorPos\n          }\n        }\n      }, {\n        key: \"_changeState\", value: function (u) {\n          var t = this;\n          u = s({\n            cursorPos: this.cursorPos,\n            oldSelection: this._oldSelection,\n            oldValue: this._oldRawValue,\n            oldUnmaskedValue: this._oldUnmaskedValue\n          }, u);\n          var n = this.rawValue, i = n;\n          return i = e(this.resolve(i, u), i, this._oldRawValue), i !== n && (this.el.value = i, this.cursorPos = u.cursorPos, setTimeout(function () {\n            return t.cursorPos = u.cursorPos\n          }, 0)), this._onChangeState(), i\n        }\n      }, {\n        key: \"_onChangeState\", value: function () {\n          this._fireChangeEvents(), this.saveState()\n        }\n      }, {\n        key: \"_fireChangeEvents\", value: function () {\n          this._isChanged && this.fireEvent(\"accept\")\n        }\n      }, {\n        key: \"processInput\", value: function (u) {\n          this._isChanged && this._changeState()\n        }\n      }, {\n        key: \"on\", value: function (u, e) {\n          return this._listeners[u] || (this._listeners[u] = []), this._listeners[u].push(e), this\n        }\n      }, {\n        key: \"off\", value: function (u, e) {\n          if (this._listeners[u]) {\n            if (!e)return void delete this._listeners[u];\n            var t = this._listeners[u].indexOf(e);\n            return t >= 0 && this._listeners.splice(t, 1), this\n          }\n        }\n      }, {\n        key: \"fireEvent\", value: function (u) {\n          var e = this._listeners[u] || [];\n          e.forEach(function (u) {\n            return u()\n          })\n        }\n      }, {\n        key: \"resolve\", value: function (u, e) {\n          return u\n        }\n      }, {\n        key: \"_onDrop\", value: function (u) {\n          u.preventDefault(), u.stopPropagation()\n        }\n      }, {\n        key: \"selectionStart\", get: function () {\n          return this.el.selectionStart\n        }\n      }, {\n        key: \"cursorPos\", get: function () {\n          return this.el.selectionEnd\n        }, set: function (u) {\n          this.el.setSelectionRange(u, u)\n        }\n      }, {\n        key: \"_isChanged\", get: function () {\n          return this.rawValue !== this._oldRawValue || this.unmaskedValue !== this._oldUnmaskedValue\n        }\n      }, {\n        key: \"rawValue\", get: function () {\n          return this.el.value\n        }, set: function (u) {\n          this.el.value = u, this._changeState({\n            cursorPos: u.length,\n            oldSelection: {start: 0, end: u.length},\n            oldValue: u\n          })\n        }\n      }, {\n        key: \"unmaskedValue\", get: function () {\n          return this.rawValue\n        }, set: function (u) {\n          this.rawValue = u\n        }\n      }]), u\n    }(), A = function (u) {\n      function e() {\n        return n(this, e), a(this, (e.__proto__ || Object.getPrototypeOf(e)).apply(this, arguments))\n      }\n\n      return o(e, u), i(e, [{\n        key: \"resolve\", value: function (u) {\n          return this.mask.test(u)\n        }\n      }]), e\n    }(h), c = function (u) {\n      function e() {\n        return n(this, e), a(this, (e.__proto__ || Object.getPrototypeOf(e)).apply(this, arguments))\n      }\n\n      return o(e, u), i(e, [{\n        key: \"resolve\", value: function () {\n          return this.mask.apply(this, arguments)\n        }\n      }]), e\n    }(h), f = function (u) {\n      function t(u, e) {\n        n(this, t);\n        var i = a(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, u, e));\n        return i._hollows = [], i.placeholder = e.placeholder, i.definitions = s({}, t.DEFINITIONS, e.definitions), i._alignCursor = i._alignCursor.bind(i), i._initialized = !0, i\n      }\n\n      return o(t, u), i(t, [{\n        key: \"bindEvents\", value: function () {\n          var u = this;\n          r(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), \"bindEvents\", this).call(this), [\"click\", \"focus\"].forEach(function (e) {\n            return u.el.addEventListener(e, u._alignCursor)\n          })\n        }\n      }, {\n        key: \"unbindEvents\", value: function () {\n          var u = this;\n          r(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), \"unbindEvents\", this).call(this), [\"click\", \"focus\"].forEach(function (e) {\n            return u.el.removeEventListener(e, u._alignCursor)\n          })\n        }\n      }, {\n        key: \"_installDefinitions\", value: function (u) {\n          this._definitions = u, this._charDefs = [];\n          var e = this.mask;\n          if (e && u) {\n            for (var n = !1, i = !1, s = 0; s < e.length; ++s) {\n              var r = e[s], o = !n && r in u ? t.DEF_TYPES.INPUT : t.DEF_TYPES.FIXED, a = o === t.DEF_TYPES.INPUT || n, l = o === t.DEF_TYPES.INPUT && i;\n              if (\"{\" !== r && \"}\" !== r)if (\"[\" !== r && \"]\" !== r) {\n                if (\"\\\\\" === r) {\n                  if (++s, r = e[s], !r)break;\n                  o = t.DEF_TYPES.FIXED\n                }\n                this._charDefs.push({char: r, type: o, optional: l, unmasking: a})\n              } else i = !i; else n = !n\n            }\n            this._buildResolvers()\n          }\n        }\n      }, {\n        key: \"_buildResolvers\", value: function () {\n          this._resolvers = {};\n          for (var u in this.definitions)this._resolvers[u] = IMask.MaskFactory(this.el, {mask: this.definitions[u]})\n        }\n      }, {\n        key: \"_appendTail\", value: function (u, n) {\n          for (var i = \"\", s = this._hollows.slice(), r = !1, o = 0, a = this._mapPosToDefIndex(u.length); o < n.length; ++a) {\n            var l = n[o], h = this._charDefs[a];\n            if (!h) {\n              r = !0;\n              break\n            }\n            if (h.type === t.DEF_TYPES.INPUT) {\n              var A = this._resolvers[h.char], c = A.resolve(l, a, u) || \"\";\n              c ? (c = e(c, l), ++o) : (h.optional || (c = this._placeholder.char), s.push(a)), u += i + c, i = \"\"\n            } else i += h.char\n          }\n          return [u, s, r]\n        }\n      }, {\n        key: \"_extractInput\", value: function (u) {\n          for (var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = \"\", i = 0, s = this._mapPosToDefIndex(e); i < u.length && s < this._charDefs.length; ++s) {\n            var r = u[i], o = this._charDefs[s];\n            this._isHiddenHollow(s) || (o.type !== t.DEF_TYPES.INPUT || this._isHollow(s) || (n += r), ++i)\n          }\n          return n\n        }\n      }, {\n        key: \"_isHollow\", value: function (u) {\n          return this._hollows.indexOf(u) >= 0\n        }\n      }, {\n        key: \"_isHiddenHollow\", value: function (u) {\n          return this._isHollow(u) && this._charDefs[u] && this._charDefs[u].optional\n        }\n      }, {\n        key: \"_hollowsBefore\", value: function (u) {\n          var e = this;\n          return this._hollows.filter(function (t) {\n            return t < u && e._isHiddenHollow(t)\n          })\n        }\n      }, {\n        key: \"_mapDefIndexToPos\", value: function (u) {\n          return u - this._hollowsBefore(u).length\n        }\n      }, {\n        key: \"_mapPosToDefIndex\", value: function (u) {\n          for (var e = u; this._isHiddenHollow(e - 1);)++e;\n          return u + this._hollowsBefore(e).length\n        }\n      }, {\n        key: \"_generateInsertSteps\", value: function (u, n) {\n          for (var i = u, s = this._hollows.slice(), r = \"\", o = [[i, s.slice()]], a = 0, l = this._mapPosToDefIndex(u.length); a < n.length;) {\n            var h = this._charDefs[l];\n            if (!h)break;\n            var A = n[a];\n            if (h.type === t.DEF_TYPES.INPUT) {\n              var c = this._resolvers[h.char], f = c.resolve(A, a, i) || \"\";\n              f ? (i += r + e(f, A), r = \"\", o.push([i, s.slice()])) : h.optional && s.indexOf(l) < 0 && s.push(l), (f || h.optional) && ++l, !f && h.optional || ++a\n            } else r += h.char, A === h.char && ++a, ++l\n          }\n          return o\n        }\n      }, {\n        key: \"resolve\", value: function (u, e) {\n          var n = e.cursorPos, i = e.oldSelection, s = e.oldValue, r = Math.min(n, i.start), o = Math.max(i.end - r || s.length - u.length, 0), a = n - r, h = u.substring(0, r), A = u.substring(r + a), c = u.substr(r, a), f = this._extractInput(A, r + o), F = this._mapPosToDefIndex(r);\n          this._hollows = this._hollows.filter(function (u) {\n            return u < F\n          });\n          for (var D = h, E = this._generateInsertSteps(h, c), _ = E.length - 1; _ >= 0; --_) {\n            var p, d = l(E[_], 2);\n            p = d[0], this._hollows = d[1];\n            var v = this._appendTail(p, f), B = l(v, 3), C = B[0], y = B[1], k = B[2];\n            if (!k) {\n              var g = [C, y];\n              D = g[0], this._hollows = g[1], n = p.length;\n              break\n            }\n          }\n          if (c) {\n            var P = this._appendFixedEnd(D);\n            n += P.length - D.length, D = P\n          }\n          if (!c && n === D.length) {\n            for (var w = this._mapPosToDefIndex(n - 1), m = !1; w > 0; --w) {\n              var b = this._charDefs[w];\n              if (b.type === t.DEF_TYPES.INPUT) {\n                if (!this._isHollow(w))break;\n                m = !0\n              }\n            }\n            m && (D = D.slice(0, w + 1))\n          }\n          return D = this._appendPlaceholderEnd(D), e.cursorPos = n, D\n        }\n      }, {\n        key: \"_fireChangeEvents\", value: function () {\n          r(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), \"_fireChangeEvents\", this).call(this), this._isChanged && this.isComplete && this.fireEvent(\"complete\")\n        }\n      }, {\n        key: \"_appendFixedEnd\", value: function (u) {\n          for (var e = this._mapPosToDefIndex(u.length); ; ++e) {\n            var n = this._charDefs[e];\n            if (!n)break;\n            if (!this._isHiddenHollow(e)) {\n              if (n.type === t.DEF_TYPES.INPUT)break;\n              e >= u.length && (u += n.char)\n            }\n          }\n          return u\n        }\n      }, {\n        key: \"_appendPlaceholderEnd\", value: function (u) {\n          for (var e = this._mapPosToDefIndex(u.length); e < this._charDefs.length; ++e) {\n            var n = this._charDefs[e];\n            n.type !== t.DEF_TYPES.INPUT || this._isHollow(e) || this._hollows.push(e), \"always\" === this._placeholder.show && (u += n.type === t.DEF_TYPES.FIXED ? n.char : n.optional ? \"\" : this._placeholder.char)\n          }\n          return u\n        }\n      }, {\n        key: \"_alignCursor\", value: function () {\n          for (var u = this._mapPosToDefIndex(this.cursorPos), e = u; e >= 0; --e) {\n            var n = this._charDefs[e], i = e - 1, s = this._charDefs[i];\n            if (!this._isHiddenHollow(i) && (!n || n.type === t.DEF_TYPES.INPUT && this._isHollow(e) && !this._isHiddenHollow(e)) && !this._isHollow(i) && (u = e, !s || s.type === t.DEF_TYPES.INPUT))break\n          }\n          this.cursorPos = this._mapDefIndexToPos(u)\n        }\n      }, {\n        key: \"isComplete\", get: function () {\n          var u = this;\n          return !this._charDefs.filter(function (e, n) {\n            return e.type === t.DEF_TYPES.INPUT && !e.optional && u._isHollow(n)\n          }).length\n        }\n      }, {\n        key: \"unmaskedValue\", get: function () {\n          for (var u = this.rawValue, e = \"\", n = 0, i = 0; n < u.length && i < this._charDefs.length; ++i) {\n            var s = u[n], r = this._charDefs[i];\n            this._isHiddenHollow(i) || (r.unmasking && !this._isHollow(i) && (r.type === t.DEF_TYPES.INPUT && this._resolvers[r.char].resolve(s, n, u) || r.char === s) && (e += s), ++n)\n          }\n          return e\n        }, set: function (u) {\n          this._hollows.length = 0;\n          var e, t = this._appendTail(\"\", u), n = l(t, 2);\n          e = n[0], this._hollows = n[1], this.el.value = this._appendPlaceholderEnd(e), this._onChangeState()\n        }\n      }, {\n        key: \"placeholder\", get: function () {\n          return this._placeholder\n        }, set: function (u) {\n          this._placeholder = s({}, t.DEFAULT_PLACEHOLDER, u), this._initialized && (this.unmaskedValue = this.unmaskedValue)\n        }\n      }, {\n        key: \"placeholderLabel\", get: function () {\n          var u = this;\n          return this._charDefs.map(function (e) {\n            return e.type === t.DEF_TYPES.FIXED ? e.char : e.optional ? \"\" : u._placeholder.char\n          }).join(\"\")\n        }\n      }, {\n        key: \"definitions\", get: function () {\n          return this._definitions\n        }, set: function (u) {\n          this._installDefinitions(u), this._initialized && (this.unmaskedValue = this.unmaskedValue)\n        }\n      }, {\n        key: \"mask\", get: function () {\n          return this._mask\n        }, set: function (u) {\n          this._mask = u, this._initialized && (this.definitions = this.definitions)\n        }\n      }]), t\n    }(h);\n    return f.DEFINITIONS = {\n      0: /\\d/,\n      a: /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n      \"*\": /./\n    }, f.DEF_TYPES = {INPUT: \"input\", FIXED: \"fixed\"}, f.DEFAULT_PLACEHOLDER = {\n      show: \"lazy\",\n      char: \"_\"\n    }, t.MaskFactory = function (e, t) {\n      var n = t.mask;\n      return n instanceof h ? n : n instanceof RegExp ? new A(e, t) : n instanceof Function ? new c(e, t) : u(n) ? new f(e, t) : new h(e, t)\n    }, t.BaseMask = h, t.FuncMask = c, t.RegExpMask = A, t.PatternMask = f, window.IMask = t, t\n  });\n//# sourceMappingURL=imask.min.js.map\n});\n\nif($('.news-item-inner').length == 0){\n  $('.main-wrap').addClass('no-news');\n}\nif(window.innerWidth > 1024){\n  $('body').removeClass('overfl-hidden');\n}\n\n$(document).ready(function(){\n  $('button, .bkspace-input, .clear-sum').on('mousedown', function(event){\n    event.preventDefault();\n    new Audio( 'audio/tink.mp3').play();\n  });\n});\n\nvar currRootTab = $('#mob');\nvar inputFocus = document.getElementById('number');\n\nvar allInputTypes = ['number', 'mobile-contract', 'pay-number', 'pay-contract', 'card', 'wallet' , 'login'];\n\nvar inputRules = {\n  inputs: ['number'],\n  reqCodes: ''\n};\n\n$(document).ready(function(){\n\n\n// / ================================= INIT MASKS ===============\n  var maskPhone = new IMask(document.getElementById('number'), { mask: '(000) 000-00-00' })\n  var maskMobContract = new IMask(document.getElementById('mobile-contract'), { mask: '000-000-000' });\n  var maskPayPhone = new IMask(document.getElementById('pay-number'), { mask: '(000) 000-00-00' });\n  var maskPayContract = new IMask(document.getElementById('pay-contract'), { mask: '00 00 00 00' });\n  var maskCard = new IMask(document.getElementById('card'), { mask: '0000 0000 0000 0000' });\n  var maskWallet = new IMask(document.getElementById('wallet'), { mask: '000-000-000' });\n  var maskLogin = new IMask(document.getElementById('login'), { mask: '************************' });\n\n\n  $(\".sum\").maskMoney({allowNegative:false});\n  /* END ============================= INIT MASKS============================= */\n\n  var goFromOtherTab = false;\n  $('li.tab a').on('click', function () {\n    currRootTab = $($(this).attr('href'));\n    goFromOtherTab = true;\n    $(currRootTab).find('.operator-item')[0].click();\n    prevLetterKeyboard = $(currRootTab).find('.keyboard-wrap.letters.ru');\n  });\n  setTimeout(function () {\n    $('li.tab a')[0].click();\n  }, 100);\n\n\n  $('.operator-item').on('click', function (event) {\n    event.preventDefault();\n    allowEnterCents = false;\n    $(currRootTab).find('input').val('');\n\n    if(!goFromOtherTab) {\n      $('#'+$(currRootTab).attr('id')+'-rule').attr('class', 'small-keyboard');\n    }\n    goFromOtherTab = false;\n\n    currRootTab.find('.keyboard-operator-name').text($(this).find('.operator-name').text());\n    currRootTab.find('.input-wrap-icon').removeClass('show');\n\n    inputRules.inputs = [];\n    inputRules.reqCodes = '';\n    if(currRootTab.attr('id') == 'mob') {\n      if (this.getAttribute('number') != null) {\n        $('#mobile-number').addClass('show');\n        inputRules.inputs.push('number');\n        inputRules.reqCodes = this.getAttribute('number');\n      }\n      if (this.getAttribute('mobile-contract') != null) {\n        $('#mobile-contract-wrap').addClass('show');\n        inputRules.inputs.push('mobile-contract');\n      }\n    }\n\n    if(currRootTab.attr('id')  == 'internet') {\n      if (this.getAttribute('pay-contract') != null) {\n        $('#pay-contract-wrap').addClass('show');\n        inputRules.inputs.push('pay-contract');\n      }\n      if (this.getAttribute('number') != null) {\n        $('#pay-mobile-number').addClass('show');\n        inputRules.inputs.push('pay-number');\n        inputRules.reqCodes = this.getAttribute('number');\n      }\n    }\n\n    if(currRootTab.attr('id')  == 'pay-systems') {\n      if (this.getAttribute('card') != null) {\n        $('#card-wrap').addClass('show');\n        inputRules.inputs.push('card');\n      }\n      if (this.getAttribute('wallet') != null) {\n        $('#wallet-wrap').addClass('show');\n        inputRules.inputs.push('wallet');\n      }\n    }\n\n    if(currRootTab.attr('id') == 'web-services') {\n      if (this.getAttribute('login') != null) {\n        $('#service-login-wrap').addClass('show');\n        inputRules.inputs.push('login');\n      }\n    }\n\n    checkValidFields();\n  });\n\n  // ===============================================\n  // DEMO NAVIGATION ==================\n  $('.back').on('click', function (event) {\n    event.preventDefault();\n\n    $('#'+$(currRootTab).attr('id')+'-rule').attr('class', 'small-keyboard');\n  });\n\n  $('input').on('click', function () {\n    $(inputFocus).removeClass('active');\n\n    inputFocus = this;\n    $(inputFocus).addClass('active');\n  });\n\n\n  // ANIMATION NEXT BUTTON =========================================\n  var element;\n  var touchOnElement = true;\n  $(document).on('touchstart', '.next.onkeyboard:not(.disable)' , function (event) {\n    event.preventDefault();\n    touchOnElement = true;\n\n    var touch = event.touches[0];\n    $(this).addClass('allow');\n    element = document.elementFromPoint(touch.pageX,touch.pageY);\n  });\n  $(document).on('touchmove', '.next.onkeyboard:not(.disable)' , function (event) {\n    var touch = event.touches[0];\n    if (element !== document.elementFromPoint(touch.pageX,touch.pageY)) {\n      $(this).removeClass('allow');\n      touchOnElement = false;\n    }\n  });\n\n  $(document).on('touchend', '.next.onkeyboard:not(.disable)' , function (event) {\n    $(this).removeClass('allow');\n\n    if (touchOnElement) {\n      setPayData();\n\n      var btnWidth = this.offsetWidth;\n      var innerWidth = $(this).find('.next-onkeyboard-inner').width();\n\n      if(btnWidth != innerWidth){\n        setTimeout(function () {\n          $('#'+currRootTab.attr('id')+'-rule').attr('class', 'check-begin');\n        }, 100);\n      } else {\n        $('#'+currRootTab.attr('id')+'-rule').attr('class', 'check-process');\n\n        var ruleIdForTimeout = '#'+currRootTab.attr('id')+'-rule';\n        setTimeout(function () {\n          var newClassName = Math.random() > 0.5 ? 'check-success' : 'check-error';\n          $(ruleIdForTimeout).attr('class', newClassName);\n\n          if(newClassName == 'check-success'){\n            new Audio('audio/payed.mp3').play();\n            setTimeout(function () {\n              $('#'+$(currRootTab).attr('id')+'-rule').attr('class', 'small-keyboard');\n            }, 10000);\n          }\n        }, 2500);\n      }\n    }\n  });\n\n\n  function setPayData() {\n    switch(currRootTab.attr('id')){\n      case 'mob':\n        $(currRootTab).find('.pay-number').text(document.getElementById(inputRules.inputs[0]).value);\n        break;\n      case 'internet':\n        $(currRootTab).find('.pay-number').text(document.getElementById(inputRules.inputs[0]).value);\n        break;\n      case 'pay-systems':\n        $(currRootTab).find('.pay-number').text(document.getElementById(inputRules.inputs[0]).value);\n        break;\n      case 'web-services':\n        $(currRootTab).find('.pay-number:not(second-data)').text(document.getElementById(inputRules.inputs[0]).value);\n        break;\n    }\n\n    $(currRootTab).find('.owner-score .value').text($(currRootTab).find('.sum').val());\n    $(currRootTab).find('.from-client .value').text($(currRootTab).find('.sum').val());\n    if($(currRootTab).find('.remark-text').val()){\n      $(currRootTab).find('.wrap-remark-check').show();\n      $(currRootTab).find('.reseiver-name').text($(currRootTab).find('.remark-text').val());\n    }\n    else{\n      $(currRootTab).find('.wrap-remark-check').hide();\n    }\n  }\n\n\n  $(document).on('mousedown', '.next.onkeyboard:not(.disable)' , function (event) {\n    // event.preventDefault();\n\n    $(this).addClass('allow')\n  });\n\n  $(document).on('mouseup', '.next.onkeyboard:not(.disable)' , function (event) {\n    // event.preventDefault();\n\n    setPayData();\n\n    var btnWidth = this.offsetWidth;\n    var innerWidth = $(this).find('.next-onkeyboard-inner').width();\n\n    if(btnWidth != innerWidth){\n      setTimeout(function () {\n        $('#'+currRootTab.attr('id')+'-rule').attr('class', 'check-begin');\n      }, 100);\n    } else {\n      $('#'+currRootTab.attr('id')+'-rule').attr('class', 'check-process');\n\n      var ruleIdForTimeout = '#'+currRootTab.attr('id')+'-rule';\n      setTimeout(function () {\n        var newClassName = Math.random() > 0.5 ? 'check-success' : 'check-error';\n        $(ruleIdForTimeout).attr('class', newClassName);\n\n        if(newClassName == 'check-success'){\n          new Audio('audio/payed.mp3').play();\n          setTimeout(function () {\n            $('#'+$(currRootTab).attr('id')+'-rule').attr('class', 'small-keyboard');\n          }, 10000);\n        }\n      }, 2500);\n    }\n  });\n\n  $(document).on('mouseleave', '.next.onkeyboard:not(.disable)' , function (event) {\n    $(this).removeClass('allow');\n  });\n  // END ================== ANIMATION NEXT BUTTON =======================\n\n  $('.next.check').on('click', function (event) {\n    event.preventDefault();\n\n    $('#'+currRootTab.attr('id')+'-rule').attr('class', 'check-process');\n\n    var ruleIdForTimeout = '#'+currRootTab.attr('id')+'-rule';\n    setTimeout(function () {\n      var newClassName = Math.random() > 0.5 ? 'check-success' : 'check-error';\n      $(ruleIdForTimeout).attr('class', newClassName);\n\n      if(newClassName == 'check-success'){\n        new Audio('audio/payed.mp3').play();\n        setTimeout(function () {\n          $('#'+$(currRootTab).attr('id')+'-rule').attr('class', 'small-keyboard');\n        }, 10000);\n      }\n    }, 2500);\n  });\n\n  // END DEMO NAVIGATION ==============\n\n  var showModalTimeO;\n  $(document).on('mouseenter', '#wrap-nav-icon, .keyboard-wrap:not(.deprecate-modal), li.menu-item', function () {\n    var self = this;\n    showModalTimeO = setTimeout(function () {\n      $(self).addClass('show-modal');\n    }, 700);\n  });\n\n  $('#wrap-nav-icon, .keyboard-wrap, li.menu-item').on('mouseleave', function () {\n    clearTimeout(showModalTimeO);\n    $(this).removeClass('show-modal');\n  });\n\n\n  $('#wrap-nav-icon, .nav-menu-shadow').click(function(){\n    $(this).removeClass('show-modal');\n    clearTimeout(showModalTimeO);\n    $('body').toggleClass('show-menu');\n    $('.menu-list li:eq(1)').removeClass('help-active');\n    $(\".help-modal\").removeClass('show');\n  });\n\n  $('.showmore').click(function(){\n    $(this).toggleClass('show-showmore');\n  });\n\n  $('ul.nav-top').tabs();\n\n  $('.inputs-wrap input').on('focus click touch tap', function () {\n    event.preventDefault();\n    $(inputFocus).removeClass('active')\n    $(this).addClass('active')\n\n    inputFocus = this;\n  });\n\n\n  $('.show-help').on('click', function (event) {\n    event.preventDefault();\n    // if($(\".help-modal.show\").length) {\n    //   $('body').removeClass('show-menu');\n    // }\n    // else {\n    //   $('body').addClass('show-menu');\n    // }\n\n    // $('.menu-list li:eq(1)').toggleClass('help-active');\n    $(\".help\").toggleClass('show-modal');\n  });\n\n  $('.remark:not(.check)').on('click', function (event) {\n    event.preventDefault();\n    $(inputFocus).removeClass('active');\n    $(currRootTab).find('.remark-text').val('');\n    $(currRootTab).find('.remark-text').toggleClass('show');\n    if($(currRootTab).find('.remark-text').hasClass('show')) {\n      inputFocus = $(currRootTab).find('.remark-text')[0];\n      inputFocus.focus();\n      $(inputFocus).addClass('active');\n    }\n    else inputFocus = document.getElementById(inputRules.inputs[0]);\n  });\n\n\n  $('.wrap-sum .input-overfl').on('click', function () {\n    var inputSum = $(this).prev()[0];\n\n    $(inputFocus).removeClass('active');\n    $(inputSum).addClass('active');\n\n    inputFocus = inputSum;\n  });\n\n\n  var prevKey = {};\n  var prevLetterKeyboard = $(currRootTab).find('.keyboard-wrap.letters.ru')[0];\n  $('.keyboard-wrap .key-inner').on('click', function () {\n\n    $(this).closest('.keyboard-wrap').addClass('deprecate-modal');\n\n    if($(this).parent().hasClass('upper')){\n      $(this).parent().toggleClass('active');\n      $(this).closest('.keyboard-wrap.letters').toggleClass('uppercased');\n      return\n    } else{\n      var self = this;\n      $(prevKey).removeClass('noHover');\n      prevKey = this;\n      setTimeout(function () {\n        $(self).addClass('noHover');\n      }, 400);\n    }\n    if($(this).parent().hasClass('switch-numbers')){\n      $(currRootTab).find('.keyboard-wrap.numbers').show();\n      $(currRootTab).find('.keyboard-wrap.letters.ru').hide();\n      $(currRootTab).find('.keyboard-wrap.letters.en').hide();\n      return\n    }\n    if($(this).hasClass('letters')){\n      $(currRootTab).find('.keyboard-wrap.numbers').hide();\n      $(prevLetterKeyboard).show();\n      $(currRootTab).find('.keyboard-wrap.symbols').hide();\n      return\n    }\n    if($(this).parent().hasClass('switch-ru')){\n      prevLetterKeyboard = $(currRootTab).find('.keyboard-wrap.letters.ru')[0];\n      $(currRootTab).find('.keyboard-wrap.letters.en').hide();\n      $(currRootTab).find('.keyboard-wrap.letters.ru').show();\n      return\n    }\n    if($(this).parent().hasClass('switch-en')){\n      prevLetterKeyboard = $(currRootTab).find('.keyboard-wrap.letters.en')[0];\n      $(currRootTab).find('.keyboard-wrap.letters.en').show();\n      $(currRootTab).find('.keyboard-wrap.letters.ru').hide();\n      return\n    }\n    if($(this).parent().hasClass('switch-symbols')){\n      $(currRootTab).find('.keyboard-wrap.letters.en').hide();\n      $(currRootTab).find('.keyboard-wrap.letters.ru').hide();\n      $(currRootTab).find('.keyboard-wrap.symbols').show();\n      return\n    }\n\n    if($(this).parent().hasClass('space')) {\n      if(!$(inputFocus).hasClass('remark-text')) return;\n\n      inputFocus.value = inputFocus.value + ' ';\n      inputFocus.scrollLeft = inputFocus.scrollWidth;\n      return\n    }\n    if($(this).parent().hasClass('bkspace')) {\n      if($(inputFocus).hasClass('remark-text')){\n        inputFocus.value = inputFocus.value.slice(0, -1);\n        inputFocus.scrollLeft = inputFocus.scrollWidth;\n        return;\n      }\n      if(!$(inputFocus).hasClass('sum')){\n        var currMask = getCurrMask(inputFocus);\n        currMask.rawValue = currMask.unmaskedValue.slice(0, -1);\n        inputFocus.scrollLeft = inputFocus.scrollWidth;\n      } else {\n        if(inputFocus.value) {\n          var premoney = inputFocus.value.split('.')[0] || '';\n          var cents = inputFocus.value.split('.')[1] || '00';\n          var newValue;\n          if(!allowEnterCents){\n            newValue = parseInt('0' + premoney.slice(0,-1)) + '.' + cents;\n          }\n          else{\n            newValue = premoney + '.0' + cents[0];\n            if(cents[0] == '0') allowEnterCents = false;\n          }\n\n          inputFocus.value = newValue;\n        }\n      }\n      return;\n    }\n\n    if($(inputFocus).hasClass('sum') &&\n      (!(this.innerText>=0 && this.innerText<=9) && this.innerText != '.')){\n\n      return;\n    }\n\n    if($(inputFocus).hasClass('remark-text')){\n      inputFocus.value = inputFocus.value + this.innerText;\n    }\n    else{\n      addKeyToInput(this.innerText);\n      checkValidFields();\n    }\n    inputFocus.scrollLeft = inputFocus.scrollWidth;\n  });\n\n\n  $(document).on('keydown', function(event){\n    if(event.key.length > 1 && event.keyCode != 8) return;\n\n    if($(inputFocus).hasClass('remark-text')){\n      //backspace\n      if(event.keyCode == 8) {\n        inputFocus.value = inputFocus.value.slice(0, -1);\n        inputFocus.scrollLeft = inputFocus.scrollWidth;\n        return;\n      }\n\n      inputFocus.value = inputFocus.value + event.key;\n      inputFocus.scrollLeft = inputFocus.scrollWidth;\n    }\n    else{\n      //backspace\n      if(event.keyCode == 8){\n        if(!$(inputFocus).hasClass('sum')){\n          var currMask = getCurrMask(inputFocus);\n          currMask.rawValue = currMask.unmaskedValue.slice(0, -1);\n        } else {\n          var premoney = inputFocus.value.split('.')[0] || '';\n          var cents = inputFocus.value.split('.')[1] || '00';\n          var newValue;\n          if(!allowEnterCents){\n            newValue = parseInt('0' + premoney.slice(0,-1)) + '.' + cents;\n          }\n          else{\n            newValue = premoney + '.0' + cents[0];\n            if(cents[0] == '0') allowEnterCents = false;\n          }\n\n          inputFocus.value = newValue;\n        }\n      } else{\n        if(!$(inputFocus).hasClass('sum')  ||\n          ($(inputFocus).hasClass('sum') && event.keyCode>=48 && event.key<=57)) {\n          addKeyToInput(event.key);\n        }\n        if($(inputFocus).hasClass('sum') && event.key == '.'){\n          addKeyToInput(event.key);\n        }\n      }\n\n      inputFocus.scrollLeft = inputFocus.scrollWidth;\n      checkValidFields();\n    }\n  });\n\n  var allowEnterCents = false;\n  function addKeyToInput(key) {\n    var currMask = getCurrMask(inputFocus);\n\n    if(currMask) {\n      var newValue = currMask.unmaskedValue + key;\n      if(currMask.unmaskedValue.length >= 3 || !inputRules.reqCodes || ((inputRules.reqCodes.indexOf(newValue) % 4) == 0))\n        currMask.rawValue = newValue;\n    }\n    else {\n      if($(inputFocus).hasClass('sum')){\n        var premoney = +inputFocus.value.split('.')[0] || '';\n        var cents = inputFocus.value.split('.')[1] || '00';\n        var newValue = inputFocus.value;\n\n        if(key != '.') {\n          if(!allowEnterCents)\n            newValue = parseInt(premoney + key) + '.' + cents;\n          else{\n            if(parseInt(cents)>9) return;\n            newValue = parseInt('0'+premoney) + '.' + parseInt(cents) + key;\n          }\n        }\n        else{\n          allowEnterCents = true;\n          return\n        }\n        inputFocus.value = (newValue.length < 8)\n                                    ? newValue\n                                    : inputFocus.value;\n      }\n    }\n  }\n\n\n  function checkValidFields() {\n    var validTrue = false;\n    inputRules.inputs.forEach(function (el) {\n      var currMask = getCurrMask(document.getElementById(el));\n      validTrue = currMask.isComplete;\n      if($(currRootTab).attr('id') == 'web-services') {\n        if(el == 'login') validTrue = currMask.rawValue.length;\n      }\n\n      if(!validTrue) return\n    });\n\n    var validSumTrue = parseInt(currRootTab.find('input.sum').inputmask('unmaskedvalue')) > 0;\n\n    if(validTrue && validSumTrue){\n      currRootTab.find('button.next.onkeyboard').removeClass('disable');\n    } else {\n      currRootTab.find('button.next.onkeyboard').addClass('disable');\n    }\n  }\n\n  $('.clear-sum').on('click', function () {\n    var inputSum = $(this).siblings(\"input\")[0];\n    $(this).closest('.wrap-pay-data').find('button.next').addClass('disable');\n    inputSum.value = '';\n    allowEnterCents = false;\n  });\n\n\n  $('.bkspace-input').on('click', function () {\n    var currMask = {};\n    var input = $(this).siblings('input')[0];\n\n    currMask = getCurrMask(input);\n\n    currMask.rawValue = currMask.unmaskedValue.slice(0, -1);\n\n    checkValidFields();\n    input.focus();\n  });\n\n\n  function getCurrMask(input) {\n    switch(input.id){\n      case 'number': return maskPhone;\n      case 'mobile-contract': return maskMobContract;\n      case 'pay-number': return maskPayPhone;\n      case 'pay-contract': return maskPayContract;\n      case 'card': return maskCard;\n      case 'wallet': return maskWallet;\n      case 'login': return maskLogin;\n      default: return;\n    }\n  }\n\n\n// Get the modal\n  var modal = document.getElementById('modal-news');\n  var wrapModal = document.querySelector('.wrap-table_c-modal'); //click for close modal!!!!!\n\n// Get the button that opens the modal\n//   var btn = document.getElementById(\"myBtn\");\n\n// Get the <span> element that closes the modal\n  var span = document.querySelector(\".close-news-modal\");\n\n// When the user clicks the button, open the modal\n//   btn.onclick = function() {\n//     modal.style.display = \"table\";\n  // }\n\n// When the user clicks on <span> (x), close the modal\n  span.onclick = function() {\n    $(modal).addClass('hide-news');\n    $('body').removeClass('overfl-hidden');\n    // $('.main-keyboard .number').focus();\n  };\n\n// When the user clicks anywhere outside of the modal, close it\n  window.onclick = function(event) {\n    if (event.target == wrapModal) {\n      $(modal).addClass('hide-news');\n      $('body').removeClass('overfl-hidden');\n      // $('.main-keyboard .number').focus();\n    }\n  }\n\n});\n\nfunction validateEmail(email) {\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/*\n * Input Mask Core\n * http://github.com/RobinHerbots/jquery.inputmask\n * Copyright (c) 2010 -\tRobin Herbots\n * Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)\n * Version: 0.0.0-dev\n */\n(function (factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine(\"inputmask\", [\"inputmask.dependencyLib\"], factory);\n\t} else if (typeof exports === \"object\") {\n\t\tmodule.exports = factory(require(\"./inputmask.dependencyLib\"));\n\t} else {\n\t\tfactory(window.dependencyLib || jQuery);\n\t}\n}\n(function ($) {\n\tvar ua = navigator.userAgent,\n\t\tmobile = /mobile/i.test(ua),\n\t\tiemobile = /iemobile/i.test(ua),\n\t\tiphone = /iphone/i.test(ua) && !iemobile,\n\t\tandroid = /android/i.test(ua) && !iemobile;\n\n\tfunction Inputmask(alias, options, internal) {\n\t\t//allow instanciating without new\n\t\tif (!(this instanceof Inputmask)) {\n\t\t\treturn new Inputmask(alias, options, internal);\n\t\t}\n\n\t\tthis.el = undefined;\n\t\tthis.events = {};\n\t\tthis.maskset = undefined;\n\t\tthis.refreshValue = false; //indicate a refresh from the inputvalue is needed (form.reset)\n\n\t\tif (internal !== true) {\n\t\t\t//init options\n\t\t\tif ($.isPlainObject(alias)) {\n\t\t\t\toptions = alias;\n\t\t\t} else {\n\t\t\t\toptions = options || {};\n\t\t\t\toptions.alias = alias;\n\t\t\t}\n\t\t\tthis.opts = $.extend(true, {}, this.defaults, options);\n\t\t\tthis.noMasksCache = options && options.definitions !== undefined;\n\t\t\tthis.userOptions = options || {}; //user passed options\n\t\t\tthis.isRTL = this.opts.numericInput;\n\t\t\tresolveAlias(this.opts.alias, options, this.opts);\n\t\t}\n\t}\n\n\tInputmask.prototype = {\n\t\tdataAttribute: \"data-inputmask\", //data attribute prefix used for attribute binding\n\t\t//options default\n\t\tdefaults: {\n\t\t\tplaceholder: \"_\",\n\t\t\toptionalmarker: {\n\t\t\t\tstart: \"[\",\n\t\t\t\tend: \"]\"\n\t\t\t},\n\t\t\tquantifiermarker: {\n\t\t\t\tstart: \"{\",\n\t\t\t\tend: \"}\"\n\t\t\t},\n\t\t\tgroupmarker: {\n\t\t\t\tstart: \"(\",\n\t\t\t\tend: \")\"\n\t\t\t},\n\t\t\talternatormarker: \"|\",\n\t\t\tescapeChar: \"\\\\\",\n\t\t\tmask: null, //needs tobe null instead of undefined as the extend method does not consider props with the undefined value\n\t\t\toncomplete: $.noop, //executes when the mask is complete\n\t\t\tonincomplete: $.noop, //executes when the mask is incomplete and focus is lost\n\t\t\toncleared: $.noop, //executes when the mask is cleared\n\t\t\trepeat: 0, //repetitions of the mask: * ~ forever, otherwise specify an integer\n\t\t\tgreedy: true, //true: allocated buffer for the mask and repetitions - false: allocate only if needed\n\t\t\tautoUnmask: false, //automatically unmask when retrieving the value with $.fn.val or value if the browser supports __lookupGetter__ or getOwnPropertyDescriptor\n\t\t\tremoveMaskOnSubmit: false, //remove the mask before submitting the form.\n\t\t\tclearMaskOnLostFocus: true,\n\t\t\tinsertMode: true, //insert the input or overwrite the input\n\t\t\tclearIncomplete: false, //clear the incomplete input on blur\n\t\t\talias: null,\n\t\t\tonKeyDown: $.noop, //callback to implement autocomplete on certain keys for example. args => event, buffer, caretPos, opts\n\t\t\tonBeforeMask: null, //executes before masking the initial value to allow preprocessing of the initial value.\targs => initialValue, opts => return processedValue\n\t\t\tonBeforePaste: function (pastedValue, opts) {\n\t\t\t\treturn $.isFunction(opts.onBeforeMask) ? opts.onBeforeMask(pastedValue, opts) : pastedValue;\n\t\t\t}, //executes before masking the pasted value to allow preprocessing of the pasted value.\targs => pastedValue, opts => return processedValue\n\t\t\tonBeforeWrite: null, //executes before writing to the masked element. args => event, opts\n\t\t\tonUnMask: null, //executes after unmasking to allow postprocessing of the unmaskedvalue.\targs => maskedValue, unmaskedValue, opts\n\t\t\tshowMaskOnFocus: true, //show the mask-placeholder when the input has focus\n\t\t\tshowMaskOnHover: true, //show the mask-placeholder when hovering the empty input\n\t\t\tonKeyValidation: $.noop, //executes on every key-press with the result of isValid. Params: key, result, opts\n\t\t\tskipOptionalPartCharacter: \" \", //a character which can be used to skip an optional part of a mask\n\t\t\tnumericInput: false, //numericInput input direction style (input shifts to the left while holding the caret position)\n\t\t\trightAlign: false, //align to the right\n\t\t\tundoOnEscape: true, //pressing escape reverts the value to the value before focus\n\t\t\t//numeric basic properties\n\t\t\tradixPoint: \"\", //\".\", // | \",\"\n\t\t\tradixPointDefinitionSymbol: undefined, //set the radixPoint definitionSymbol ~ used for awareness of the radixpoint\n\t\t\tgroupSeparator: \"\", //\",\", // | \".\"\n\t\t\t//numeric basic properties\n\t\t\tkeepStatic: null, //try to keep the mask static while typing. Decisions to alter the mask will be posponed if possible - null see auto selection for multi masks\n\t\t\tpositionCaretOnTab: true, //when enabled the caret position is set after the latest valid position on TAB\n\t\t\ttabThrough: false, //allows for tabbing through the different parts of the masked field\n\t\t\tsupportsInputType: [\"text\", \"tel\", \"password\"], //list with the supported input types\n\t\t\t//specify keyCodes which should not be considered in the keypress event, otherwise the preventDefault will stop their default behavior especially in FF\n\t\t\tignorables: [8, 9, 13, 19, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 0, 229],\n\t\t\tisComplete: null, //override for isComplete - args => buffer, opts - return true || false\n\t\t\tcanClearPosition: $.noop, //hook to alter the clear behavior in the stripValidPositions args => maskset, position, lastValidPosition, opts => return true|false\n\t\t\tpostValidation: null, //hook to postValidate the result from isValid.\tUsefull for validating the entry as a whole.\targs => buffer, currentResult, opts => return true/false\n\t\t\tstaticDefinitionSymbol: undefined, //specify a definitionSymbol for static content, used to make matches for alternators\n\t\t\tjitMasking: false, //just in time masking ~ only mask while typing, can n (number), true or false\n\t\t\tnullable: true, //return nothing instead of the buffertemplate when the user hasn't entered anything.\n\t\t\tinputEventOnly: false, //dev option - testing inputfallback behavior\n\t\t\tnoValuePatching: false, //dev option - disable value property patching\n\t\t\tpositionCaretOnClick: \"lvp\", //none, lvp (based on the last valid position (default), radixFocus (position caret to radixpoint on initial click)\n\t\t\tcasing: null, //mask-level casing. Options: null, \"upper\", \"lower\" or \"title\"\n\t\t\tinputmode: \"verbatim\", //specify the inputmode  - already in place for when browsers will support it\n\t\t\tcolorMask: false, //enable css styleable mask\n\t\t\tandroidHack: false //see README_android.md\n\t\t},\n\t\tdefinitions: {\n\t\t\t\"9\": {\n\t\t\t\tvalidator: \"[0-9]\",\n\t\t\t\tcardinality: 1,\n\t\t\t\tdefinitionSymbol: \"*\"\n\t\t\t},\n\t\t\t\"a\": {\n\t\t\t\tvalidator: \"[A-Za-z\\u0410-\\u044F\\u0401\\u0451\\u00C0-\\u00FF\\u00B5]\",\n\t\t\t\tcardinality: 1,\n\t\t\t\tdefinitionSymbol: \"*\"\n\t\t\t},\n\t\t\t\"*\": {\n\t\t\t\tvalidator: \"[0-9A-Za-z\\u0410-\\u044F\\u0401\\u0451\\u00C0-\\u00FF\\u00B5]\",\n\t\t\t\tcardinality: 1\n\t\t\t}\n\t\t},\n\t\taliases: {}, //aliases definitions => see jquery.inputmask.extensions.js\n\t\tmasksCache: {},\n\t\tmask: function (elems) {\n\t\t\tvar that = this;\n\n\t\t\tfunction importAttributeOptions(npt, opts, userOptions, dataAttribute) {\n\t\t\t\tvar attrOptions = npt.getAttribute(dataAttribute),\n\t\t\t\t\toption, dataoptions, optionData, p;\n\n\t\t\t\tfunction importOption(option, optionData) {\n\t\t\t\t\toptionData = optionData !== undefined ? optionData : npt.getAttribute(dataAttribute + \"-\" + option);\n\t\t\t\t\tif (optionData !== null) {\n\t\t\t\t\t\tif (typeof optionData === \"string\") {\n\t\t\t\t\t\t\tif (option.indexOf(\"on\") === 0) optionData = window[optionData]; //get function definition\n\t\t\t\t\t\t\telse if (optionData === \"false\") optionData = false;\n\t\t\t\t\t\t\telse if (optionData === \"true\") optionData = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuserOptions[option] = optionData;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (attrOptions && attrOptions !== \"\") {\n\t\t\t\t\tattrOptions = attrOptions.replace(new RegExp(\"'\", \"g\"), '\"');\n\t\t\t\t\tdataoptions = JSON.parse(\"{\" + attrOptions + \"}\");\n\t\t\t\t}\n\n\t\t\t\t//resolve aliases\n\t\t\t\tif (dataoptions) { //pickup alias from dataAttribute\n\t\t\t\t\toptionData = undefined;\n\t\t\t\t\tfor (p in dataoptions) {\n\t\t\t\t\t\tif (p.toLowerCase() === \"alias\") {\n\t\t\t\t\t\t\toptionData = dataoptions[p];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\timportOption(\"alias\", optionData); //pickup alias from dataAttribute-alias\n\t\t\t\tif (userOptions.alias) {\n\t\t\t\t\tresolveAlias(userOptions.alias, userOptions, opts);\n\t\t\t\t}\n\n\t\t\t\tfor (option in opts) {\n\t\t\t\t\tif (dataoptions) {\n\t\t\t\t\t\toptionData = undefined;\n\t\t\t\t\t\tfor (p in dataoptions) {\n\t\t\t\t\t\t\tif (p.toLowerCase() === option.toLowerCase()) {\n\t\t\t\t\t\t\t\toptionData = dataoptions[p];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\timportOption(option, optionData);\n\t\t\t\t}\n\n\t\t\t\t$.extend(true, opts, userOptions);\n\t\t\t\treturn opts;\n\t\t\t}\n\n\t\t\tif (typeof elems === \"string\") {\n\t\t\t\telems = document.getElementById(elems) || document.querySelectorAll(elems);\n\t\t\t}\n\t\t\telems = elems.nodeName ? [elems] : elems;\n\t\t\t$.each(elems, function (ndx, el) {\n\t\t\t\tvar scopedOpts = $.extend(true, {}, that.opts);\n\t\t\t\timportAttributeOptions(el, scopedOpts, $.extend(true, {}, that.userOptions), that.dataAttribute);\n\t\t\t\tvar maskset = generateMaskSet(scopedOpts, that.noMasksCache);\n\t\t\t\tif (maskset !== undefined) {\n\t\t\t\t\tif (el.inputmask !== undefined) {\n\t\t\t\t\t\tel.inputmask.remove();\n\t\t\t\t\t}\n\t\t\t\t\t//store inputmask instance on the input with element reference\n\t\t\t\t\tel.inputmask = new Inputmask(undefined, undefined, true);\n\t\t\t\t\tel.inputmask.opts = scopedOpts;\n\t\t\t\t\tel.inputmask.noMasksCache = that.noMasksCache;\n\t\t\t\t\tel.inputmask.userOptions = $.extend(true, {}, that.userOptions);\n\t\t\t\t\tel.inputmask.isRTL = that.isRTL;\n\t\t\t\t\tel.inputmask.el = el;\n\t\t\t\t\tel.inputmask.maskset = maskset;\n\n\t\t\t\t\t$.data(el, \"_inputmask_opts\", scopedOpts);\n\n\t\t\t\t\tmaskScope.call(el.inputmask, {\n\t\t\t\t\t\t\"action\": \"mask\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn elems && elems[0] ? (elems[0].inputmask || this) : this;\n\t\t},\n\t\toption: function (options, noremask) { //set extra options || retrieve value of a current option\n\t\t\tif (typeof options === \"string\") {\n\t\t\t\treturn this.opts[options];\n\t\t\t} else if (typeof options === \"object\") {\n\t\t\t\t$.extend(this.userOptions, options); //user passed options\n\t\t\t\t//remask\n\t\t\t\tif (this.el && noremask !== true) {\n\t\t\t\t\tthis.mask(this.el);\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t},\n\t\tunmaskedvalue: function (value) {\n\t\t\tthis.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n\t\t\treturn maskScope.call(this, {\n\t\t\t\t\"action\": \"unmaskedvalue\",\n\t\t\t\t\"value\": value\n\t\t\t});\n\t\t},\n\t\tremove: function () {\n\t\t\treturn maskScope.call(this, {\n\t\t\t\t\"action\": \"remove\"\n\t\t\t});\n\t\t},\n\t\tgetemptymask: function () { //return the default (empty) mask value, usefull for setting the default value in validation\n\t\t\tthis.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n\t\t\treturn maskScope.call(this, {\n\t\t\t\t\"action\": \"getemptymask\"\n\t\t\t});\n\t\t},\n\t\thasMaskedValue: function () { //check wheter the returned value is masked or not; currently only works reliable when using jquery.val fn to retrieve the value\n\t\t\treturn !this.opts.autoUnmask;\n\t\t},\n\t\tisComplete: function () {\n\t\t\tthis.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n\t\t\treturn maskScope.call(this, {\n\t\t\t\t\"action\": \"isComplete\"\n\t\t\t});\n\t\t},\n\t\tgetmetadata: function () { //return mask metadata if exists\n\t\t\tthis.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n\t\t\treturn maskScope.call(this, {\n\t\t\t\t\"action\": \"getmetadata\"\n\t\t\t});\n\t\t},\n\t\tisValid: function (value) {\n\t\t\tthis.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n\t\t\treturn maskScope.call(this, {\n\t\t\t\t\"action\": \"isValid\",\n\t\t\t\t\"value\": value\n\t\t\t});\n\t\t},\n\t\tformat: function (value, metadata) {\n\t\t\tthis.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n\t\t\treturn maskScope.call(this, {\n\t\t\t\t\"action\": \"format\",\n\t\t\t\t\"value\": value,\n\t\t\t\t\"metadata\": metadata //true/false getmetadata\n\t\t\t});\n\t\t},\n\t\tanalyseMask: function (mask, opts) {\n\t\t\tvar tokenizer = /(?:[?*+]|\\{[0-9\\+\\*]+(?:,[0-9\\+\\*]*)?\\})|[^.?*+^${[]()|\\\\]+|./g,\n\t\t\t\tescaped = false,\n\t\t\t\tcurrentToken = new MaskToken(),\n\t\t\t\tmatch,\n\t\t\t\tm,\n\t\t\t\topenenings = [],\n\t\t\t\tmaskTokens = [],\n\t\t\t\topeningToken,\n\t\t\t\tcurrentOpeningToken,\n\t\t\t\talternator,\n\t\t\t\tlastMatch,\n\t\t\t\tgroupToken;\n\n\t\t\tfunction MaskToken(isGroup, isOptional, isQuantifier, isAlternator) {\n\t\t\t\tthis.matches = [];\n\t\t\t\tthis.openGroup = isGroup || false;\n\t\t\t\tthis.isGroup = isGroup || false;\n\t\t\t\tthis.isOptional = isOptional || false;\n\t\t\t\tthis.isQuantifier = isQuantifier || false;\n\t\t\t\tthis.isAlternator = isAlternator || false;\n\t\t\t\tthis.quantifier = {\n\t\t\t\t\tmin: 1,\n\t\t\t\t\tmax: 1\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t//test definition => {fn: RegExp/function, cardinality: int, optionality: bool, newBlockMarker: bool, casing: null/upper/lower, def: definitionSymbol, placeholder: placeholder, mask: real maskDefinition}\n\t\t\tfunction insertTestDefinition(mtoken, element, position) {\n\t\t\t\tvar maskdef = (opts.definitions ? opts.definitions[element] : undefined) || Inputmask.prototype.definitions[element];\n\t\t\t\tposition = position !== undefined ? position : mtoken.matches.length;\n\t\t\t\tvar prevMatch = mtoken.matches[position - 1];\n\t\t\t\tif (maskdef && !escaped) {\n\t\t\t\t\tvar prevalidators = maskdef.prevalidator,\n\t\t\t\t\t\tprevalidatorsL = prevalidators ? prevalidators.length : 0;\n\t\t\t\t\t//handle prevalidators\n\t\t\t\t\tfor (var i = 1; i < maskdef.cardinality; i++) {\n\t\t\t\t\t\tvar prevalidator = prevalidatorsL >= i ? prevalidators[i - 1] : [],\n\t\t\t\t\t\t\tvalidator = prevalidator.validator,\n\t\t\t\t\t\t\tcardinality = prevalidator.cardinality;\n\t\t\t\t\t\tmtoken.matches.splice(position++, 0, {\n\t\t\t\t\t\t\tfn: validator ? typeof validator === \"string\" ? new RegExp(validator) : new function () {\n\t\t\t\t\t\t\t\tthis.test = validator;\n\t\t\t\t\t\t\t} : new RegExp(\".\"),\n\t\t\t\t\t\t\tcardinality: cardinality ? cardinality : 1,\n\t\t\t\t\t\t\toptionality: mtoken.isOptional,\n\t\t\t\t\t\t\tnewBlockMarker: prevMatch === undefined || prevMatch.def !== (maskdef.definitionSymbol || element),\n\t\t\t\t\t\t\tcasing: maskdef.casing,\n\t\t\t\t\t\t\tdef: maskdef.definitionSymbol || element,\n\t\t\t\t\t\t\tplaceholder: maskdef.placeholder,\n\t\t\t\t\t\t\tnativeDef: element\n\t\t\t\t\t\t});\n\t\t\t\t\t\tprevMatch = mtoken.matches[position - 1];\n\t\t\t\t\t}\n\t\t\t\t\tmtoken.matches.splice(position++, 0, {\n\t\t\t\t\t\tfn: maskdef.validator ? typeof maskdef.validator == \"string\" ? new RegExp(maskdef.validator) : new function () {\n\t\t\t\t\t\t\tthis.test = maskdef.validator;\n\t\t\t\t\t\t} : new RegExp(\".\"),\n\t\t\t\t\t\tcardinality: maskdef.cardinality,\n\t\t\t\t\t\toptionality: mtoken.isOptional,\n\t\t\t\t\t\tnewBlockMarker: prevMatch === undefined || prevMatch.def !== (maskdef.definitionSymbol || element),\n\t\t\t\t\t\tcasing: maskdef.casing,\n\t\t\t\t\t\tdef: maskdef.definitionSymbol || element,\n\t\t\t\t\t\tplaceholder: maskdef.placeholder,\n\t\t\t\t\t\tnativeDef: element\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tmtoken.matches.splice(position++, 0, {\n\t\t\t\t\t\tfn: null,\n\t\t\t\t\t\tcardinality: 0,\n\t\t\t\t\t\toptionality: mtoken.isOptional,\n\t\t\t\t\t\tnewBlockMarker: prevMatch === undefined || prevMatch.def !== element,\n\t\t\t\t\t\tcasing: null,\n\t\t\t\t\t\tdef: opts.staticDefinitionSymbol || element,\n\t\t\t\t\t\tplaceholder: opts.staticDefinitionSymbol !== undefined ? element : undefined,\n\t\t\t\t\t\tnativeDef: element\n\t\t\t\t\t});\n\t\t\t\t\tescaped = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction verifyGroupMarker(maskToken) {\n\t\t\t\tif (maskToken && maskToken.matches) {\n\t\t\t\t\t$.each(maskToken.matches, function (ndx, token) {\n\t\t\t\t\t\t\tvar nextToken = maskToken.matches[ndx + 1];\n\t\t\t\t\t\t\tif ((nextToken === undefined || (nextToken.matches === undefined || nextToken.isQuantifier === false)) && token && token.isGroup) { //this is not a group but a normal mask => convert\n\t\t\t\t\t\t\t\ttoken.isGroup = false;\n\t\t\t\t\t\t\t\tinsertTestDefinition(token, opts.groupmarker.start, 0);\n\t\t\t\t\t\t\t\tif (token.openGroup !== true) {\n\t\t\t\t\t\t\t\t\tinsertTestDefinition(token, opts.groupmarker.end);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tverifyGroupMarker(token);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction defaultCase() {\n\t\t\t\tif (openenings.length > 0) {\n\t\t\t\t\tcurrentOpeningToken = openenings[openenings.length - 1];\n\t\t\t\t\tinsertTestDefinition(currentOpeningToken, m);\n\t\t\t\t\tif (currentOpeningToken.isAlternator) { //handle alternator a | b case\n\t\t\t\t\t\talternator = openenings.pop();\n\t\t\t\t\t\tfor (var mndx = 0; mndx < alternator.matches.length; mndx++) {\n\t\t\t\t\t\t\talternator.matches[mndx].isGroup = false; //don't mark alternate groups as group\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (openenings.length > 0) {\n\t\t\t\t\t\t\tcurrentOpeningToken = openenings[openenings.length - 1];\n\t\t\t\t\t\t\tcurrentOpeningToken.matches.push(alternator);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurrentToken.matches.push(alternator);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinsertTestDefinition(currentToken, m);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction reverseTokens(maskToken) {\n\t\t\t\tfunction reverseStatic(st) {\n\t\t\t\t\tif (st === opts.optionalmarker.start) st = opts.optionalmarker.end;\n\t\t\t\t\telse if (st === opts.optionalmarker.end) st = opts.optionalmarker.start;\n\t\t\t\t\telse if (st === opts.groupmarker.start) st = opts.groupmarker.end;\n\t\t\t\t\telse if (st === opts.groupmarker.end) st = opts.groupmarker.start;\n\n\t\t\t\t\treturn st;\n\t\t\t\t}\n\n\t\t\t\tmaskToken.matches = maskToken.matches.reverse();\n\t\t\t\tfor (var match in maskToken.matches) {\n\t\t\t\t\tif (maskToken.matches.hasOwnProperty(match)) {\n\t\t\t\t\t\tvar intMatch = parseInt(match);\n\t\t\t\t\t\tif (maskToken.matches[match].isQuantifier && maskToken.matches[intMatch + 1] && maskToken.matches[intMatch + 1].isGroup) { //reposition quantifier\n\t\t\t\t\t\t\tvar qt = maskToken.matches[match];\n\t\t\t\t\t\t\tmaskToken.matches.splice(match, 1);\n\t\t\t\t\t\t\tmaskToken.matches.splice(intMatch + 1, 0, qt);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (maskToken.matches[match].matches !== undefined) {\n\t\t\t\t\t\t\tmaskToken.matches[match] = reverseTokens(maskToken.matches[match]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmaskToken.matches[match] = reverseStatic(maskToken.matches[match]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn maskToken;\n\t\t\t}\n\n\t\t\twhile (match = tokenizer.exec(mask)) {\n\t\t\t\tm = match[0];\n\n\t\t\t\tif (escaped) {\n\t\t\t\t\tdefaultCase();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tswitch (m.charAt(0)) {\n\t\t\t\t\tcase opts.escapeChar:\n\t\t\t\t\t\tescaped = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase opts.optionalmarker.end:\n\t\t\t\t\t// optional closing\n\t\t\t\t\tcase opts.groupmarker.end:\n\t\t\t\t\t\t// Group closing\n\t\t\t\t\t\topeningToken = openenings.pop();\n\t\t\t\t\t\topeningToken.openGroup = false; //mark group as complete\n\t\t\t\t\t\tif (openingToken !== undefined) {\n\t\t\t\t\t\t\tif (openenings.length > 0) {\n\t\t\t\t\t\t\t\tcurrentOpeningToken = openenings[openenings.length - 1];\n\t\t\t\t\t\t\t\tcurrentOpeningToken.matches.push(openingToken);\n\t\t\t\t\t\t\t\tif (currentOpeningToken.isAlternator) { //handle alternator (a) | (b) case\n\t\t\t\t\t\t\t\t\talternator = openenings.pop();\n\t\t\t\t\t\t\t\t\tfor (var mndx = 0; mndx < alternator.matches.length; mndx++) {\n\t\t\t\t\t\t\t\t\t\talternator.matches[mndx].isGroup = false; //don't mark alternate groups as group\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (openenings.length > 0) {\n\t\t\t\t\t\t\t\t\t\tcurrentOpeningToken = openenings[openenings.length - 1];\n\t\t\t\t\t\t\t\t\t\tcurrentOpeningToken.matches.push(alternator);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tcurrentToken.matches.push(alternator);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcurrentToken.matches.push(openingToken);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else defaultCase();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase opts.optionalmarker.start:\n\t\t\t\t\t\t// optional opening\n\t\t\t\t\t\topenenings.push(new MaskToken(false, true));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase opts.groupmarker.start:\n\t\t\t\t\t\t// Group opening\n\t\t\t\t\t\topenenings.push(new MaskToken(true));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase opts.quantifiermarker.start:\n\t\t\t\t\t\t//Quantifier\n\t\t\t\t\t\tvar quantifier = new MaskToken(false, false, true);\n\n\t\t\t\t\t\tm = m.replace(/[{}]/g, \"\");\n\t\t\t\t\t\tvar mq = m.split(\",\"),\n\t\t\t\t\t\t\tmq0 = isNaN(mq[0]) ? mq[0] : parseInt(mq[0]),\n\t\t\t\t\t\t\tmq1 = mq.length === 1 ? mq0 : (isNaN(mq[1]) ? mq[1] : parseInt(mq[1]));\n\t\t\t\t\t\tif (mq1 === \"*\" || mq1 === \"+\") {\n\t\t\t\t\t\t\tmq0 = mq1 === \"*\" ? 0 : 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tquantifier.quantifier = {\n\t\t\t\t\t\t\tmin: mq0,\n\t\t\t\t\t\t\tmax: mq1\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (openenings.length > 0) {\n\t\t\t\t\t\t\tvar matches = openenings[openenings.length - 1].matches;\n\t\t\t\t\t\t\tmatch = matches.pop();\n\t\t\t\t\t\t\tif (!match.isGroup) {\n\t\t\t\t\t\t\t\tgroupToken = new MaskToken(true);\n\t\t\t\t\t\t\t\tgroupToken.matches.push(match);\n\t\t\t\t\t\t\t\tmatch = groupToken;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmatches.push(match);\n\t\t\t\t\t\t\tmatches.push(quantifier);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmatch = currentToken.matches.pop();\n\t\t\t\t\t\t\tif (!match.isGroup) {\n\t\t\t\t\t\t\t\tgroupToken = new MaskToken(true);\n\t\t\t\t\t\t\t\tgroupToken.matches.push(match);\n\t\t\t\t\t\t\t\tmatch = groupToken;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrentToken.matches.push(match);\n\t\t\t\t\t\t\tcurrentToken.matches.push(quantifier);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase\n\t\t\t\t\topts.alternatormarker:\n\t\t\t\t\t\tif (openenings.length > 0) {\n\t\t\t\t\t\t\tcurrentOpeningToken = openenings[openenings.length - 1];\n\t\t\t\t\t\t\tlastMatch = currentOpeningToken.matches.pop();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlastMatch = currentToken.matches.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (lastMatch.isAlternator) {\n\t\t\t\t\t\t\topenenings.push(lastMatch);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\talternator = new MaskToken(false, false, false, true);\n\t\t\t\t\t\t\talternator.matches.push(lastMatch);\n\t\t\t\t\t\t\topenenings.push(alternator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tdefaultCase();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (openenings.length > 0) {\n\t\t\t\topeningToken = openenings.pop();\n\t\t\t\tcurrentToken.matches.push(openingToken);\n\t\t\t}\n\t\t\tif (currentToken.matches.length > 0) {\n\t\t\t\tverifyGroupMarker(currentToken);\n\t\t\t\tmaskTokens.push(currentToken);\n\t\t\t}\n\n\t\t\tif (opts.numericInput) {\n\t\t\t\treverseTokens(maskTokens[0]);\n\t\t\t}\n\t\t\t// console.log(JSON.stringify(maskTokens));\n\t\t\treturn maskTokens;\n\t\t}\n\t};\n\n\t//apply defaults, definitions, aliases\n\tInputmask.extendDefaults = function (options) {\n\t\t$.extend(true, Inputmask.prototype.defaults, options);\n\t};\n\tInputmask.extendDefinitions = function (definition) {\n\t\t$.extend(true, Inputmask.prototype.definitions, definition);\n\t};\n\tInputmask.extendAliases = function (alias) {\n\t\t$.extend(true, Inputmask.prototype.aliases, alias);\n\t};\n\t//static fn on inputmask\n\tInputmask.format = function (value, options, metadata) {\n\t\treturn Inputmask(options).format(value, metadata);\n\t};\n\tInputmask.unmask = function (value, options) {\n\t\treturn Inputmask(options).unmaskedvalue(value);\n\t};\n\tInputmask.isValid = function (value, options) {\n\t\treturn Inputmask(options).isValid(value);\n\t};\n\tInputmask.remove = function (elems) {\n\t\t$.each(elems, function (ndx, el) {\n\t\t\tif (el.inputmask) el.inputmask.remove();\n\t\t});\n\t};\n\tInputmask.escapeRegex = function (str) {\n\t\tvar specials = [\"/\", \".\", \"*\", \"+\", \"?\", \"|\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", \"\\\\\", \"$\", \"^\"];\n\t\treturn str.replace(new RegExp(\"(\\\\\" + specials.join(\"|\\\\\") + \")\", \"gim\"), \"\\\\$1\");\n\t};\n\tInputmask.keyCode = {\n\t\tALT: 18,\n\t\tBACKSPACE: 8,\n\t\tBACKSPACE_SAFARI: 127,\n\t\tCAPS_LOCK: 20,\n\t\tCOMMA: 188,\n\t\tCOMMAND: 91,\n\t\tCOMMAND_LEFT: 91,\n\t\tCOMMAND_RIGHT: 93,\n\t\tCONTROL: 17,\n\t\tDELETE: 46,\n\t\tDOWN: 40,\n\t\tEND: 35,\n\t\tENTER: 13,\n\t\tESCAPE: 27,\n\t\tHOME: 36,\n\t\tINSERT: 45,\n\t\tLEFT: 37,\n\t\tMENU: 93,\n\t\tNUMPAD_ADD: 107,\n\t\tNUMPAD_DECIMAL: 110,\n\t\tNUMPAD_DIVIDE: 111,\n\t\tNUMPAD_ENTER: 108,\n\t\tNUMPAD_MULTIPLY: 106,\n\t\tNUMPAD_SUBTRACT: 109,\n\t\tPAGE_DOWN: 34,\n\t\tPAGE_UP: 33,\n\t\tPERIOD: 190,\n\t\tRIGHT: 39,\n\t\tSHIFT: 16,\n\t\tSPACE: 32,\n\t\tTAB: 9,\n\t\tUP: 38,\n\t\tWINDOWS: 91,\n\t\tX: 88\n\t};\n\n\tfunction resolveAlias(aliasStr, options, opts) {\n\t\tvar aliasDefinition = Inputmask.prototype.aliases[aliasStr];\n\t\tif (aliasDefinition) {\n\t\t\tif (aliasDefinition.alias) resolveAlias(aliasDefinition.alias, undefined, opts); //alias is another alias\n\t\t\t$.extend(true, opts, aliasDefinition); //merge alias definition in the options\n\t\t\t$.extend(true, opts, options); //reapply extra given options\n\t\t\treturn true;\n\t\t} else //alias not found - try as mask\n\t\tif (opts.mask === null) {\n\t\t\topts.mask = aliasStr;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction generateMaskSet(opts, nocache) {\n\t\tfunction generateMask(mask, metadata, opts) {\n\t\t\tif (mask === null || mask === \"\") {\n\t\t\t\treturn undefined;\n\t\t\t} else {\n\t\t\t\tif (mask.length === 1 && opts.greedy === false && opts.repeat !== 0) {\n\t\t\t\t\topts.placeholder = \"\";\n\t\t\t\t} //hide placeholder with single non-greedy mask\n\t\t\t\tif (opts.repeat > 0 || opts.repeat === \"*\" || opts.repeat === \"+\") {\n\t\t\t\t\tvar repeatStart = opts.repeat === \"*\" ? 0 : (opts.repeat === \"+\" ? 1 : opts.repeat);\n\t\t\t\t\tmask = opts.groupmarker.start + mask + opts.groupmarker.end + opts.quantifiermarker.start + repeatStart + \",\" + opts.repeat + opts.quantifiermarker.end;\n\t\t\t\t}\n\n\t\t\t\t// console.log(mask);\n\t\t\t\tvar masksetDefinition;\n\t\t\t\tif (Inputmask.prototype.masksCache[mask] === undefined || nocache === true) {\n\t\t\t\t\tmasksetDefinition = {\n\t\t\t\t\t\t\"mask\": mask,\n\t\t\t\t\t\t\"maskToken\": Inputmask.prototype.analyseMask(mask, opts),\n\t\t\t\t\t\t\"validPositions\": {},\n\t\t\t\t\t\t\"_buffer\": undefined,\n\t\t\t\t\t\t\"buffer\": undefined,\n\t\t\t\t\t\t\"tests\": {},\n\t\t\t\t\t\t\"metadata\": metadata,\n\t\t\t\t\t\tmaskLength: undefined\n\t\t\t\t\t};\n\t\t\t\t\tif (nocache !== true) {\n\t\t\t\t\t\tInputmask.prototype.masksCache[opts.numericInput ? mask.split(\"\").reverse().join(\"\") : mask] = masksetDefinition;\n\t\t\t\t\t\tmasksetDefinition = $.extend(true, {}, Inputmask.prototype.masksCache[opts.numericInput ? mask.split(\"\").reverse().join(\"\") : mask]);\n\t\t\t\t\t}\n\t\t\t\t} else masksetDefinition = $.extend(true, {}, Inputmask.prototype.masksCache[opts.numericInput ? mask.split(\"\").reverse().join(\"\") : mask]);\n\n\t\t\t\treturn masksetDefinition;\n\t\t\t}\n\t\t}\n\n\t\tvar ms;\n\n\t\tif ($.isFunction(opts.mask)) { //allow mask to be a preprocessing fn - should return a valid mask\n\t\t\topts.mask = opts.mask(opts);\n\t\t}\n\t\tif ($.isArray(opts.mask)) {\n\t\t\tif (opts.mask.length > 1) {\n\t\t\t\topts.keepStatic = opts.keepStatic === null ? true : opts.keepStatic; //enable by default when passing multiple masks when the option is not explicitly specified\n\t\t\t\tvar altMask = opts.groupmarker.start;\n\t\t\t\t$.each(opts.numericInput ? opts.mask.reverse() : opts.mask, function (ndx, msk) {\n\t\t\t\t\tif (altMask.length > 1) {\n\t\t\t\t\t\taltMask += opts.groupmarker.end + opts.alternatormarker + opts.groupmarker.start;\n\t\t\t\t\t}\n\t\t\t\t\tif (msk.mask !== undefined && !$.isFunction(msk.mask)) {\n\t\t\t\t\t\taltMask += msk.mask;\n\t\t\t\t\t} else {\n\t\t\t\t\t\taltMask += msk;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\taltMask += opts.groupmarker.end;\n\t\t\t\t// console.log(altMask);\n\t\t\t\treturn generateMask(altMask, opts.mask, opts);\n\t\t\t} else opts.mask = opts.mask.pop();\n\t\t}\n\n\t\tif (opts.mask) {\n\t\t\tif (opts.mask.mask !== undefined && !$.isFunction(opts.mask.mask)) {\n\t\t\t\tms = generateMask(opts.mask.mask, opts.mask, opts);\n\t\t\t} else {\n\t\t\t\tms = generateMask(opts.mask, opts.mask, opts);\n\t\t\t}\n\t\t}\n\n\t\treturn ms;\n\t};\n\n\n\t//masking scope\n\t//actionObj definition see below\n\tfunction maskScope(actionObj, maskset, opts) {\n\t\tmaskset = maskset || this.maskset;\n\t\topts = opts || this.opts;\n\t\tvar el = this.el,\n\t\t\tisRTL = this.isRTL,\n\t\t\tundoValue,\n\t\t\t$el,\n\t\t\tskipKeyPressEvent = false, //Safari 5.1.x - modal dialog fires keypress twice workaround\n\t\t\tskipInputEvent = false, //skip when triggered from within inputmask\n\t\t\tignorable = false,\n\t\t\tmaxLength,\n\t\t\tmouseEnter = false,\n\t\t\tcolorMask;\n\n\t\t//maskset helperfunctions\n\t\tfunction getMaskTemplate(baseOnInput, minimalPos, includeMode) {\n\t\t\t//includeMode true => input, undefined => placeholder, false => mask\n\t\t\tminimalPos = minimalPos || 0;\n\t\t\tvar maskTemplate = [],\n\t\t\t\tndxIntlzr, pos = 0,\n\t\t\t\ttest, testPos, lvp = getLastValidPosition();\n\t\t\tmaxLength = el !== undefined ? el.maxLength : undefined;\n\t\t\tif (maxLength === -1) maxLength = undefined;\n\t\t\tdo {\n\t\t\t\tif (baseOnInput === true && getMaskSet().validPositions[pos]) {\n\t\t\t\t\ttestPos = getMaskSet().validPositions[pos];\n\t\t\t\t\ttest = testPos.match;\n\t\t\t\t\tndxIntlzr = testPos.locator.slice();\n\t\t\t\t\tmaskTemplate.push(includeMode === true ? testPos.input : includeMode === false ? test.nativeDef : getPlaceholder(pos, test));\n\t\t\t\t} else {\n\t\t\t\t\ttestPos = getTestTemplate(pos, ndxIntlzr, pos - 1);\n\t\t\t\t\ttest = testPos.match;\n\t\t\t\t\tndxIntlzr = testPos.locator.slice();\n\t\t\t\t\tif (opts.jitMasking === false || pos < lvp || (typeof opts.jitMasking === \"number\" && isFinite(opts.jitMasking) && opts.jitMasking > pos)) {\n\t\t\t\t\t\tmaskTemplate.push(includeMode === false ? test.nativeDef : getPlaceholder(pos, test));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpos++;\n\t\t\t} while ((maxLength === undefined || pos < maxLength) && (test.fn !== null || test.def !== \"\") || minimalPos > pos);\n\t\t\tif (maskTemplate[maskTemplate.length - 1] === \"\") {\n\t\t\t\tmaskTemplate.pop(); //drop the last one which is empty\n\t\t\t}\n\n\t\t\tgetMaskSet().maskLength = pos + 1;\n\t\t\treturn maskTemplate;\n\t\t}\n\n\t\tfunction getMaskSet() {\n\t\t\treturn maskset;\n\t\t}\n\n\t\tfunction resetMaskSet(soft) {\n\t\t\tvar maskset = getMaskSet();\n\t\t\tmaskset.buffer = undefined;\n\t\t\tif (soft !== true) {\n\t\t\t\tmaskset._buffer = undefined;\n\t\t\t\tmaskset.validPositions = {};\n\t\t\t\tmaskset.p = 0;\n\t\t\t}\n\t\t}\n\n\t\tfunction getLastValidPosition(closestTo, strict, validPositions) {\n\t\t\tvar before = -1,\n\t\t\t\tafter = -1,\n\t\t\t\tvalids = validPositions || getMaskSet().validPositions; //for use in valhook ~ context switch\n\t\t\tif (closestTo === undefined) closestTo = -1;\n\t\t\tfor (var posNdx in valids) {\n\t\t\t\tvar psNdx = parseInt(posNdx);\n\t\t\t\tif (valids[psNdx] && (strict || valids[psNdx].generatedInput !== true)) {\n\t\t\t\t\tif (psNdx <= closestTo) before = psNdx;\n\t\t\t\t\tif (psNdx >= closestTo) after = psNdx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (before !== -1 && (closestTo - before) > 1) || after < closestTo ? before : after;\n\t\t}\n\n\n\t\tfunction stripValidPositions(start, end, nocheck, strict) {\n\t\t\tfunction IsEnclosedStatic(pos) {\n\t\t\t\tvar posMatch = getMaskSet().validPositions[pos];\n\t\t\t\tif (posMatch !== undefined && posMatch.match.fn === null) {\n\t\t\t\t\tvar prevMatch = getMaskSet().validPositions[pos - 1],\n\t\t\t\t\t\tnextMatch = getMaskSet().validPositions[pos + 1];\n\t\t\t\t\treturn prevMatch !== undefined && nextMatch !== undefined;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, startPos = start,\n\t\t\t\tpositionsClone = $.extend(true, {}, getMaskSet().validPositions), needsValidation = false;\n\t\t\tgetMaskSet().p = start; //needed for alternated position after overtype selection\n\n\t\t\tfor (i = end - 1; i >= startPos; i--) { //clear selection\n\t\t\t\tif (getMaskSet().validPositions[i] !== undefined) {\n\t\t\t\t\tif (nocheck === true ||\n\t\t\t\t\t\t((getMaskSet().validPositions[i].match.optionality || !IsEnclosedStatic(i)) && opts.canClearPosition(getMaskSet(), i, getLastValidPosition(), strict, opts) !== false)) {\n\t\t\t\t\t\tdelete getMaskSet().validPositions[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//clear buffer\n\t\t\tresetMaskSet(true);\n\t\t\tfor (i = startPos + 1; i <= getLastValidPosition();) {\n\t\t\t\twhile (getMaskSet().validPositions[startPos] !== undefined) startPos++;\n\t\t\t\tif (i < startPos) i = startPos + 1;\n\t\t\t\tif (getMaskSet().validPositions[i] !== undefined || !isMask(i)) {\n\t\t\t\t\tvar t = getTestTemplate(i);\n\t\t\t\t\tif (needsValidation === false && positionsClone[startPos] && positionsClone[startPos].match.def === t.match.def) { //obvious match\n\t\t\t\t\t\tgetMaskSet().validPositions[startPos] = $.extend(true, {}, positionsClone[startPos]);\n\t\t\t\t\t\tgetMaskSet().validPositions[startPos].input = t.input;\n\t\t\t\t\t\tdelete getMaskSet().validPositions[i];\n\t\t\t\t\t\ti++;\n\t\t\t\t\t} else if (positionCanMatchDefinition(startPos, t.match.def)) {\n\t\t\t\t\t\tif (isValid(startPos, t.input || getPlaceholder(i), true) !== false) {\n\t\t\t\t\t\t\tdelete getMaskSet().validPositions[i];\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\tneedsValidation = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (!isMask(i)) {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tstartPos--;\n\t\t\t\t\t}\n\t\t\t\t\tstartPos++;\n\t\t\t\t} else i++;\n\t\t\t}\n\n\t\t\tresetMaskSet(true);\n\t\t}\n\n\t\tfunction determineTestTemplate(tests, guessNextBest) {\n\t\t\tvar testPos,\n\t\t\t\ttestPositions = tests,\n\t\t\t\tlvp = getLastValidPosition(),\n\t\t\t\tlvTest = getMaskSet().validPositions[lvp] || getTests(0)[0],\n\t\t\t\tlvTestAltArr = (lvTest.alternation !== undefined) ? lvTest.locator[lvTest.alternation].toString().split(\",\") : [];\n\t\t\tfor (var ndx = 0; ndx < testPositions.length; ndx++) {\n\t\t\t\ttestPos = testPositions[ndx];\n\n\t\t\t\tif (testPos.match &&\n\t\t\t\t\t(((opts.greedy && testPos.match.optionalQuantifier !== true) || (testPos.match.optionality === false || testPos.match.newBlockMarker === false) && testPos.match.optionalQuantifier !== true) &&\n\t\t\t\t\t((lvTest.alternation === undefined || lvTest.alternation !== testPos.alternation) ||\n\t\t\t\t\t(testPos.locator[lvTest.alternation] !== undefined && checkAlternationMatch(testPos.locator[lvTest.alternation].toString().split(\",\"), lvTestAltArr))))) {\n\n\t\t\t\t\tif (guessNextBest !== true || (testPos.match.fn === null && !/[0-9a-bA-Z]/.test(testPos.match.def)))\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn testPos;\n\t\t}\n\n\t\tfunction getTestTemplate(pos, ndxIntlzr, tstPs) {\n\t\t\treturn getMaskSet().validPositions[pos] || determineTestTemplate(getTests(pos, ndxIntlzr ? ndxIntlzr.slice() : ndxIntlzr, tstPs));\n\t\t}\n\n\t\tfunction getTest(pos) {\n\t\t\tif (getMaskSet().validPositions[pos]) {\n\t\t\t\treturn getMaskSet().validPositions[pos];\n\t\t\t}\n\t\t\treturn getTests(pos)[0];\n\t\t}\n\n\t\tfunction positionCanMatchDefinition(pos, def) {\n\t\t\tvar valid = false,\n\t\t\t\ttests = getTests(pos);\n\t\t\tfor (var tndx = 0; tndx < tests.length; tndx++) {\n\t\t\t\tif (tests[tndx].match && tests[tndx].match.def === def) {\n\t\t\t\t\tvalid = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn valid;\n\t\t}\n\n\n\t\tfunction getTests(pos, ndxIntlzr, tstPs) {\n\t\t\tvar maskTokens = getMaskSet().maskToken,\n\t\t\t\ttestPos = ndxIntlzr ? tstPs : 0,\n\t\t\t\tndxInitializer = ndxIntlzr ? ndxIntlzr.slice() : [0],\n\t\t\t\tmatches = [],\n\t\t\t\tinsertStop = false,\n\t\t\t\tlatestMatch,\n\t\t\t\tcacheDependency = ndxIntlzr ? ndxIntlzr.join(\"\") : \"\";\n\n\t\t\tfunction resolveTestFromToken(maskToken, ndxInitializer, loopNdx, quantifierRecurse) { //ndxInitializer contains a set of indexes to speedup searches in the mtokens\n\t\t\t\tfunction handleMatch(match, loopNdx, quantifierRecurse) {\n\t\t\t\t\tfunction isFirstMatch(latestMatch, tokenGroup) {\n\t\t\t\t\t\tvar firstMatch = $.inArray(latestMatch, tokenGroup.matches) === 0;\n\t\t\t\t\t\tif (!firstMatch) {\n\t\t\t\t\t\t\t$.each(tokenGroup.matches, function (ndx, match) {\n\t\t\t\t\t\t\t\tif (match.isQuantifier === true) {\n\t\t\t\t\t\t\t\t\tfirstMatch = isFirstMatch(latestMatch, tokenGroup.matches[ndx - 1]);\n\t\t\t\t\t\t\t\t\tif (firstMatch) return false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn firstMatch;\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction resolveNdxInitializer(pos, alternateNdx, targetAlternation) {\n\t\t\t\t\t\tvar bestMatch, indexPos;\n\t\t\t\t\t\tif (getMaskSet().tests[pos] || getMaskSet().validPositions[pos]) {\n\t\t\t\t\t\t\t$.each(getMaskSet().tests[pos] || [getMaskSet().validPositions[pos]], function (ndx, lmnt) {\n\t\t\t\t\t\t\t\tvar alternation = targetAlternation !== undefined ? targetAlternation : lmnt.alternation,\n\t\t\t\t\t\t\t\t\tndxPos = lmnt.locator[alternation] !== undefined ? lmnt.locator[alternation].toString().indexOf(alternateNdx) : -1;\n\t\t\t\t\t\t\t\tif ((indexPos === undefined || ndxPos < indexPos) && ndxPos !== -1) {\n\t\t\t\t\t\t\t\t\tbestMatch = lmnt;\n\t\t\t\t\t\t\t\t\tindexPos = ndxPos;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn bestMatch ?\n\t\t\t\t\t\t\tbestMatch.locator.slice((targetAlternation !== undefined ? targetAlternation : bestMatch.alternation) + 1) :\n\t\t\t\t\t\t\ttargetAlternation !== undefined ? resolveNdxInitializer(pos, alternateNdx) : undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction staticCanMatchDefinition(source, target) {\n\t\t\t\t\t\tif (source.match.fn === null && target.match.fn !== null) {\n\t\t\t\t\t\t\treturn target.match.fn.test(source.match.def, getMaskSet(), pos, false, opts, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (testPos > 10000) {\n\t\t\t\t\t\tthrow \"Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. \" + getMaskSet().mask;\n\t\t\t\t\t}\n\t\t\t\t\tif (testPos === pos && match.matches === undefined) {\n\t\t\t\t\t\tmatches.push({\n\t\t\t\t\t\t\t\"match\": match,\n\t\t\t\t\t\t\t\"locator\": loopNdx.reverse(),\n\t\t\t\t\t\t\t\"cd\": cacheDependency\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (match.matches !== undefined) {\n\t\t\t\t\t\tif (match.isGroup && quantifierRecurse !== match) { //when a group pass along to the quantifier\n\t\t\t\t\t\t\tmatch = handleMatch(maskToken.matches[$.inArray(match, maskToken.matches) + 1], loopNdx);\n\t\t\t\t\t\t\tif (match) return true;\n\t\t\t\t\t\t} else if (match.isOptional) {\n\t\t\t\t\t\t\tvar optionalToken = match;\n\t\t\t\t\t\t\tmatch = resolveTestFromToken(match, ndxInitializer, loopNdx, quantifierRecurse);\n\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\tlatestMatch = matches[matches.length - 1].match;\n\t\t\t\t\t\t\t\tif (isFirstMatch(latestMatch, optionalToken)) {\n\t\t\t\t\t\t\t\t\tinsertStop = true; //insert a stop\n\t\t\t\t\t\t\t\t\ttestPos = pos; //match the position after the group\n\t\t\t\t\t\t\t\t} else return true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (match.isAlternator) {\n\t\t\t\t\t\t\tvar alternateToken = match,\n\t\t\t\t\t\t\t\tmalternateMatches = [],\n\t\t\t\t\t\t\t\tmaltMatches,\n\t\t\t\t\t\t\t\tcurrentMatches = matches.slice(),\n\t\t\t\t\t\t\t\tloopNdxCnt = loopNdx.length;\n\t\t\t\t\t\t\tvar altIndex = ndxInitializer.length > 0 ? ndxInitializer.shift() : -1;\n\t\t\t\t\t\t\tif (altIndex === -1 || typeof altIndex === \"string\") {\n\t\t\t\t\t\t\t\tvar currentPos = testPos,\n\t\t\t\t\t\t\t\t\tndxInitializerClone = ndxInitializer.slice(),\n\t\t\t\t\t\t\t\t\taltIndexArr = [],\n\t\t\t\t\t\t\t\t\tamndx;\n\t\t\t\t\t\t\t\tif (typeof altIndex == \"string\") {\n\t\t\t\t\t\t\t\t\taltIndexArr = altIndex.split(\",\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfor (amndx = 0; amndx < alternateToken.matches.length; amndx++) {\n\t\t\t\t\t\t\t\t\t\taltIndexArr.push(amndx);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (var ndx = 0; ndx < altIndexArr.length; ndx++) {\n\t\t\t\t\t\t\t\t\tamndx = parseInt(altIndexArr[ndx]);\n\t\t\t\t\t\t\t\t\tmatches = [];\n\t\t\t\t\t\t\t\t\t//set the correct ndxInitializer\n\t\t\t\t\t\t\t\t\tndxInitializer = resolveNdxInitializer(testPos, amndx, loopNdxCnt) || ndxInitializerClone.slice();\n\t\t\t\t\t\t\t\t\tmatch = handleMatch(alternateToken.matches[amndx] || maskToken.matches[amndx], [amndx].concat(loopNdx), quantifierRecurse) || match;\n\t\t\t\t\t\t\t\t\tif (match !== true && match !== undefined && (altIndexArr[altIndexArr.length - 1] < alternateToken.matches.length)) { //no match in the alternations (length mismatch) => look further\n\t\t\t\t\t\t\t\t\t\tvar ntndx = $.inArray(match, maskToken.matches) + 1;\n\t\t\t\t\t\t\t\t\t\tif (maskToken.matches.length > ntndx) {\n\t\t\t\t\t\t\t\t\t\t\tmatch = handleMatch(maskToken.matches[ntndx], [ntndx].concat(loopNdx.slice(1, loopNdx.length)), quantifierRecurse);\n\t\t\t\t\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\t\t\t\t\taltIndexArr.push(ntndx.toString());\n\t\t\t\t\t\t\t\t\t\t\t\t$.each(matches, function (ndx, lmnt) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tlmnt.alternation = loopNdx.length - 1;\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmaltMatches = matches.slice();\n\t\t\t\t\t\t\t\t\ttestPos = currentPos;\n\t\t\t\t\t\t\t\t\tmatches = [];\n\n\t\t\t\t\t\t\t\t\t//fuzzy merge matches\n\t\t\t\t\t\t\t\t\tfor (var ndx1 = 0; ndx1 < maltMatches.length; ndx1++) {\n\t\t\t\t\t\t\t\t\t\tvar altMatch = maltMatches[ndx1], hasMatch = false;\n\t\t\t\t\t\t\t\t\t\taltMatch.alternation = altMatch.alternation || loopNdxCnt;\n\t\t\t\t\t\t\t\t\t\tfor (var ndx2 = 0; ndx2 < malternateMatches.length; ndx2++) {\n\t\t\t\t\t\t\t\t\t\t\tvar altMatch2 = malternateMatches[ndx2];\n\t\t\t\t\t\t\t\t\t\t\t//verify equality\n\t\t\t\t\t\t\t\t\t\t\tif (typeof altIndex !== \"string\" || $.inArray(altMatch.locator[altMatch.alternation].toString(), altIndexArr) !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (altMatch.match.def === altMatch2.match.def || staticCanMatchDefinition(altMatch, altMatch2)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\thasMatch = altMatch.match.nativeDef === altMatch2.match.nativeDef;\n\t\t\t\t\t\t\t\t\t\t\t\t\t// if (altMatch.alternation != altMatch2.alternation) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \tconsole.log(\"alternation mismatch\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (altMatch.alternation == altMatch2.alternation && //can we merge if the alternation is different??  TODO TOCHECK INVESTIGATE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taltMatch2.locator[altMatch2.alternation].toString().indexOf(altMatch.locator[altMatch.alternation]) === -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taltMatch2.locator[altMatch2.alternation] = altMatch2.locator[altMatch2.alternation] + \",\" + altMatch.locator[altMatch.alternation];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taltMatch2.alternation = altMatch.alternation; //we pass the alternation index => used in determineLastRequiredPosition\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (altMatch.match.fn == null) { //staticCanMatchDefinition => set no alternate on match\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taltMatch2.na = altMatch2.na || altMatch.locator[altMatch.alternation].toString();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (altMatch2.na.indexOf(altMatch.locator[altMatch.alternation]) === -1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taltMatch2.na = altMatch2.na + \",\" + altMatch.locator[altMatch.alternation];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (!hasMatch) {\n\t\t\t\t\t\t\t\t\t\t\tmalternateMatches.push(altMatch);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (typeof altIndex == \"string\") { //filter matches\n\t\t\t\t\t\t\t\t\tmalternateMatches = $.map(malternateMatches, function (lmnt, ndx) {\n\t\t\t\t\t\t\t\t\t\tif (isFinite(ndx)) {\n\t\t\t\t\t\t\t\t\t\t\tvar mamatch,\n\t\t\t\t\t\t\t\t\t\t\t\talternation = lmnt.alternation,\n\t\t\t\t\t\t\t\t\t\t\t\taltLocArr = lmnt.locator[alternation].toString().split(\",\");\n\t\t\t\t\t\t\t\t\t\t\tlmnt.locator[alternation] = undefined;\n\t\t\t\t\t\t\t\t\t\t\tlmnt.alternation = undefined;\n\n\t\t\t\t\t\t\t\t\t\t\tfor (var alndx = 0; alndx < altLocArr.length; alndx++) {\n\t\t\t\t\t\t\t\t\t\t\t\tmamatch = $.inArray(altLocArr[alndx], altIndexArr) !== -1;\n\t\t\t\t\t\t\t\t\t\t\t\tif (mamatch) { //rebuild the locator with valid entries\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (lmnt.locator[alternation] !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlmnt.locator[alternation] += \",\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlmnt.locator[alternation] += altLocArr[alndx];\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else lmnt.locator[alternation] = parseInt(altLocArr[alndx]);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tlmnt.alternation = alternation;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif (lmnt.locator[alternation] !== undefined) return lmnt;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tmatches = currentMatches.concat(malternateMatches);\n\t\t\t\t\t\t\t\ttestPos = pos;\n\t\t\t\t\t\t\t\tinsertStop = matches.length > 0; //insert a stopelemnt when there is an alternate - needed for non-greedy option\n\n\t\t\t\t\t\t\t\t//cloneback\n\t\t\t\t\t\t\t\tndxInitializer = ndxInitializerClone.slice();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// if (alternateToken.matches[altIndex]) { //if not in the initial alternation => look further\n\t\t\t\t\t\t\t\tmatch = handleMatch(alternateToken.matches[altIndex] || maskToken.matches[altIndex], [altIndex].concat(loopNdx), quantifierRecurse);\n\t\t\t\t\t\t\t\t// } else match = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (match) return true;\n\t\t\t\t\t\t} else if (match.isQuantifier && quantifierRecurse !== maskToken.matches[$.inArray(match, maskToken.matches) - 1]) {\n\t\t\t\t\t\t\tvar qt = match;\n\t\t\t\t\t\t\tfor (var qndx = (ndxInitializer.length > 0) ? ndxInitializer.shift() : 0; (qndx < (isNaN(qt.quantifier.max) ? qndx + 1 : qt.quantifier.max)) && testPos <= pos; qndx++) {\n\t\t\t\t\t\t\t\tvar tokenGroup = maskToken.matches[$.inArray(qt, maskToken.matches) - 1];\n\t\t\t\t\t\t\t\tmatch = handleMatch(tokenGroup, [qndx].concat(loopNdx), tokenGroup); //set the tokenGroup as quantifierRecurse marker\n\t\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\t\t//get latest match\n\t\t\t\t\t\t\t\t\tlatestMatch = matches[matches.length - 1].match;\n\t\t\t\t\t\t\t\t\tlatestMatch.optionalQuantifier = qndx > (qt.quantifier.min - 1);\n\t\t\t\t\t\t\t\t\tif (isFirstMatch(latestMatch, tokenGroup)) { //search for next possible match\n\t\t\t\t\t\t\t\t\t\tif (qndx > (qt.quantifier.min - 1)) {\n\t\t\t\t\t\t\t\t\t\t\tinsertStop = true;\n\t\t\t\t\t\t\t\t\t\t\ttestPos = pos; //match the position after the group\n\t\t\t\t\t\t\t\t\t\t\tbreak; //stop quantifierloop\n\t\t\t\t\t\t\t\t\t\t} else return true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmatch = resolveTestFromToken(match, ndxInitializer, loopNdx, quantifierRecurse);\n\t\t\t\t\t\t\tif (match) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse\n\t\t\t\t\t\ttestPos++;\n\t\t\t\t}\n\n\t\t\t\tfor (var tndx = (ndxInitializer.length > 0 ? ndxInitializer.shift() : 0); tndx < maskToken.matches.length; tndx++) {\n\t\t\t\t\tif (maskToken.matches[tndx].isQuantifier !== true) {\n\t\t\t\t\t\tvar match = handleMatch(maskToken.matches[tndx], [tndx].concat(loopNdx), quantifierRecurse);\n\t\t\t\t\t\tif (match && testPos === pos) {\n\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t} else if (testPos > pos) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction mergeLocators(tests) {\n\t\t\t\tvar locator = [];\n\t\t\t\tif (!$.isArray(tests)) tests = [tests];\n\t\t\t\tif (tests.length > 0) {\n\t\t\t\t\tif (tests[0].alternation === undefined) {\n\t\t\t\t\t\tlocator = determineTestTemplate(tests.slice()).locator.slice();\n\t\t\t\t\t\tif (locator.length === 0) locator = tests[0].locator.slice();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$.each(tests, function (ndx, tst) {\n\t\t\t\t\t\t\tif (tst.def !== \"\") {\n\t\t\t\t\t\t\t\tif (locator.length === 0) locator = tst.locator.slice();\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tfor (var i = 0; i < locator.length; i++) {\n\t\t\t\t\t\t\t\t\t\tif (tst.locator[i] && locator[i].toString().indexOf(tst.locator[i]) === -1) {\n\t\t\t\t\t\t\t\t\t\t\tlocator[i] += \",\" + tst.locator[i];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn locator;\n\t\t\t}\n\n\t\t\tfunction filterTests(tests) {\n\t\t\t\tif (opts.keepStatic && pos > 0) {\n\t\t\t\t\tif (tests.length > 1 + (tests[tests.length - 1].match.def === \"\" ? 1 : 0)) {\n\t\t\t\t\t\tif (tests[0].match.optionality !== true &&\n\t\t\t\t\t\t\ttests[0].match.optionalQuantifier !== true &&\n\t\t\t\t\t\t\ttests[0].match.fn === null && !/[0-9a-bA-Z]/.test(tests[0].match.def)) {\n\t\t\t\t\t\t\treturn [determineTestTemplate(tests)];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tests;\n\t\t\t}\n\n\t\t\tif (pos > -1) {\n\t\t\t\tif (ndxIntlzr === undefined) { //determine index initializer\n\t\t\t\t\tvar previousPos = pos - 1,\n\t\t\t\t\t\ttest;\n\t\t\t\t\twhile ((test = getMaskSet().validPositions[previousPos] || getMaskSet().tests[previousPos]) === undefined && previousPos > -1) {\n\t\t\t\t\t\tpreviousPos--;\n\t\t\t\t\t}\n\t\t\t\t\tif (test !== undefined && previousPos > -1) {\n\t\t\t\t\t\tndxInitializer = mergeLocators(test);\n\t\t\t\t\t\tcacheDependency = ndxInitializer.join(\"\");\n\t\t\t\t\t\ttestPos = previousPos;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (getMaskSet().tests[pos] && getMaskSet().tests[pos][0].cd === cacheDependency) { //cacheDependency is set on all tests, just check on the first\n\t\t\t\t\t//console.log(\"cache hit \" + pos + \" - \" + ndxIntlzr);\n\t\t\t\t\treturn filterTests(getMaskSet().tests[pos]);\n\t\t\t\t}\n\t\t\t\tfor (var mtndx = ndxInitializer.shift(); mtndx < maskTokens.length; mtndx++) {\n\t\t\t\t\tvar match = resolveTestFromToken(maskTokens[mtndx], ndxInitializer, [mtndx]);\n\t\t\t\t\tif ((match && testPos === pos) || testPos > pos) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (matches.length === 0 || insertStop) {\n\t\t\t\tmatches.push({\n\t\t\t\t\tmatch: {\n\t\t\t\t\t\tfn: null,\n\t\t\t\t\t\tcardinality: 0,\n\t\t\t\t\t\toptionality: true,\n\t\t\t\t\t\tcasing: null,\n\t\t\t\t\t\tdef: \"\",\n\t\t\t\t\t\tplaceholder: \"\"\n\t\t\t\t\t},\n\t\t\t\t\tlocator: [],\n\t\t\t\t\tcd: cacheDependency\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (ndxIntlzr !== undefined && getMaskSet().tests[pos]) { //prioritize full tests for caching\n\t\t\t\treturn filterTests($.extend(true, [], matches));\n\t\t\t}\n\t\t\tgetMaskSet().tests[pos] = $.extend(true, [], matches); //set a clone to prevent overwriting some props\n\t\t\t// console.log(pos + \" - \" + JSON.stringify(matches));\n\t\t\treturn filterTests(getMaskSet().tests[pos]);\n\t\t}\n\n\t\tfunction getBufferTemplate() {\n\t\t\tif (getMaskSet()._buffer === undefined) {\n\t\t\t\t//generate template\n\t\t\t\tgetMaskSet()._buffer = getMaskTemplate(false, 1);\n\t\t\t\tif (getMaskSet().buffer === undefined) {\n\t\t\t\t\tgetMaskSet()._buffer.slice();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn getMaskSet()._buffer;\n\t\t}\n\n\t\tfunction getBuffer(noCache) {\n\t\t\tif (getMaskSet().buffer === undefined || noCache === true) {\n\t\t\t\tgetMaskSet().buffer = getMaskTemplate(true, getLastValidPosition(), true);\n\t\t\t}\n\t\t\treturn getMaskSet().buffer;\n\t\t}\n\n\t\tfunction refreshFromBuffer(start, end, buffer) {\n\t\t\tvar i;\n\t\t\tif (start === true) {\n\t\t\t\tresetMaskSet();\n\t\t\t\tstart = 0;\n\t\t\t\tend = buffer.length;\n\t\t\t} else {\n\t\t\t\tfor (i = start; i < end; i++) {\n\t\t\t\t\tdelete getMaskSet().validPositions[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (i = start; i < end; i++) {\n\t\t\t\tresetMaskSet(true); //prevents clobber from the buffer\n\t\t\t\tif (buffer[i] !== opts.skipOptionalPartCharacter) {\n\t\t\t\t\tisValid(i, buffer[i], true, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction casing(elem, test, pos) {\n\t\t\tswitch (opts.casing || test.casing) {\n\t\t\t\tcase \"upper\":\n\t\t\t\t\telem = elem.toUpperCase();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"lower\":\n\t\t\t\t\telem = elem.toLowerCase();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"title\":\n\t\t\t\t\tvar posBefore = getMaskSet().validPositions[pos - 1];\n\t\t\t\t\tif (pos === 0 || posBefore && posBefore.input === String.fromCharCode(Inputmask.keyCode.SPACE)) {\n\t\t\t\t\t\telem = elem.toUpperCase();\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem = elem.toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn elem;\n\t\t}\n\n\t\tfunction checkAlternationMatch(altArr1, altArr2, na) {\n\t\t\tvar altArrC = opts.greedy ? altArr2 : altArr2.slice(0, 1),\n\t\t\t\tisMatch = false, naArr = na !== undefined ? na.split(\",\") : [],\n\t\t\t\tnaNdx;\n\n\t\t\t//remove no alternate indexes from alternation array\n\t\t\tfor (var i = 0; i < naArr.length; i++) {\n\t\t\t\tif ((naNdx = altArr1.indexOf(naArr[i])) !== -1)\n\t\t\t\t\taltArr1.splice(naNdx, 1);\n\t\t\t}\n\n\t\t\tfor (var alndx = 0; alndx < altArr1.length; alndx++) {\n\t\t\t\tif ($.inArray(altArr1[alndx], altArrC) !== -1) {\n\t\t\t\t\tisMatch = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isMatch;\n\t\t}\n\n\t\tfunction isValid(pos, c, strict, fromSetValid, fromAlternate) { //strict true ~ no correction or autofill\n\t\t\tfunction isSelection(posObj) {\n\t\t\t\tvar selection = isRTL ? (posObj.begin - posObj.end) > 1 || ((posObj.begin - posObj.end) === 1 && opts.insertMode) :\n\t\t\t\t(posObj.end - posObj.begin) > 1 || ((posObj.end - posObj.begin) === 1 && opts.insertMode);\n\n\t\t\t\treturn selection && posObj.begin === 0 && posObj.end === getMaskSet().maskLength ? \"full\" : selection;\n\t\t\t}\n\n\t\t\tstrict = strict === true; //always set a value to strict to prevent possible strange behavior in the extensions\n\n\t\t\tvar maskPos = pos;\n\t\t\tif (pos.begin !== undefined) { //position was a position object - used to handle a delete by typing over a selection\n\t\t\t\tmaskPos = isRTL && !isSelection(pos) ? pos.end : pos.begin;\n\t\t\t}\n\n\t\t\tfunction _isValid(position, c, strict) {\n\t\t\t\tvar rslt = false;\n\t\t\t\t$.each(getTests(position), function (ndx, tst) {\n\t\t\t\t\t\tvar test = tst.match,\n\t\t\t\t\t\t\tloopend = c ? 1 : 0,\n\t\t\t\t\t\t\tchrs = \"\";\n\t\t\t\t\t\tfor (var i = test.cardinality; i > loopend; i--) {\n\t\t\t\t\t\t\tchrs += getBufferElement(position - (i - 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (c) {\n\t\t\t\t\t\t\tchrs += c;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//make sure the buffer is set and correct\n\t\t\t\t\t\tgetBuffer(true);\n\t\t\t\t\t\t//return is false or a json object => { pos: ??, c: ??} or true\n\t\t\t\t\t\trslt = test.fn != null ?\n\t\t\t\t\t\t\ttest.fn.test(chrs, getMaskSet(), position, strict, opts, isSelection(pos)) : (c === test.def || c === opts.skipOptionalPartCharacter) && test.def !== \"\" ? //non mask\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tc: getPlaceholder(position, test, true) || test.def,\n\t\t\t\t\t\t\t\tpos: position\n\t\t\t\t\t\t\t} : false;\n\n\t\t\t\t\t\tif (rslt !== false) {\n\t\t\t\t\t\t\tvar elem = rslt.c !== undefined ? rslt.c : c;\n\t\t\t\t\t\t\telem = (elem === opts.skipOptionalPartCharacter && test.fn === null) ?\n\t\t\t\t\t\t\t\t(getPlaceholder(position, test, true) || test.def) : elem;\n\n\t\t\t\t\t\t\tvar validatedPos = position,\n\t\t\t\t\t\t\t\tpossibleModifiedBuffer = getBuffer();\n\n\t\t\t\t\t\t\tif (rslt.remove !== undefined) { //remove position(s)\n\t\t\t\t\t\t\t\tif (!$.isArray(rslt.remove)) rslt.remove = [rslt.remove];\n\t\t\t\t\t\t\t\t$.each(rslt.remove.sort(function (a, b) {\n\t\t\t\t\t\t\t\t\treturn b - a;\n\t\t\t\t\t\t\t\t}), function (ndx, lmnt) {\n\t\t\t\t\t\t\t\t\tstripValidPositions(lmnt, lmnt + 1, true);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (rslt.insert !== undefined) { //insert position(s)\n\t\t\t\t\t\t\t\tif (!$.isArray(rslt.insert)) rslt.insert = [rslt.insert];\n\t\t\t\t\t\t\t\t$.each(rslt.insert.sort(function (a, b) {\n\t\t\t\t\t\t\t\t\treturn a - b;\n\t\t\t\t\t\t\t\t}), function (ndx, lmnt) {\n\t\t\t\t\t\t\t\t\tisValid(lmnt.pos, lmnt.c, true, fromSetValid);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (rslt.refreshFromBuffer) {\n\t\t\t\t\t\t\t\tvar refresh = rslt.refreshFromBuffer;\n\t\t\t\t\t\t\t\tstrict = true;\n\t\t\t\t\t\t\t\trefreshFromBuffer(refresh === true ? refresh : refresh.start, refresh.end, possibleModifiedBuffer);\n\t\t\t\t\t\t\t\tif (rslt.pos === undefined && rslt.c === undefined) {\n\t\t\t\t\t\t\t\t\trslt.pos = getLastValidPosition();\n\t\t\t\t\t\t\t\t\treturn false; //breakout if refreshFromBuffer && nothing to insert\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvalidatedPos = rslt.pos !== undefined ? rslt.pos : position;\n\t\t\t\t\t\t\t\tif (validatedPos !== position) {\n\t\t\t\t\t\t\t\t\trslt = $.extend(rslt, isValid(validatedPos, elem, true, fromSetValid)); //revalidate new position strict\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else if (rslt !== true && rslt.pos !== undefined && rslt.pos !== position) { //their is a position offset\n\t\t\t\t\t\t\t\tvalidatedPos = rslt.pos;\n\t\t\t\t\t\t\t\trefreshFromBuffer(position, validatedPos, getBuffer().slice());\n\t\t\t\t\t\t\t\tif (validatedPos !== position) {\n\t\t\t\t\t\t\t\t\trslt = $.extend(rslt, isValid(validatedPos, elem, true)); //revalidate new position strict\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (rslt !== true && rslt.pos === undefined && rslt.c === undefined) {\n\t\t\t\t\t\t\t\treturn false; //breakout if nothing to insert\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (ndx > 0) {\n\t\t\t\t\t\t\t\tresetMaskSet(true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!setValidPosition(validatedPos, $.extend({}, tst, {\n\t\t\t\t\t\t\t\t\t\"input\": casing(elem, test, validatedPos)\n\t\t\t\t\t\t\t\t}), fromSetValid, isSelection(pos))) {\n\t\t\t\t\t\t\t\trslt = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false; //break from $.each\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\treturn rslt;\n\t\t\t}\n\n\t\t\tfunction alternate(pos, c, strict) {\n\t\t\t\tvar validPsClone = $.extend(true, {}, getMaskSet().validPositions),\n\t\t\t\t\tlastAlt,\n\t\t\t\t\talternation,\n\t\t\t\t\tisValidRslt = false,\n\t\t\t\t\taltPos, prevAltPos, i, validPos, lAltPos = getLastValidPosition(), altNdxs, decisionPos;\n\t\t\t\t//find last modified alternation\n\t\t\t\tprevAltPos = getMaskSet().validPositions[lAltPos];\n\t\t\t\tfor (; lAltPos >= 0; lAltPos--) {\n\t\t\t\t\taltPos = getMaskSet().validPositions[lAltPos];\n\t\t\t\t\tif (altPos && altPos.alternation !== undefined) {\n\t\t\t\t\t\tlastAlt = lAltPos;\n\t\t\t\t\t\talternation = getMaskSet().validPositions[lastAlt].alternation;\n\t\t\t\t\t\tif (prevAltPos.locator[altPos.alternation] !== altPos.locator[altPos.alternation]) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevAltPos = altPos;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (alternation !== undefined) {\n\t\t\t\t\tdecisionPos = parseInt(lastAlt);\n\t\t\t\t\tvar decisionTaker = prevAltPos.locator[prevAltPos.alternation || alternation] !== undefined ? prevAltPos.locator[prevAltPos.alternation || alternation] : altNdxs[0]; //no match in the alternations (length mismatch)\n\t\t\t\t\tif (decisionTaker.length > 0) { //no decision taken ~ take first one as decider\n\t\t\t\t\t\tdecisionTaker = decisionTaker.split(\",\")[0];\n\t\t\t\t\t}\n\t\t\t\t\tvar possibilityPos = getMaskSet().validPositions[decisionPos], prevPos = getMaskSet().validPositions[decisionPos - 1];\n\t\t\t\t\t$.each(getTests(decisionPos, prevPos ? prevPos.locator : undefined, decisionPos - 1), function (ndx, test) {\n\t\t\t\t\t\taltNdxs = test.locator[alternation] ? test.locator[alternation].toString().split(\",\") : [];\n\t\t\t\t\t\tfor (var mndx = 0; mndx < altNdxs.length; mndx++) {\n\t\t\t\t\t\t\tvar validInputs = [],\n\t\t\t\t\t\t\t\tstaticInputsBeforePos = 0,\n\t\t\t\t\t\t\t\tstaticInputsBeforePosAlternate = 0,\n\t\t\t\t\t\t\t\tverifyValidInput = false;\n\t\t\t\t\t\t\tif (decisionTaker < altNdxs[mndx] && (test.na === undefined || $.inArray(altNdxs[mndx], test.na.split(\",\")) === -1)) {\n\t\t\t\t\t\t\t\tgetMaskSet().validPositions[decisionPos] = $.extend(true, {}, test);\n\t\t\t\t\t\t\t\tvar possibilities = getMaskSet().validPositions[decisionPos].locator;\n\t\t\t\t\t\t\t\tgetMaskSet().validPositions[decisionPos].locator[alternation] = parseInt(altNdxs[mndx]); //set forced decision\n\t\t\t\t\t\t\t\tif (test.match.fn == null) {\n\t\t\t\t\t\t\t\t\tif (possibilityPos.input !== test.match.def) {\n\t\t\t\t\t\t\t\t\t\tverifyValidInput = true; //verify that the new definition matches the input\n\t\t\t\t\t\t\t\t\t\tif (possibilityPos.generatedInput !== true) {\n\t\t\t\t\t\t\t\t\t\t\tvalidInputs.push(possibilityPos.input);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tstaticInputsBeforePosAlternate++;\n\t\t\t\t\t\t\t\t\tgetMaskSet().validPositions[decisionPos].generatedInput = !/[0-9a-bA-Z]/.test(test.match.def);\n\t\t\t\t\t\t\t\t\tgetMaskSet().validPositions[decisionPos].input = test.match.def;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tgetMaskSet().validPositions[decisionPos].input = possibilityPos.input;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (i = decisionPos + 1; i < getLastValidPosition(undefined, true) + 1; i++) {\n\t\t\t\t\t\t\t\t\tvalidPos = getMaskSet().validPositions[i];\n\t\t\t\t\t\t\t\t\tif (validPos && validPos.generatedInput !== true && /[0-9a-bA-Z]/.test(validPos.input)) {\n\t\t\t\t\t\t\t\t\t\tvalidInputs.push(validPos.input);\n\t\t\t\t\t\t\t\t\t} else if (i < pos) staticInputsBeforePos++;\n\t\t\t\t\t\t\t\t\tdelete getMaskSet().validPositions[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (verifyValidInput && validInputs[0] === test.match.def) {\n\t\t\t\t\t\t\t\t\tvalidInputs.shift();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tresetMaskSet(true); //clear getbuffer\n\t\t\t\t\t\t\t\tisValidRslt = true;\n\t\t\t\t\t\t\t\twhile (validInputs.length > 0) {\n\t\t\t\t\t\t\t\t\tvar input = validInputs.shift();\n\t\t\t\t\t\t\t\t\tif (input !== opts.skipOptionalPartCharacter) {\n\t\t\t\t\t\t\t\t\t\tif (!(isValidRslt = isValid(getLastValidPosition(undefined, true) + 1, input, false, fromSetValid, true))) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (isValidRslt) {\n\t\t\t\t\t\t\t\t\tgetMaskSet().validPositions[decisionPos].locator = possibilities; //reset forceddecision ~ needed for proper delete\n\t\t\t\t\t\t\t\t\tvar targetLvp = getLastValidPosition(pos) + 1;\n\t\t\t\t\t\t\t\t\tfor (i = decisionPos + 1; i < getLastValidPosition() + 1; i++) {\n\t\t\t\t\t\t\t\t\t\tvalidPos = getMaskSet().validPositions[i];\n\t\t\t\t\t\t\t\t\t\tif ((validPos === undefined || validPos.match.fn == null) && i < (pos + (staticInputsBeforePosAlternate - staticInputsBeforePos))) {\n\t\t\t\t\t\t\t\t\t\t\tstaticInputsBeforePosAlternate++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tpos = pos + (staticInputsBeforePosAlternate - staticInputsBeforePos);\n\t\t\t\t\t\t\t\t\tisValidRslt = isValid(pos > targetLvp ? targetLvp : pos, c, strict, fromSetValid, true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!isValidRslt) {\n\t\t\t\t\t\t\t\t\tresetMaskSet();\n\t\t\t\t\t\t\t\t\tgetMaskSet().validPositions = $.extend(true, {}, validPsClone);\n\t\t\t\t\t\t\t\t} else return false; //exit $.each\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn isValidRslt;\n\t\t\t}\n\n\t\t\t//set alternator choice on previous skipped placeholder positions\n\t\t\tfunction trackbackAlternations(originalPos, newPos) {\n\t\t\t\tvar vp = getMaskSet().validPositions[newPos];\n\t\t\t\tif (vp) {\n\t\t\t\t\tvar targetLocator = vp.locator,\n\t\t\t\t\t\ttll = targetLocator.length;\n\n\t\t\t\t\tfor (var ps = originalPos; ps < newPos; ps++) {\n\t\t\t\t\t\tif (getMaskSet().validPositions[ps] === undefined && !isMask(ps, true)) {\n\t\t\t\t\t\t\tvar tests = getTests(ps).slice(),\n\t\t\t\t\t\t\t\tbestMatch = determineTestTemplate(tests, true),\n\t\t\t\t\t\t\t\tequality = -1;\n\t\t\t\t\t\t\tif (tests[tests.length - 1].match.def === \"\") tests.pop();\n\t\t\t\t\t\t\t$.each(tests, function (ndx, tst) { //find best matching\n\t\t\t\t\t\t\t\tfor (var i = 0; i < tll; i++) {\n\t\t\t\t\t\t\t\t\tif (tst.locator[i] !== undefined && checkAlternationMatch(tst.locator[i].toString().split(\",\"), targetLocator[i].toString().split(\",\"), tst.na)) {\n\t\t\t\t\t\t\t\t\t\tif (equality < i) {\n\t\t\t\t\t\t\t\t\t\t\tequality = i;\n\t\t\t\t\t\t\t\t\t\t\tbestMatch = tst;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t//check if alternationIndex is closer then the current bestmatch\n\t\t\t\t\t\t\t\t\t\tvar targetAI = targetLocator[i],\n\t\t\t\t\t\t\t\t\t\t\tbestMatchAI = bestMatch.locator[i],\n\t\t\t\t\t\t\t\t\t\t\ttstAI = tst.locator[i];\n\t\t\t\t\t\t\t\t\t\tif ((targetAI - bestMatchAI) > Math.abs(targetAI - tstAI)) {\n\t\t\t\t\t\t\t\t\t\t\tbestMatch = tst;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbestMatch = $.extend({}, bestMatch, {\n\t\t\t\t\t\t\t\t\"input\": getPlaceholder(ps, bestMatch.match, true) || bestMatch.match.def\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbestMatch.generatedInput = true;\n\t\t\t\t\t\t\tsetValidPosition(ps, bestMatch, true);\n\t\t\t\t\t\t\t//revalidate the new position to update the locator value\n\t\t\t\t\t\t\tgetMaskSet().validPositions[newPos] = undefined;\n\t\t\t\t\t\t\t_isValid(newPos, vp.input, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction setValidPosition(pos, validTest, fromSetValid, isSelection) {\n\t\t\t\tif (isSelection || (opts.insertMode && getMaskSet().validPositions[pos] !== undefined && fromSetValid === undefined)) {\n\t\t\t\t\t//reposition & revalidate others\n\t\t\t\t\tvar positionsClone = $.extend(true, {}, getMaskSet().validPositions),\n\t\t\t\t\t\tlvp = getLastValidPosition(undefined, true),\n\t\t\t\t\t\ti;\n\t\t\t\t\tfor (i = pos; i <= lvp; i++) { //clear selection\n\t\t\t\t\t\tdelete getMaskSet().validPositions[i];\n\t\t\t\t\t}\n\t\t\t\t\tgetMaskSet().validPositions[pos] = $.extend(true, {}, validTest);\n\t\t\t\t\tvar valid = true,\n\t\t\t\t\t\tj, vps = getMaskSet().validPositions, needsValidation = false,\n\t\t\t\t\t\tinitialLength = getMaskSet().maskLength;\n\t\t\t\t\tfor (i = (j = pos); i <= lvp; i++) {\n\t\t\t\t\t\tvar t = positionsClone[i];\n\t\t\t\t\t\tif (t !== undefined /*&& (t.generatedInput !== true || t.match.fn === null)*/) {\n\t\t\t\t\t\t\tvar posMatch = j;\n\t\t\t\t\t\t\twhile (posMatch < getMaskSet().maskLength && ((t.match.fn === null && vps[i] && (vps[i].match.optionalQuantifier === true || vps[i].match.optionality === true)) || t.match.fn != null)) {\n\t\t\t\t\t\t\t\tposMatch++;\n\t\t\t\t\t\t\t\tif (needsValidation === false && positionsClone[posMatch] && positionsClone[posMatch].match.def === t.match.def) { //obvious match\n\t\t\t\t\t\t\t\t\tgetMaskSet().validPositions[posMatch] = $.extend(true, {}, positionsClone[posMatch]);\n\t\t\t\t\t\t\t\t\tgetMaskSet().validPositions[posMatch].input = t.input;\n\t\t\t\t\t\t\t\t\tfillMissingNonMask(posMatch);\n\t\t\t\t\t\t\t\t\tj = posMatch;\n\t\t\t\t\t\t\t\t\tvalid = true;\n\t\t\t\t\t\t\t\t} else if (positionCanMatchDefinition(posMatch, t.match.def)) { //validated match\n\t\t\t\t\t\t\t\t\tvar result = isValid(posMatch, t.input, true, true);\n\t\t\t\t\t\t\t\t\tvalid = result !== false;\n\t\t\t\t\t\t\t\t\tj = (result.caret || result.insert) ? getLastValidPosition() : posMatch;\n\t\t\t\t\t\t\t\t\tneedsValidation = true;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvalid = t.generatedInput === true;\n\t\t\t\t\t\t\t\t\tif (!valid && posMatch >= getMaskSet().maskLength - 1) break;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (getMaskSet().maskLength < initialLength) getMaskSet().maskLength = initialLength; //a bit hacky but the masklength is corrected later on\n\t\t\t\t\t\t\t\tif (valid) break;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!valid) break;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!valid) {\n\t\t\t\t\t\tgetMaskSet().validPositions = $.extend(true, {}, positionsClone);\n\t\t\t\t\t\tresetMaskSet(true);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telse\n\t\t\t\t\tgetMaskSet().validPositions[pos] = $.extend(true, {}, validTest);\n\t\t\t\t;\n\n\t\t\t\tresetMaskSet(true);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tfunction fillMissingNonMask(maskPos) {\n\t\t\t\t//Check for a nonmask before the pos\n\t\t\t\t//find previous valid\n\t\t\t\tfor (var pndx = maskPos - 1; pndx > -1; pndx--) {\n\t\t\t\t\tif (getMaskSet().validPositions[pndx]) break;\n\t\t\t\t}\n\t\t\t\t////fill missing nonmask and valid placeholders\n\t\t\t\tvar testTemplate, testsFromPos;\n\t\t\t\tfor (pndx++; pndx < maskPos; pndx++) {\n\t\t\t\t\tif (getMaskSet().validPositions[pndx] === undefined && (opts.jitMasking === false || opts.jitMasking > pndx)) {\n\t\t\t\t\t\ttestsFromPos = getTests(pndx, getTestTemplate(pndx - 1).locator, pndx - 1).slice();\n\t\t\t\t\t\tif (testsFromPos[testsFromPos.length - 1].match.def === \"\") testsFromPos.pop();\n\t\t\t\t\t\ttestTemplate = determineTestTemplate(testsFromPos);\n\t\t\t\t\t\tif (testTemplate && (testTemplate.match.def === opts.radixPointDefinitionSymbol || !isMask(pndx, true) ||\n\t\t\t\t\t\t\t($.inArray(opts.radixPoint, getBuffer()) < pndx && testTemplate.match.fn && testTemplate.match.fn.test(getPlaceholder(pndx), getMaskSet(), pndx, false, opts)))) {\n\t\t\t\t\t\t\tresult = _isValid(pndx, getPlaceholder(pndx, testTemplate.match, true) || (testTemplate.match.fn == null ? testTemplate.match.def : (getPlaceholder(pndx) !== \"\" ? getPlaceholder(pndx) : getBuffer()[pndx])), true);\n\t\t\t\t\t\t\tif (result !== false) {\n\t\t\t\t\t\t\t\tgetMaskSet().validPositions[result.pos || pndx].generatedInput = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar result = false,\n\t\t\t\tpositionsClone = $.extend(true, {}, getMaskSet().validPositions); //clone the currentPositions\n\n\t\t\tfillMissingNonMask(maskPos);\n\n\t\t\tif (isSelection(pos)) {\n\t\t\t\thandleRemove(undefined, Inputmask.keyCode.DELETE, pos);\n\t\t\t\tmaskPos = getMaskSet().p;\n\t\t\t}\n\n\t\t\tif (maskPos < getMaskSet().maskLength) {\n\t\t\t\tresult = _isValid(maskPos, c, strict);\n\t\t\t\tif ((!strict || fromSetValid === true) && result === false) {\n\t\t\t\t\tvar currentPosValid = getMaskSet().validPositions[maskPos];\n\t\t\t\t\tif (currentPosValid && currentPosValid.match.fn === null && (currentPosValid.match.def === c || c === opts.skipOptionalPartCharacter)) {\n\t\t\t\t\t\tresult = {\n\t\t\t\t\t\t\t\"caret\": seekNext(maskPos)\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if ((opts.insertMode || getMaskSet().validPositions[seekNext(maskPos)] === undefined) && !isMask(maskPos, true)) { //does the input match on a further position?\n\t\t\t\t\t\tfor (var nPos = maskPos + 1, snPos = seekNext(maskPos); nPos <= snPos; nPos++) {\n\t\t\t\t\t\t\tresult = _isValid(nPos, c, strict);\n\t\t\t\t\t\t\tif (result !== false) {\n\t\t\t\t\t\t\t\ttrackbackAlternations(maskPos, result.pos !== undefined ? result.pos : nPos);\n\t\t\t\t\t\t\t\tmaskPos = nPos;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (result === false && opts.keepStatic && !strict && fromAlternate !== true) { //try fuzzy alternator logic\n\t\t\t\tresult = alternate(maskPos, c, strict);\n\t\t\t}\n\t\t\tif (result === true) {\n\t\t\t\tresult = {\n\t\t\t\t\t\"pos\": maskPos\n\t\t\t\t};\n\t\t\t}\n\t\t\tif ($.isFunction(opts.postValidation) && result !== false && !strict && fromSetValid !== true) {\n\t\t\t\tresult = opts.postValidation(getBuffer(true), result, opts) ? result : false;\n\t\t\t}\n\n\t\t\tif (result.pos === undefined) {\n\t\t\t\tresult.pos = maskPos;\n\t\t\t}\n\n\t\t\tif (result === false) {\n\t\t\t\tresetMaskSet(true);\n\t\t\t\tgetMaskSet().validPositions = $.extend(true, {}, positionsClone); //revert validation changes\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction isMask(pos, strict) {\n\t\t\tvar test;\n\t\t\tif (strict) {\n\t\t\t\ttest = getTestTemplate(pos).match;\n\t\t\t\tif (test.def === \"\") test = getTest(pos).match;\n\t\t\t} else test = getTest(pos).match;\n\n\t\t\tif (test.fn != null) {\n\t\t\t\treturn test.fn;\n\t\t\t} else if (strict !== true && pos > -1) {\n\t\t\t\tvar tests = getTests(pos);\n\t\t\t\treturn tests.length > 1 + (tests[tests.length - 1].match.def === \"\" ? 1 : 0);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction seekNext(pos, newBlock) {\n\t\t\tvar maskL = getMaskSet().maskLength;\n\t\t\tif (pos >= maskL) return maskL;\n\t\t\tvar position = pos;\n\t\t\twhile (++position < maskL &&\n\t\t\t((newBlock === true && (getTest(position).match.newBlockMarker !== true || !isMask(position))) ||\n\t\t\t(newBlock !== true && !isMask(position)))) {\n\t\t\t}\n\t\t\treturn position;\n\t\t}\n\n\t\tfunction seekPrevious(pos, newBlock) {\n\t\t\tvar position = pos, tests;\n\t\t\tif (position <= 0) return 0;\n\n\t\t\twhile (--position > 0 &&\n\t\t\t((newBlock === true && getTest(position).match.newBlockMarker !== true) ||\n\t\t\t(newBlock !== true && !isMask(position) &&\n\t\t\t(tests = getTests(position), tests.length < 2 || (tests.length === 2 && tests[1].match.def === \"\"))))) {\n\t\t\t}\n\n\t\t\treturn position;\n\t\t}\n\n\t\tfunction getBufferElement(position) {\n\t\t\treturn getMaskSet().validPositions[position] === undefined ? getPlaceholder(position) : getMaskSet().validPositions[position].input;\n\t\t}\n\n\t\tfunction writeBuffer(input, buffer, caretPos, event, triggerInputEvent) {\n\t\t\tif (event && $.isFunction(opts.onBeforeWrite)) {\n\t\t\t\tvar result = opts.onBeforeWrite(event, buffer, caretPos, opts);\n\t\t\t\tif (result) {\n\t\t\t\t\tif (result.refreshFromBuffer) {\n\t\t\t\t\t\tvar refresh = result.refreshFromBuffer;\n\t\t\t\t\t\trefreshFromBuffer(refresh === true ? refresh : refresh.start, refresh.end, result.buffer || buffer);\n\t\t\t\t\t\tbuffer = getBuffer(true);\n\t\t\t\t\t}\n\t\t\t\t\t//only alter when intented !== undefined\n\t\t\t\t\tif (caretPos !== undefined) caretPos = result.caret !== undefined ? result.caret : caretPos;\n\t\t\t\t}\n\t\t\t}\n\t\t\tinput.inputmask._valueSet(buffer.join(\"\"));\n\t\t\tif (caretPos !== undefined && (event === undefined || event.type !== \"blur\")) {\n\t\t\t\tcaret(input, caretPos);\n\t\t\t} else renderColorMask(input, buffer, caretPos);\n\t\t\tif (triggerInputEvent === true) {\n\t\t\t\tskipInputEvent = true;\n\t\t\t\t$(input).trigger(\"input\");\n\t\t\t}\n\t\t}\n\n\t\tfunction getPlaceholder(pos, test, returnPL) {\n\t\t\ttest = test || getTest(pos).match;\n\t\t\tif (test.placeholder !== undefined || returnPL === true) {\n\t\t\t\treturn $.isFunction(test.placeholder) ? test.placeholder(opts) : test.placeholder;\n\t\t\t} else if (test.fn === null) {\n\t\t\t\tif (pos > -1 && getMaskSet().validPositions[pos] === undefined) {\n\t\t\t\t\tvar tests = getTests(pos),\n\t\t\t\t\t\tstaticAlternations = [],\n\t\t\t\t\t\tprevTest;\n\t\t\t\t\tif (tests.length > 1 + (tests[tests.length - 1].match.def === \"\" ? 1 : 0)) {\n\t\t\t\t\t\tfor (var i = 0; i < tests.length; i++) {\n\t\t\t\t\t\t\tif (tests[i].match.optionality !== true && tests[i].match.optionalQuantifier !== true &&\n\t\t\t\t\t\t\t\t(tests[i].match.fn === null || (prevTest === undefined || tests[i].match.fn.test(prevTest.match.def, getMaskSet(), pos, true, opts) !== false))) {\n\t\t\t\t\t\t\t\tstaticAlternations.push(tests[i]);\n\t\t\t\t\t\t\t\tif (tests[i].match.fn === null) prevTest = tests[i];\n\t\t\t\t\t\t\t\tif (staticAlternations.length > 1) {\n\t\t\t\t\t\t\t\t\tif (/[0-9a-bA-Z]/.test(staticAlternations[0].match.def)) {\n\t\t\t\t\t\t\t\t\t\treturn opts.placeholder.charAt(pos % opts.placeholder.length);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn test.def;\n\t\t\t}\n\n\t\t\treturn opts.placeholder.charAt(pos % opts.placeholder.length);\n\t\t}\n\n\t\tfunction checkVal(input, writeOut, strict, nptvl, initiatingEvent, stickyCaret) {\n\t\t\tvar inputValue = nptvl.slice(),\n\t\t\t\tcharCodes = \"\",\n\t\t\t\tinitialNdx = 0, result = undefined;\n\n\t\t\tfunction isTemplateMatch() {\n\t\t\t\tvar isMatch = false;\n\t\t\t\tvar charCodeNdx = getBufferTemplate().slice(initialNdx, seekNext(initialNdx)).join(\"\").indexOf(charCodes);\n\t\t\t\tif (charCodeNdx !== -1 && !isMask(initialNdx)) {\n\t\t\t\t\tisMatch = true;\n\t\t\t\t\tvar bufferTemplateArr = getBufferTemplate().slice(initialNdx, initialNdx + charCodeNdx);\n\t\t\t\t\tfor (var i = 0; i < bufferTemplateArr.length; i++) {\n\t\t\t\t\t\tif (bufferTemplateArr[i] !== \" \") {\n\t\t\t\t\t\t\tisMatch = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn isMatch;\n\t\t\t}\n\n\t\t\tresetMaskSet();\n\t\t\tgetMaskSet().p = seekNext(-1);\n\t\t\t// if (writeOut) input.inputmask._valueSet(\"\"); //initial clear\n\n\t\t\tif (!strict) {\n\t\t\t\tif (opts.autoUnmask !== true) {\n\t\t\t\t\tvar staticInput = getBufferTemplate().slice(0, seekNext(-1)).join(\"\"),\n\t\t\t\t\t\tmatches = inputValue.join(\"\").match(new RegExp(\"^\" + Inputmask.escapeRegex(staticInput), \"g\"));\n\t\t\t\t\tif (matches && matches.length > 0) {\n\t\t\t\t\t\tinputValue.splice(0, matches.length * staticInput.length);\n\t\t\t\t\t\tinitialNdx = seekNext(initialNdx);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinitialNdx = seekNext(initialNdx);\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t$.each(inputValue, function (ndx, charCode) {\n\t\t\t\tif (charCode !== undefined) { //inputfallback strips some elements out of the inputarray.  $.each logically presents them as undefined\n\t\t\t\t\tvar keypress = new $.Event(\"keypress\");\n\t\t\t\t\tkeypress.which = charCode.charCodeAt(0);\n\t\t\t\t\tcharCodes += charCode;\n\t\t\t\t\tvar lvp = getLastValidPosition(undefined, true),\n\t\t\t\t\t\tlvTest = getMaskSet().validPositions[lvp],\n\t\t\t\t\t\tnextTest = getTestTemplate(lvp + 1, lvTest ? lvTest.locator.slice() : undefined, lvp);\n\t\t\t\t\tif (!isTemplateMatch() || strict || opts.autoUnmask) {\n\t\t\t\t\t\tvar pos = strict ? ndx : (nextTest.match.fn == null && nextTest.match.optionality && (lvp + 1) < getMaskSet().p ? lvp + 1 : getMaskSet().p);\n\t\t\t\t\t\tresult = EventHandlers.keypressEvent.call(input, keypress, true, false, strict, pos);\n\t\t\t\t\t\tinitialNdx = pos + 1;\n\t\t\t\t\t\tcharCodes = \"\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = EventHandlers.keypressEvent.call(input, keypress, true, false, true, lvp + 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (!strict && $.isFunction(opts.onBeforeWrite)) {\n\t\t\t\t\t\tresult = opts.onBeforeWrite(keypress, getBuffer(), result.forwardPosition, opts);\n\t\t\t\t\t\tif (result && result.refreshFromBuffer) {\n\t\t\t\t\t\t\tvar refresh = result.refreshFromBuffer;\n\t\t\t\t\t\t\trefreshFromBuffer(refresh === true ? refresh : refresh.start, refresh.end, result.buffer);\n\t\t\t\t\t\t\tresetMaskSet(true);\n\t\t\t\t\t\t\tif (result.caret) {\n\t\t\t\t\t\t\t\tgetMaskSet().p = result.caret;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (writeOut) {\n\t\t\t\tvar caretPos = undefined, lvp = getLastValidPosition();\n\t\t\t\tif (document.activeElement === input && (initiatingEvent || result)) {\n\t\t\t\t\tcaretPos = caret(input).begin;\n\t\t\t\t\tif (initiatingEvent && result === false) caretPos = seekNext(getLastValidPosition(caretPos));\n\t\t\t\t\tif (result && stickyCaret !== true && (caretPos < lvp + 1 || lvp === -1))\n\t\t\t\t\t\tcaretPos = (opts.numericInput && result.caret === undefined) ? seekPrevious(result.forwardPosition) : result.forwardPosition;\n\t\t\t\t}\n\t\t\t\twriteBuffer(input, getBuffer(), caretPos, initiatingEvent || new $.Event(\"checkval\"));\n\t\t\t}\n\t\t}\n\n\t\tfunction unmaskedvalue(input) {\n\t\t\tif (input) {\n\t\t\t\tif (input.inputmask === undefined) {\n\t\t\t\t\treturn input.value;\n\t\t\t\t}\n\t\t\t\tif (input.inputmask && input.inputmask.refreshValue) { //forced refresh from the value form.reset\n\t\t\t\t\tEventHandlers.setValueEvent.call(input);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar umValue = [],\n\t\t\t\tvps = getMaskSet().validPositions;\n\t\t\tfor (var pndx in vps) {\n\t\t\t\tif (vps[pndx].match && vps[pndx].match.fn != null) {\n\t\t\t\t\tumValue.push(vps[pndx].input);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar unmaskedValue = umValue.length === 0 ? \"\" : (isRTL ? umValue.reverse() : umValue).join(\"\");\n\t\t\tif ($.isFunction(opts.onUnMask)) {\n\t\t\t\tvar bufferValue = (isRTL ? getBuffer().slice().reverse() : getBuffer()).join(\"\");\n\t\t\t\tunmaskedValue = (opts.onUnMask(bufferValue, unmaskedValue, opts) || unmaskedValue);\n\t\t\t}\n\t\t\treturn unmaskedValue;\n\t\t}\n\n\t\tfunction caret(input, begin, end, notranslate) {\n\t\t\tfunction translatePosition(pos) {\n\t\t\t\tif (notranslate !== true && isRTL && typeof pos === \"number\" && (!opts.greedy || opts.placeholder !== \"\")) {\n\t\t\t\t\tvar bffrLght = getBuffer().join(\"\").length; //join is needed because sometimes we get an empty buffer element which must not be counted for the caret position (numeric alias)\n\t\t\t\t\tpos = bffrLght - pos;\n\t\t\t\t}\n\t\t\t\treturn pos;\n\t\t\t}\n\n\t\t\tvar range;\n\t\t\tif (typeof begin === \"number\") {\n\t\t\t\tbegin = translatePosition(begin);\n\t\t\t\tend = translatePosition(end);\n\t\t\t\tend = (typeof end == \"number\") ? end : begin;\n\t\t\t\t// if (!$(input).is(\":visible\")) {\n\t\t\t\t// \treturn;\n\t\t\t\t// }\n\n\t\t\t\tvar scrollCalc = parseInt(((input.ownerDocument.defaultView || window).getComputedStyle ? (input.ownerDocument.defaultView || window).getComputedStyle(input, null) : input.currentStyle).fontSize) * end;\n\t\t\t\tinput.scrollLeft = scrollCalc > input.scrollWidth ? scrollCalc : 0;\n\n\t\t\t\tif (!mobile && opts.insertMode === false && begin === end) end++; //set visualization for insert/overwrite mode\n\t\t\t\tif (input.setSelectionRange) {\n\t\t\t\t\tinput.selectionStart = begin;\n\t\t\t\t\tinput.selectionEnd = end;\n\t\t\t\t} else if (window.getSelection) {\n\t\t\t\t\trange = document.createRange();\n\t\t\t\t\tif (input.firstChild === undefined || input.firstChild === null) {\n\t\t\t\t\t\tvar textNode = document.createTextNode(\"\");\n\t\t\t\t\t\tinput.appendChild(textNode);\n\t\t\t\t\t}\n\t\t\t\t\trange.setStart(input.firstChild, begin < input.inputmask._valueGet().length ? begin : input.inputmask._valueGet().length);\n\t\t\t\t\trange.setEnd(input.firstChild, end < input.inputmask._valueGet().length ? end : input.inputmask._valueGet().length);\n\t\t\t\t\trange.collapse(true);\n\t\t\t\t\tvar sel = window.getSelection();\n\t\t\t\t\tsel.removeAllRanges();\n\t\t\t\t\tsel.addRange(range);\n\t\t\t\t\t//input.focus();\n\t\t\t\t} else if (input.createTextRange) {\n\t\t\t\t\trange = input.createTextRange();\n\t\t\t\t\trange.collapse(true);\n\t\t\t\t\trange.moveEnd(\"character\", end);\n\t\t\t\t\trange.moveStart(\"character\", begin);\n\t\t\t\t\trange.select();\n\n\t\t\t\t}\n\t\t\t\trenderColorMask(input, undefined, {begin: begin, end: end});\n\t\t\t} else {\n\t\t\t\tif (input.setSelectionRange) {\n\t\t\t\t\tbegin = input.selectionStart;\n\t\t\t\t\tend = input.selectionEnd;\n\t\t\t\t} else if (window.getSelection) {\n\t\t\t\t\trange = window.getSelection().getRangeAt(0);\n\t\t\t\t\tif (range.commonAncestorContainer.parentNode === input || range.commonAncestorContainer === input) {\n\t\t\t\t\t\tbegin = range.startOffset;\n\t\t\t\t\t\tend = range.endOffset;\n\t\t\t\t\t}\n\t\t\t\t} else if (document.selection && document.selection.createRange) {\n\t\t\t\t\trange = document.selection.createRange();\n\t\t\t\t\tbegin = 0 - range.duplicate().moveStart(\"character\", -input.inputmask._valueGet().length);\n\t\t\t\t\tend = begin + range.text.length;\n\t\t\t\t}\n\t\t\t\t/*eslint-disable consistent-return */\n\t\t\t\treturn {\n\t\t\t\t\t\"begin\": translatePosition(begin),\n\t\t\t\t\t\"end\": translatePosition(end)\n\t\t\t\t};\n\t\t\t\t/*eslint-enable consistent-return */\n\t\t\t}\n\t\t}\n\n\t\tfunction determineLastRequiredPosition(returnDefinition) {\n\t\t\tvar buffer = getBuffer(),\n\t\t\t\tbl = buffer.length,\n\t\t\t\tpos, lvp = getLastValidPosition(),\n\t\t\t\tpositions = {},\n\t\t\t\tlvTest = getMaskSet().validPositions[lvp],\n\t\t\t\tndxIntlzr = lvTest !== undefined ? lvTest.locator.slice() : undefined,\n\t\t\t\ttestPos;\n\t\t\tfor (pos = lvp + 1; pos < buffer.length; pos++) {\n\t\t\t\ttestPos = getTestTemplate(pos, ndxIntlzr, pos - 1);\n\t\t\t\tndxIntlzr = testPos.locator.slice();\n\t\t\t\tpositions[pos] = $.extend(true, {}, testPos);\n\t\t\t}\n\n\t\t\tvar lvTestAlt = lvTest && lvTest.alternation !== undefined ? lvTest.locator[lvTest.alternation] : undefined;\n\t\t\tfor (pos = bl - 1; pos > lvp; pos--) {\n\t\t\t\ttestPos = positions[pos];\n\t\t\t\tif ((testPos.match.optionality ||\n\t\t\t\t\ttestPos.match.optionalQuantifier ||\n\t\t\t\t\t(lvTestAlt &&\n\t\t\t\t\t((lvTestAlt !== positions[pos].locator[lvTest.alternation] && testPos.match.fn != null) ||\n\t\t\t\t\t(testPos.match.fn === null && testPos.locator[lvTest.alternation] && checkAlternationMatch(testPos.locator[lvTest.alternation].toString().split(\",\"), lvTestAlt.toString().split(\",\")) && getTests(pos)[0].def !== \"\")))) &&\n\t\t\t\t\tbuffer[pos] === getPlaceholder(pos, testPos.match)) {\n\t\t\t\t\tbl--;\n\t\t\t\t} else break;\n\t\t\t}\n\t\t\treturn returnDefinition ? {\n\t\t\t\t\"l\": bl,\n\t\t\t\t\"def\": positions[bl] ? positions[bl].match : undefined\n\t\t\t} : bl;\n\t\t}\n\n\t\tfunction clearOptionalTail(buffer) {\n\t\t\tvar rl = determineLastRequiredPosition(),\n\t\t\t\tvalidPos, bl = buffer.length;\n\n\t\t\twhile (rl < bl && !isMask(rl + 1) && (validPos = getTest(rl + 1)) && validPos.match.optionality !== true && validPos.match.optionalQuantifier !== true) {\n\t\t\t\trl++;\n\t\t\t}\n\n\t\t\twhile ((validPos = getTest(rl - 1)) && validPos.match.optionality && validPos.input === opts.skipOptionalPartCharacter) {\n\t\t\t\trl--;\n\t\t\t}\n\t\t\tbuffer.splice(rl);\n\t\t\treturn buffer;\n\t\t}\n\n\t\tfunction isComplete(buffer) { //return true / false / undefined (repeat *)\n\t\t\tif ($.isFunction(opts.isComplete)) return opts.isComplete(buffer, opts);\n\t\t\tif (opts.repeat === \"*\") return undefined;\n\t\t\tvar complete = false,\n\t\t\t\tlrp = determineLastRequiredPosition(true),\n\t\t\t\taml = seekPrevious(lrp.l);\n\n\t\t\tif (lrp.def === undefined || lrp.def.newBlockMarker || lrp.def.optionality || lrp.def.optionalQuantifier) {\n\t\t\t\tcomplete = true;\n\t\t\t\tfor (var i = 0; i <= aml; i++) {\n\t\t\t\t\tvar test = getTestTemplate(i).match;\n\t\t\t\t\tif ((test.fn !== null && getMaskSet().validPositions[i] === undefined && test.optionality !== true && test.optionalQuantifier !== true) || (test.fn === null && buffer[i] !== getPlaceholder(i, test))) {\n\t\t\t\t\t\tcomplete = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn complete;\n\t\t}\n\n\n\t\tfunction handleRemove(input, k, pos, strict) {\n\t\t\tfunction generalize() {\n\t\t\t\tif (opts.keepStatic) {\n\t\t\t\t\tvar validInputs = [],\n\t\t\t\t\t\tlastAlt = getLastValidPosition(-1, true), positionsClone = $.extend(true, {}, getMaskSet().validPositions),\n\t\t\t\t\t\tprevAltPos = getMaskSet().validPositions[lastAlt];\n\t\t\t\t\t//find last alternation\n\t\t\t\t\tfor (; lastAlt >= 0; lastAlt--) {\n\t\t\t\t\t\tvar altPos = getMaskSet().validPositions[lastAlt];\n\t\t\t\t\t\tif (altPos) {\n\t\t\t\t\t\t\tif (altPos.generatedInput !== true && /[0-9a-bA-Z]/.test(altPos.input)) {\n\t\t\t\t\t\t\t\tvalidInputs.push(altPos.input);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete getMaskSet().validPositions[lastAlt];\n\t\t\t\t\t\t\tif (altPos.alternation !== undefined && altPos.locator[altPos.alternation] !== prevAltPos.locator[altPos.alternation]) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprevAltPos = altPos;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastAlt > -1) {\n\t\t\t\t\t\tgetMaskSet().p = seekNext(getLastValidPosition(-1, true));\n\t\t\t\t\t\twhile (validInputs.length > 0) {\n\t\t\t\t\t\t\tvar keypress = new $.Event(\"keypress\");\n\t\t\t\t\t\t\tkeypress.which = validInputs.pop().charCodeAt(0);\n\t\t\t\t\t\t\tEventHandlers.keypressEvent.call(input, keypress, true, false, false, getMaskSet().p);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else getMaskSet().validPositions = $.extend(true, {}, positionsClone); //restore original positions\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (opts.numericInput || isRTL) {\n\t\t\t\tif (k === Inputmask.keyCode.BACKSPACE) {\n\t\t\t\t\tk = Inputmask.keyCode.DELETE;\n\t\t\t\t} else if (k === Inputmask.keyCode.DELETE) {\n\t\t\t\t\tk = Inputmask.keyCode.BACKSPACE;\n\t\t\t\t}\n\n\t\t\t\tif (isRTL) {\n\t\t\t\t\tvar pend = pos.end;\n\t\t\t\t\tpos.end = pos.begin;\n\t\t\t\t\tpos.begin = pend;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (k === Inputmask.keyCode.BACKSPACE && (pos.end - pos.begin < 1 || opts.insertMode === false)) {\n\t\t\t\tpos.begin = seekPrevious(pos.begin);\n\t\t\t\tif (getMaskSet().validPositions[pos.begin] !== undefined && (getMaskSet().validPositions[pos.begin].input === opts.groupSeparator || getMaskSet().validPositions[pos.begin].input === opts.radixPoint)) {\n\t\t\t\t\tpos.begin--;\n\t\t\t\t}\n\t\t\t} else if (k === Inputmask.keyCode.DELETE && pos.begin === pos.end) {\n\t\t\t\tpos.end = isMask(pos.end, true) ? pos.end + 1 : seekNext(pos.end) + 1;\n\t\t\t\tif (getMaskSet().validPositions[pos.begin] !== undefined && (getMaskSet().validPositions[pos.begin].input === opts.groupSeparator || getMaskSet().validPositions[pos.begin].input === opts.radixPoint)) {\n\t\t\t\t\tpos.end++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstripValidPositions(pos.begin, pos.end, false, strict);\n\t\t\tif (strict !== true) {\n\t\t\t\tgeneralize(); //revert the alternation\n\t\t\t}\n\t\t\tvar lvp = getLastValidPosition(pos.begin, true);\n\t\t\tif (lvp < pos.begin) {\n\t\t\t\t//if (lvp === -1) resetMaskSet();\n\t\t\t\tgetMaskSet().p = seekNext(lvp);\n\t\t\t} else if (strict !== true) {\n\t\t\t\tgetMaskSet().p = pos.begin;\n\t\t\t}\n\t\t}\n\n\t\tvar EventRuler = {\n\t\t\ton: function (input, eventName, eventHandler) {\n\t\t\t\tvar ev = function (e) {\n\t\t\t\t\t// console.log(\"triggered \" + e.type);\n\n\t\t\t\t\tif (this.inputmask === undefined && this.nodeName !== \"FORM\") { //happens when cloning an object with jquery.clone\n\t\t\t\t\t\tvar imOpts = $.data(this, \"_inputmask_opts\");\n\t\t\t\t\t\tif (imOpts) (new Inputmask(imOpts)).mask(this);\n\t\t\t\t\t\telse EventRuler.off(this);\n\t\t\t\t\t} else if (e.type !== \"setvalue\" && this.nodeName !== \"FORM\" && (this.disabled || (this.readOnly && !(e.type === \"keydown\" && (e.ctrlKey && e.keyCode === 67) || (opts.tabThrough === false && e.keyCode === Inputmask.keyCode.TAB))))) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tswitch (e.type) {\n\t\t\t\t\t\t\tcase \"input\":\n\t\t\t\t\t\t\t\tif (skipInputEvent === true) {\n\t\t\t\t\t\t\t\t\tskipInputEvent = false;\n\t\t\t\t\t\t\t\t\treturn e.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"keydown\":\n\t\t\t\t\t\t\t\t//Safari 5.1.x - modal dialog fires keypress twice workaround\n\t\t\t\t\t\t\t\tskipKeyPressEvent = false;\n\t\t\t\t\t\t\t\tskipInputEvent = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"keypress\":\n\t\t\t\t\t\t\t\tif (skipKeyPressEvent === true) {\n\t\t\t\t\t\t\t\t\treturn e.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tskipKeyPressEvent = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"click\":\n\t\t\t\t\t\t\t\tif (iemobile || iphone) {\n\t\t\t\t\t\t\t\t\tvar that = this, args = arguments;\n\t\t\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\t\t\teventHandler.apply(that, args);\n\t\t\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// console.log(\"executed \" + e.type);\n\t\t\t\t\t\tvar returnVal = eventHandler.apply(this, arguments);\n\t\t\t\t\t\tif (returnVal === false) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn returnVal;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t//keep instance of the event\n\t\t\t\tinput.inputmask.events[eventName] = input.inputmask.events[eventName] || [];\n\t\t\t\tinput.inputmask.events[eventName].push(ev);\n\n\t\t\t\tif ($.inArray(eventName, [\"submit\", \"reset\"]) !== -1) {\n\t\t\t\t\tif (input.form != null) $(input.form).on(eventName, ev);\n\t\t\t\t} else {\n\t\t\t\t\t$(input).on(eventName, ev);\n\t\t\t\t}\n\t\t\t},\n\t\t\toff: function (input, event) {\n\t\t\t\tif (input.inputmask && input.inputmask.events) {\n\t\t\t\t\tvar events;\n\t\t\t\t\tif (event) {\n\t\t\t\t\t\tevents = [];\n\t\t\t\t\t\tevents[event] = input.inputmask.events[event];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tevents = input.inputmask.events;\n\t\t\t\t\t}\n\t\t\t\t\t$.each(events, function (eventName, evArr) {\n\t\t\t\t\t\twhile (evArr.length > 0) {\n\t\t\t\t\t\t\tvar ev = evArr.pop();\n\t\t\t\t\t\t\tif ($.inArray(eventName, [\"submit\", \"reset\"]) !== -1) {\n\t\t\t\t\t\t\t\tif (input.form != null) $(input.form).off(eventName, ev);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(input).off(eventName, ev);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete input.inputmask.events[eventName];\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tvar EventHandlers = {\n\t\t\tkeydownEvent: function (e) {\n\t\t\t\tfunction isInputEventSupported(eventName) {\n\t\t\t\t\tvar el = document.createElement(\"input\"),\n\t\t\t\t\t\tevName = \"on\" + eventName,\n\t\t\t\t\t\tisSupported = (evName in el);\n\t\t\t\t\tif (!isSupported) {\n\t\t\t\t\t\tel.setAttribute(evName, \"return;\");\n\t\t\t\t\t\tisSupported = typeof el[evName] == \"function\";\n\t\t\t\t\t}\n\t\t\t\t\tel = null;\n\t\t\t\t\treturn isSupported;\n\t\t\t\t}\n\n\t\t\t\tvar input = this,\n\t\t\t\t\t$input = $(input),\n\t\t\t\t\tk = e.keyCode,\n\t\t\t\t\tpos = caret(input);\n\n\t\t\t\t//backspace, delete, and escape get special treatment\n\t\t\t\tif (k === Inputmask.keyCode.BACKSPACE || k === Inputmask.keyCode.DELETE || (iphone && k === Inputmask.keyCode.BACKSPACE_SAFARI) || (e.ctrlKey && k === Inputmask.keyCode.X && !isInputEventSupported(\"cut\"))) { //backspace/delete\n\t\t\t\t\te.preventDefault(); //stop default action but allow propagation\n\t\t\t\t\thandleRemove(input, k, pos);\n\t\t\t\t\twriteBuffer(input, getBuffer(true), getMaskSet().p, e, input.inputmask._valueGet() !== getBuffer().join(\"\"));\n\t\t\t\t\tif (input.inputmask._valueGet() === getBufferTemplate().join(\"\")) {\n\t\t\t\t\t\t$input.trigger(\"cleared\");\n\t\t\t\t\t} else if (isComplete(getBuffer()) === true) {\n\t\t\t\t\t\t$input.trigger(\"complete\");\n\t\t\t\t\t}\n\t\t\t\t} else if (k === Inputmask.keyCode.END || k === Inputmask.keyCode.PAGE_DOWN) { //when END or PAGE_DOWN pressed set position at lastmatch\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tvar caretPos = seekNext(getLastValidPosition());\n\t\t\t\t\tif (!opts.insertMode && caretPos === getMaskSet().maskLength && !e.shiftKey) caretPos--;\n\t\t\t\t\tcaret(input, e.shiftKey ? pos.begin : caretPos, caretPos, true);\n\t\t\t\t} else if ((k === Inputmask.keyCode.HOME && !e.shiftKey) || k === Inputmask.keyCode.PAGE_UP) { //Home or page_up\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tcaret(input, 0, e.shiftKey ? pos.begin : 0, true);\n\t\t\t\t} else if (((opts.undoOnEscape && k === Inputmask.keyCode.ESCAPE) || (k === 90 && e.ctrlKey)) && e.altKey !== true) { //escape && undo && #762\n\t\t\t\t\tcheckVal(input, true, false, undoValue.split(\"\"));\n\t\t\t\t\t$input.trigger(\"click\");\n\t\t\t\t} else if (k === Inputmask.keyCode.INSERT && !(e.shiftKey || e.ctrlKey)) { //insert\n\t\t\t\t\topts.insertMode = !opts.insertMode;\n\t\t\t\t\tcaret(input, !opts.insertMode && pos.begin === getMaskSet().maskLength ? pos.begin - 1 : pos.begin);\n\t\t\t\t} else if (opts.tabThrough === true && k === Inputmask.keyCode.TAB) {\n\t\t\t\t\tif (e.shiftKey === true) {\n\t\t\t\t\t\tif (getTest(pos.begin).match.fn === null) {\n\t\t\t\t\t\t\tpos.begin = seekNext(pos.begin);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos.end = seekPrevious(pos.begin, true);\n\t\t\t\t\t\tpos.begin = seekPrevious(pos.end, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpos.begin = seekNext(pos.begin, true);\n\t\t\t\t\t\tpos.end = seekNext(pos.begin, true);\n\t\t\t\t\t\tif (pos.end < getMaskSet().maskLength) pos.end--;\n\t\t\t\t\t}\n\t\t\t\t\tif (pos.begin < getMaskSet().maskLength) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tcaret(input, pos.begin, pos.end);\n\t\t\t\t\t}\n\t\t\t\t} else if (!e.shiftKey) {\n\t\t\t\t\tif (opts.insertMode === false) {\n\t\t\t\t\t\tif (k === Inputmask.keyCode.RIGHT) {\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\tvar caretPos = caret(input);\n\t\t\t\t\t\t\t\tcaret(input, caretPos.begin);\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t} else if (k === Inputmask.keyCode.LEFT) {\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\tvar caretPos = caret(input);\n\t\t\t\t\t\t\t\tcaret(input, isRTL ? caretPos.begin + 1 : caretPos.begin - 1);\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\topts.onKeyDown.call(this, e, getBuffer(), caret(input).begin, opts);\n\t\t\t\tignorable = $.inArray(k, opts.ignorables) !== -1;\n\t\t\t},\n\t\t\tkeypressEvent: function (e, checkval, writeOut, strict, ndx) {\n\t\t\t\tvar input = this,\n\t\t\t\t\t$input = $(input),\n\t\t\t\t\tk = e.which || e.charCode || e.keyCode;\n\n\t\t\t\tif (checkval !== true && (!(e.ctrlKey && e.altKey) && (e.ctrlKey || e.metaKey || ignorable))) {\n\t\t\t\t\tif (k === Inputmask.keyCode.ENTER && undoValue !== getBuffer().join(\"\")) {\n\t\t\t\t\t\tundoValue = getBuffer().join(\"\");\n\t\t\t\t\t\t// e.preventDefault();\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t$input.trigger(\"change\");\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tif (k) {\n\t\t\t\t\t\t//special treat the decimal separator\n\t\t\t\t\t\tif (k === 46 && e.shiftKey === false && opts.radixPoint !== \"\") k = opts.radixPoint.charCodeAt(0);\n\t\t\t\t\t\tvar pos = checkval ? {\n\t\t\t\t\t\t\t\tbegin: ndx,\n\t\t\t\t\t\t\t\tend: ndx\n\t\t\t\t\t\t\t} : caret(input),\n\t\t\t\t\t\t\tforwardPosition, c = String.fromCharCode(k);\n\n\t\t\t\t\t\tgetMaskSet().writeOutBuffer = true;\n\t\t\t\t\t\tvar valResult = isValid(pos, c, strict);\n\t\t\t\t\t\tif (valResult !== false) {\n\t\t\t\t\t\t\tresetMaskSet(true);\n\t\t\t\t\t\t\tforwardPosition = valResult.caret !== undefined ? valResult.caret : checkval ? valResult.pos + 1 : seekNext(valResult.pos);\n\t\t\t\t\t\t\tgetMaskSet().p = forwardPosition; //needed for checkval\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (writeOut !== false) {\n\t\t\t\t\t\t\tvar self = this;\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\topts.onKeyValidation.call(self, k, valResult, opts);\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t\tif (getMaskSet().writeOutBuffer && valResult !== false) {\n\t\t\t\t\t\t\t\tvar buffer = getBuffer();\n\t\t\t\t\t\t\t\twriteBuffer(input, buffer, (opts.numericInput && valResult.caret === undefined) ? seekPrevious(forwardPosition) : forwardPosition, e, checkval !== true);\n\t\t\t\t\t\t\t\tif (checkval !== true) {\n\t\t\t\t\t\t\t\t\tsetTimeout(function () { //timeout needed for IE\n\t\t\t\t\t\t\t\t\t\tif (isComplete(buffer) === true) $input.trigger(\"complete\");\n\t\t\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\tif (checkval) {\n\t\t\t\t\t\t\tvalResult.forwardPosition = forwardPosition;\n\t\t\t\t\t\t\treturn valResult;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpasteEvent: function (e) {\n\t\t\t\tvar input = this,\n\t\t\t\t\tev = e.originalEvent || e,\n\t\t\t\t\t$input = $(input),\n\t\t\t\t\tinputValue = input.inputmask._valueGet(true),\n\t\t\t\t\tcaretPos = caret(input),\n\t\t\t\t\ttempValue;\n\n\t\t\t\tif (isRTL) {\n\t\t\t\t\ttempValue = caretPos.end;\n\t\t\t\t\tcaretPos.end = caretPos.begin;\n\t\t\t\t\tcaretPos.begin = tempValue;\n\t\t\t\t}\n\n\t\t\t\tvar valueBeforeCaret = inputValue.substr(0, caretPos.begin),\n\t\t\t\t\tvalueAfterCaret = inputValue.substr(caretPos.end, inputValue.length);\n\n\t\t\t\tif (valueBeforeCaret === (isRTL ? getBufferTemplate().reverse() : getBufferTemplate()).slice(0, caretPos.begin).join(\"\")) valueBeforeCaret = \"\";\n\t\t\t\tif (valueAfterCaret === (isRTL ? getBufferTemplate().reverse() : getBufferTemplate()).slice(caretPos.end).join(\"\")) valueAfterCaret = \"\";\n\t\t\t\tif (isRTL) {\n\t\t\t\t\ttempValue = valueBeforeCaret;\n\t\t\t\t\tvalueBeforeCaret = valueAfterCaret;\n\t\t\t\t\tvalueAfterCaret = tempValue;\n\t\t\t\t}\n\n\t\t\t\tif (window.clipboardData && window.clipboardData.getData) { // IE\n\t\t\t\t\tinputValue = valueBeforeCaret + window.clipboardData.getData(\"Text\") + valueAfterCaret;\n\t\t\t\t} else if (ev.clipboardData && ev.clipboardData.getData) {\n\t\t\t\t\tinputValue = valueBeforeCaret + ev.clipboardData.getData(\"text/plain\") + valueAfterCaret;\n\t\t\t\t} else return true; //allow native paste event as fallback ~ masking will continue by inputfallback\n\n\t\t\t\tvar pasteValue = inputValue;\n\t\t\t\tif ($.isFunction(opts.onBeforePaste)) {\n\t\t\t\t\tpasteValue = opts.onBeforePaste(inputValue, opts);\n\t\t\t\t\tif (pasteValue === false) {\n\t\t\t\t\t\treturn e.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\tif (!pasteValue) {\n\t\t\t\t\t\tpasteValue = inputValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcheckVal(input, false, false, isRTL ? pasteValue.split(\"\").reverse() : pasteValue.toString().split(\"\"));\n\t\t\t\twriteBuffer(input, getBuffer(), seekNext(getLastValidPosition()), e, undoValue !== getBuffer().join(\"\"));\n\t\t\t\tif (isComplete(getBuffer()) === true) {\n\t\t\t\t\t$input.trigger(\"complete\");\n\t\t\t\t}\n\n\t\t\t\treturn e.preventDefault();\n\t\t\t},\n\t\t\tinputFallBackEvent: function (e) { //fallback when keypress fails\n\t\t\t\tvar input = this,\n\t\t\t\t\tinputValue = input.inputmask._valueGet();\n\n\t\t\t\t//console.log(inputValue);\n\t\t\t\tif (getBuffer().join(\"\") !== inputValue) {\n\t\t\t\t\tvar caretPos = caret(input);\n\t\t\t\t\tinputValue = inputValue.replace(new RegExp(\"(\" + Inputmask.escapeRegex(getBufferTemplate().join(\"\")) + \")*\"), \"\");\n\n\t\t\t\t\tif (iemobile) { //iemobile just set the character at the end althought the caret position is correctly set\n\t\t\t\t\t\tvar inputChar = inputValue.replace(getBuffer().join(\"\"), \"\");\n\t\t\t\t\t\tif (inputChar.length === 1) {\n\t\t\t\t\t\t\tvar keypress = new $.Event(\"keypress\");\n\t\t\t\t\t\t\tkeypress.which = inputChar.charCodeAt(0);\n\t\t\t\t\t\t\tEventHandlers.keypressEvent.call(input, keypress, true, true, false, getMaskSet().validPositions[caretPos.begin - 1] ? caretPos.begin : caretPos.begin - 1);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (caretPos.begin > inputValue.length) {\n\t\t\t\t\t\tcaret(input, inputValue.length);\n\t\t\t\t\t\tcaretPos = caret(input);\n\t\t\t\t\t}\n\t\t\t\t\t//detect & treat possible backspace before static\n\t\t\t\t\tif ((getBuffer().length - inputValue.length) === 1 && inputValue.charAt(caretPos.begin) !== getBuffer()[caretPos.begin] && inputValue.charAt(caretPos.begin + 1) !== getBuffer()[caretPos.begin] && !isMask(caretPos.begin)) {\n\t\t\t\t\t\te.keyCode = Inputmask.keyCode.BACKSPACE;\n\t\t\t\t\t\tEventHandlers.keydownEvent.call(input, e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar lvp = getLastValidPosition() + 1;\n\t\t\t\t\t\tvar bufferTemplate = getBufferTemplate().join(\"\"); //getBuffer().slice(lvp).join('');\n\t\t\t\t\t\twhile (inputValue.match(Inputmask.escapeRegex(bufferTemplate) + \"$\") === null) {\n\t\t\t\t\t\t\tbufferTemplate = bufferTemplate.slice(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinputValue = inputValue.replace(bufferTemplate, \"\");\n\t\t\t\t\t\tinputValue = inputValue.split(\"\");\n\t\t\t\t\t\tcheckVal(input, true, false, inputValue, e, caretPos.begin < lvp);\n\n\t\t\t\t\t\tif (isComplete(getBuffer()) === true) {\n\t\t\t\t\t\t\t$(input).trigger(\"complete\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t},\n\t\t\tsetValueEvent: function (e) {\n\t\t\t\tthis.inputmask.refreshValue = false;\n\t\t\t\tvar input = this,\n\t\t\t\t\tvalue = input.inputmask._valueGet();\n\t\t\t\tcheckVal(input, true, false, ($.isFunction(opts.onBeforeMask) ? (opts.onBeforeMask(value, opts) || value) : value).split(\"\"));\n\t\t\t\tundoValue = getBuffer().join(\"\");\n\t\t\t\tif ((opts.clearMaskOnLostFocus || opts.clearIncomplete) && input.inputmask._valueGet() === getBufferTemplate().join(\"\")) {\n\t\t\t\t\tinput.inputmask._valueSet(\"\");\n\t\t\t\t}\n\t\t\t},\n\t\t\tfocusEvent: function (e) {\n\t\t\t\tvar input = this,\n\t\t\t\t\tnptValue = input.inputmask._valueGet();\n\t\t\t\tif (opts.showMaskOnFocus && (!opts.showMaskOnHover || (opts.showMaskOnHover && nptValue === \"\"))) {\n\t\t\t\t\tif (input.inputmask._valueGet() !== getBuffer().join(\"\")) {\n\t\t\t\t\t\twriteBuffer(input, getBuffer(), seekNext(getLastValidPosition()));\n\t\t\t\t\t} else if (mouseEnter === false) { //only executed on focus without mouseenter\n\t\t\t\t\t\tcaret(input, seekNext(getLastValidPosition()));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (opts.positionCaretOnTab === true) {\n\t\t\t\t\tEventHandlers.clickEvent.apply(input, [e, true]);\n\t\t\t\t}\n\t\t\t\tundoValue = getBuffer().join(\"\");\n\t\t\t},\n\t\t\tmouseleaveEvent: function (e) {\n\t\t\t\tvar input = this;\n\t\t\t\tmouseEnter = false;\n\t\t\t\tif (opts.clearMaskOnLostFocus && document.activeElement !== input) {\n\t\t\t\t\tvar buffer = getBuffer().slice(),\n\t\t\t\t\t\tnptValue = input.inputmask._valueGet();\n\t\t\t\t\tif (nptValue !== input.getAttribute(\"placeholder\") && nptValue !== \"\") {\n\t\t\t\t\t\tif (getLastValidPosition() === -1 && nptValue === getBufferTemplate().join(\"\")) {\n\t\t\t\t\t\t\tbuffer = [];\n\t\t\t\t\t\t} else { //clearout optional tail of the mask\n\t\t\t\t\t\t\tclearOptionalTail(buffer);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twriteBuffer(input, buffer);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tclickEvent: function (e, tabbed) {\n\t\t\t\tfunction doRadixFocus(clickPos) {\n\t\t\t\t\tif (opts.radixPoint !== \"\") {\n\t\t\t\t\t\tvar vps = getMaskSet().validPositions;\n\t\t\t\t\t\tif (vps[clickPos] === undefined || (vps[clickPos].input === getPlaceholder(clickPos))) {\n\t\t\t\t\t\t\tif (clickPos < seekNext(-1)) return true;\n\t\t\t\t\t\t\tvar radixPos = $.inArray(opts.radixPoint, getBuffer());\n\t\t\t\t\t\t\tif (radixPos !== -1) {\n\t\t\t\t\t\t\t\tfor (var vp in vps) {\n\t\t\t\t\t\t\t\t\tif (radixPos < vp && vps[vp].input !== getPlaceholder(vp)) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tvar input = this;\n\t\t\t\tsetTimeout(function () { //needed for Chrome ~ initial selection clears after the clickevent\n\t\t\t\t\tif (document.activeElement === input) {\n\t\t\t\t\t\tvar selectedCaret = caret(input);\n\t\t\t\t\t\tif (tabbed) selectedCaret.begin = selectedCaret.end;\n\t\t\t\t\t\tif (selectedCaret.begin === selectedCaret.end) {\n\t\t\t\t\t\t\tswitch (opts.positionCaretOnClick) {\n\t\t\t\t\t\t\t\tcase \"none\":\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"radixFocus\":\n\t\t\t\t\t\t\t\t\tif (doRadixFocus(selectedCaret.begin)) {\n\t\t\t\t\t\t\t\t\t\tvar radixPos = $.inArray(opts.radixPoint, getBuffer().join(\"\"));\n\t\t\t\t\t\t\t\t\t\tcaret(input, opts.numericInput ? seekNext(radixPos) : radixPos);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault: //lvp:\n\t\t\t\t\t\t\t\t\tvar clickPosition = selectedCaret.begin,\n\t\t\t\t\t\t\t\t\t\tlvclickPosition = getLastValidPosition(clickPosition, true),\n\t\t\t\t\t\t\t\t\t\tlastPosition = seekNext(lvclickPosition);\n\n\t\t\t\t\t\t\t\t\tif (clickPosition < lastPosition) {\n\t\t\t\t\t\t\t\t\t\tcaret(input, !isMask(clickPosition) && !isMask(clickPosition - 1) ? seekNext(clickPosition) : clickPosition);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar placeholder = getPlaceholder(lastPosition);\n\t\t\t\t\t\t\t\t\t\tif ((placeholder !== \"\" && getBuffer()[lastPosition] !== placeholder && getTest(lastPosition).match.optionalQuantifier !== true) || (!isMask(lastPosition) && getTest(lastPosition).match.def === placeholder)) {\n\t\t\t\t\t\t\t\t\t\t\tlastPosition = seekNext(lastPosition);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcaret(input, lastPosition);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t},\n\t\t\tdblclickEvent: function (e) {\n\t\t\t\tvar input = this;\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tcaret(input, 0, seekNext(getLastValidPosition()));\n\t\t\t\t}, 0);\n\t\t\t},\n\t\t\tcutEvent: function (e) {\n\t\t\t\tvar input = this,\n\t\t\t\t\t$input = $(input),\n\t\t\t\t\tpos = caret(input),\n\t\t\t\t\tev = e.originalEvent || e;\n\n\t\t\t\t//correct clipboardData\n\t\t\t\tvar clipboardData = window.clipboardData || ev.clipboardData,\n\t\t\t\t\tclipData = isRTL ? getBuffer().slice(pos.end, pos.begin) : getBuffer().slice(pos.begin, pos.end);\n\t\t\t\tclipboardData.setData(\"text\", isRTL ? clipData.reverse().join(\"\") : clipData.join(\"\"));\n\t\t\t\tif (document.execCommand) document.execCommand(\"copy\"); // copy selected content to system clipbaord\n\n\t\t\t\thandleRemove(input, Inputmask.keyCode.DELETE, pos);\n\t\t\t\twriteBuffer(input, getBuffer(), getMaskSet().p, e, undoValue !== getBuffer().join(\"\"));\n\n\t\t\t\tif (input.inputmask._valueGet() === getBufferTemplate().join(\"\")) {\n\t\t\t\t\t$input.trigger(\"cleared\");\n\t\t\t\t}\n\t\t\t},\n\t\t\tblurEvent: function (e) {\n\t\t\t\tvar $input = $(this),\n\t\t\t\t\tinput = this;\n\t\t\t\tif (input.inputmask) {\n\t\t\t\t\tvar nptValue = input.inputmask._valueGet(),\n\t\t\t\t\t\tbuffer = getBuffer().slice();\n\t\t\t\t\tif (undoValue !== buffer.join(\"\")) {\n\t\t\t\t\t\tsetTimeout(function () { //change event should be triggered after the other buffer manipulations on blur\n\t\t\t\t\t\t\t$input.trigger(\"change\");\n\t\t\t\t\t\t\tundoValue = buffer.join(\"\");\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t\tif (nptValue !== \"\") {\n\t\t\t\t\t\tif (opts.clearMaskOnLostFocus) {\n\t\t\t\t\t\t\tif (getLastValidPosition() === -1 && nptValue === getBufferTemplate().join(\"\")) {\n\t\t\t\t\t\t\t\tbuffer = [];\n\t\t\t\t\t\t\t} else { //clearout optional tail of the mask\n\t\t\t\t\t\t\t\tclearOptionalTail(buffer);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isComplete(buffer) === false) {\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\t$input.trigger(\"incomplete\");\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t\tif (opts.clearIncomplete) {\n\t\t\t\t\t\t\t\tresetMaskSet();\n\t\t\t\t\t\t\t\tif (opts.clearMaskOnLostFocus) {\n\t\t\t\t\t\t\t\t\tbuffer = [];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbuffer = getBufferTemplate().slice();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twriteBuffer(input, buffer, undefined, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tmouseenterEvent: function (e) {\n\t\t\t\tvar input = this;\n\t\t\t\tmouseEnter = true;\n\t\t\t\tif (document.activeElement !== input && opts.showMaskOnHover) {\n\t\t\t\t\tif (input.inputmask._valueGet() !== getBuffer().join(\"\")) {\n\t\t\t\t\t\twriteBuffer(input, getBuffer());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tsubmitEvent: function (e) { //trigger change on submit if any\n\t\t\t\tif (undoValue !== getBuffer().join(\"\")) {\n\t\t\t\t\t$el.trigger(\"change\");\n\t\t\t\t}\n\t\t\t\tif (opts.clearMaskOnLostFocus && getLastValidPosition() === -1 && el.inputmask._valueGet && el.inputmask._valueGet() === getBufferTemplate().join(\"\")) {\n\t\t\t\t\tel.inputmask._valueSet(\"\"); //clear masktemplete on submit and still has focus\n\t\t\t\t}\n\t\t\t\tif (opts.removeMaskOnSubmit) {\n\t\t\t\t\tel.inputmask._valueSet(el.inputmask.unmaskedvalue(), true);\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\twriteBuffer(el, getBuffer());\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t},\n\t\t\tresetEvent: function (e) {\n\t\t\t\tel.inputmask.refreshValue = true; //indicate a forced refresh when there is a call to the value before leaving the triggering event fn\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t$el.trigger(\"setvalue\");\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t};\n\n\n\t\tfunction initializeColorMask(input) {\n\t\t\tfunction findCaretPos(clientx) {\n\t\t\t\t//calculate text width\n\t\t\t\tvar e = document.createElement('span'), caretPos;\n\t\t\t\tfor (var style in computedStyle) { //clone styles\n\t\t\t\t\tif (isNaN(style) && style.indexOf(\"font\") !== -1) {\n\t\t\t\t\t\te.style[style] = computedStyle[style];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.style.textTransform = computedStyle.textTransform;\n\t\t\t\te.style.letterSpacing = computedStyle.letterSpacing;\n\t\t\t\te.style.position = \"absolute\";\n\t\t\t\te.style.height = \"auto\";\n\t\t\t\te.style.width = \"auto\";\n\t\t\t\te.style.visibility = \"hidden\";\n\t\t\t\te.style.whiteSpace = \"nowrap\";\n\n\t\t\t\tdocument.body.appendChild(e);\n\t\t\t\tvar inputText = input.inputmask._valueGet(), previousWidth = 0, itl;\n\t\t\t\tfor (caretPos = 0, itl = inputText.length; caretPos <= itl; caretPos++) {\n\t\t\t\t\te.innerHTML += inputText.charAt(caretPos) || \"_\";\n\t\t\t\t\tif (e.offsetWidth >= clientx) {\n\t\t\t\t\t\tvar offset1 = (clientx - previousWidth);\n\t\t\t\t\t\tvar offset2 = e.offsetWidth - clientx;\n\t\t\t\t\t\te.innerHTML = inputText.charAt(caretPos);\n\t\t\t\t\t\toffset1 -= (e.offsetWidth / 3);\n\t\t\t\t\t\tcaretPos = offset1 < offset2 ? caretPos - 1 : caretPos;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tpreviousWidth = e.offsetWidth;\n\t\t\t\t}\n\t\t\t\tdocument.body.removeChild(e);\n\t\t\t\treturn caretPos;\n\t\t\t}\n\n\t\t\tfunction position() {\n\t\t\t\tcolorMask.style.position = \"absolute\";\n\t\t\t\tcolorMask.style.top = offset.top + \"px\";\n\t\t\t\tcolorMask.style.left = offset.left + \"px\";\n\t\t\t\tcolorMask.style.width = parseInt(input.offsetWidth) - parseInt(computedStyle.paddingLeft) - parseInt(computedStyle.paddingRight) - parseInt(computedStyle.borderLeftWidth) - parseInt(computedStyle.borderRightWidth) + \"px\";\n\t\t\t\tcolorMask.style.height = parseInt(input.offsetHeight) - parseInt(computedStyle.paddingTop) - parseInt(computedStyle.paddingBottom) - parseInt(computedStyle.borderTopWidth) - parseInt(computedStyle.borderBottomWidth) + \"px\";\n\n\t\t\t\tcolorMask.style.lineHeight = colorMask.style.height;\n\t\t\t\tcolorMask.style.zIndex = isNaN(computedStyle.zIndex) ? -1 : computedStyle.zIndex - 1;\n\t\t\t\tcolorMask.style.webkitAppearance = \"textfield\";\n\t\t\t\tcolorMask.style.mozAppearance = \"textfield\";\n\t\t\t\tcolorMask.style.Appearance = \"textfield\";\n\n\t\t\t}\n\n\t\t\tvar offset = $(input).position(),\n\t\t\t\tcomputedStyle = (input.ownerDocument.defaultView || window).getComputedStyle(input, null),\n\t\t\t\tparentNode = input.parentNode;\n\n\t\t\tcolorMask = document.createElement(\"div\");\n\t\t\tdocument.body.appendChild(colorMask); //insert at body to prevent css clash :last-child for example\n\t\t\tfor (var style in computedStyle) { //clone styles\n\t\t\t\tif (isNaN(style) && style !== \"cssText\" && style.indexOf(\"webkit\") == -1) {\n\t\t\t\t\tcolorMask.style[style] = computedStyle[style];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//restyle input\n\t\t\tinput.style.backgroundColor = \"transparent\";\n\t\t\tinput.style.color = \"transparent\";\n\t\t\tinput.style.webkitAppearance = \"caret\";\n\t\t\tinput.style.mozAppearance = \"caret\";\n\t\t\tinput.style.Appearance = \"caret\";\n\n\t\t\tposition();\n\n\t\t\t//event passthrough\n\t\t\t$(window).on(\"resize\", function (e) {\n\t\t\t\toffset = $(input).position();\n\t\t\t\tcomputedStyle = (input.ownerDocument.defaultView || window).getComputedStyle(input, null);\n\t\t\t\tposition();\n\t\t\t});\n\t\t\t$(input).on(\"click\", function (e) {\n\t\t\t\tcaret(input, findCaretPos(e.clientX));\n\t\t\t\treturn EventHandlers.clickEvent.call(this, [e]);\n\t\t\t});\n\t\t\t$(input).on(\"keydown\", function (e) {\n\t\t\t\tif (!e.shiftKey && opts.insertMode !== false) {\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\trenderColorMask(input);\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfunction renderColorMask(input, buffer, caretPos) {\n\t\t\tfunction handleStatic() {\n\t\t\t\tif (!isStatic && (test.fn === null || testPos.input === undefined)) {\n\t\t\t\t\tisStatic = true;\n\t\t\t\t\tmaskTemplate += \"<span class='im-static''>\"\n\t\t\t\t} else if (isStatic && (test.fn !== null && testPos.input !== undefined)) {\n\t\t\t\t\tisStatic = false;\n\t\t\t\t\tmaskTemplate += \"</span>\"\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (colorMask !== undefined) {\n\t\t\t\tbuffer = buffer || getBuffer();\n\t\t\t\tif (caretPos === undefined) {\n\t\t\t\t\tcaretPos = caret(input);\n\t\t\t\t} else if (caretPos.begin === undefined) {\n\t\t\t\t\tcaretPos = {begin: caretPos, end: caretPos};\n\t\t\t\t}\n\n\t\t\t\tvar maskTemplate = \"\", isStatic = false;\n\t\t\t\tif (buffer != \"\") {\n\t\t\t\t\tvar ndxIntlzr, pos = 0,\n\t\t\t\t\t\ttest, testPos, lvp = getLastValidPosition();\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (pos === caretPos.begin && document.activeElement === input) {\n\t\t\t\t\t\t\tmaskTemplate += \"<span class='im-caret' style='border-right-width: 1px;border-right-style: solid;'></span>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (getMaskSet().validPositions[pos]) {\n\t\t\t\t\t\t\ttestPos = getMaskSet().validPositions[pos];\n\t\t\t\t\t\t\ttest = testPos.match;\n\t\t\t\t\t\t\tndxIntlzr = testPos.locator.slice();\n\t\t\t\t\t\t\thandleStatic();\n\t\t\t\t\t\t\tmaskTemplate += testPos.input;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttestPos = getTestTemplate(pos, ndxIntlzr, pos - 1);\n\t\t\t\t\t\t\ttest = testPos.match;\n\t\t\t\t\t\t\tndxIntlzr = testPos.locator.slice();\n\t\t\t\t\t\t\tif (opts.jitMasking === false || pos < lvp || (typeof opts.jitMasking === \"number\" && isFinite(opts.jitMasking) && opts.jitMasking > pos)) {\n\t\t\t\t\t\t\t\thandleStatic();\n\t\t\t\t\t\t\t\tmaskTemplate += getPlaceholder(pos, test);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t} while ((maxLength === undefined || pos < maxLength) && (test.fn !== null || test.def !== \"\") || lvp > pos);\n\t\t\t\t}\n\t\t\t\tcolorMask.innerHTML = maskTemplate;\n\t\t\t}\n\t\t}\n\n\t\tfunction mask(elem) {\n\t\t\tfunction isElementTypeSupported(input, opts) {\n\t\t\t\tfunction patchValueProperty(npt) {\n\t\t\t\t\tvar valueGet;\n\t\t\t\t\tvar valueSet;\n\n\t\t\t\t\tfunction patchValhook(type) {\n\t\t\t\t\t\tif ($.valHooks && ($.valHooks[type] === undefined || $.valHooks[type].inputmaskpatch !== true)) {\n\t\t\t\t\t\t\tvar valhookGet = $.valHooks[type] && $.valHooks[type].get ? $.valHooks[type].get : function (elem) {\n\t\t\t\t\t\t\t\treturn elem.value;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tvar valhookSet = $.valHooks[type] && $.valHooks[type].set ? $.valHooks[type].set : function (elem, value) {\n\t\t\t\t\t\t\t\telem.value = value;\n\t\t\t\t\t\t\t\treturn elem;\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t$.valHooks[type] = {\n\t\t\t\t\t\t\t\tget: function (elem) {\n\t\t\t\t\t\t\t\t\tif (elem.inputmask) {\n\t\t\t\t\t\t\t\t\t\tif (elem.inputmask.opts.autoUnmask) {\n\t\t\t\t\t\t\t\t\t\t\treturn elem.inputmask.unmaskedvalue();\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar result = valhookGet(elem);\n\t\t\t\t\t\t\t\t\t\t\treturn getLastValidPosition(undefined, undefined, elem.inputmask.maskset.validPositions) !== -1 || opts.nullable !== true ? result : \"\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else return valhookGet(elem);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tset: function (elem, value) {\n\t\t\t\t\t\t\t\t\tvar $elem = $(elem),\n\t\t\t\t\t\t\t\t\t\tresult;\n\t\t\t\t\t\t\t\t\tresult = valhookSet(elem, value);\n\t\t\t\t\t\t\t\t\tif (elem.inputmask) {\n\t\t\t\t\t\t\t\t\t\t$elem.trigger(\"setvalue\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tinputmaskpatch: true\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction getter() {\n\t\t\t\t\t\tif (this.inputmask) {\n\t\t\t\t\t\t\treturn this.inputmask.opts.autoUnmask ?\n\t\t\t\t\t\t\t\tthis.inputmask.unmaskedvalue() :\n\t\t\t\t\t\t\t\t(getLastValidPosition() !== -1 || opts.nullable !== true ?\n\t\t\t\t\t\t\t\t\t(document.activeElement === this && opts.clearMaskOnLostFocus ?\n\t\t\t\t\t\t\t\t\t\t(isRTL ? clearOptionalTail(getBuffer().slice()).reverse() : clearOptionalTail(getBuffer().slice())).join(\"\") :\n\t\t\t\t\t\t\t\t\t\tvalueGet.call(this)) :\n\t\t\t\t\t\t\t\t\t\"\");\n\t\t\t\t\t\t} else return valueGet.call(this);\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction setter(value) {\n\t\t\t\t\t\tvalueSet.call(this, value);\n\t\t\t\t\t\tif (this.inputmask) {\n\t\t\t\t\t\t\t$(this).trigger(\"setvalue\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction installNativeValueSetFallback(npt) {\n\t\t\t\t\t\tEventRuler.on(npt, \"mouseenter\", function (event) {\n\t\t\t\t\t\t\tvar $input = $(this),\n\t\t\t\t\t\t\t\tinput = this,\n\t\t\t\t\t\t\t\tvalue = input.inputmask._valueGet();\n\t\t\t\t\t\t\tif (value !== getBuffer().join(\"\") /*&& getLastValidPosition() > 0*/) {\n\t\t\t\t\t\t\t\t$input.trigger(\"setvalue\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!npt.inputmask.__valueGet) {\n\t\t\t\t\t\tif (opts.noValuePatching !== true) {\n\t\t\t\t\t\t\tif (Object.getOwnPropertyDescriptor) {\n\t\t\t\t\t\t\t\tif (typeof Object.getPrototypeOf !== \"function\") {\n\t\t\t\t\t\t\t\t\tObject.getPrototypeOf = typeof \"test\".__proto__ === \"object\" ? function (object) {\n\t\t\t\t\t\t\t\t\t\treturn object.__proto__;\n\t\t\t\t\t\t\t\t\t} : function (object) {\n\t\t\t\t\t\t\t\t\t\treturn object.constructor.prototype;\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar valueProperty = Object.getPrototypeOf ? Object.getOwnPropertyDescriptor(Object.getPrototypeOf(npt), \"value\") : undefined;\n\t\t\t\t\t\t\t\tif (valueProperty && valueProperty.get && valueProperty.set) {\n\t\t\t\t\t\t\t\t\tvalueGet = valueProperty.get;\n\t\t\t\t\t\t\t\t\tvalueSet = valueProperty.set;\n\t\t\t\t\t\t\t\t\tObject.defineProperty(npt, \"value\", {\n\t\t\t\t\t\t\t\t\t\tget: getter,\n\t\t\t\t\t\t\t\t\t\tset: setter,\n\t\t\t\t\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else if (npt.tagName !== \"INPUT\") {\n\t\t\t\t\t\t\t\t\tvalueGet = function () {\n\t\t\t\t\t\t\t\t\t\treturn this.textContent;\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tvalueSet = function (value) {\n\t\t\t\t\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tObject.defineProperty(npt, \"value\", {\n\t\t\t\t\t\t\t\t\t\tget: getter,\n\t\t\t\t\t\t\t\t\t\tset: setter,\n\t\t\t\t\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (document.__lookupGetter__ && npt.__lookupGetter__(\"value\")) {\n\t\t\t\t\t\t\t\tvalueGet = npt.__lookupGetter__(\"value\");\n\t\t\t\t\t\t\t\tvalueSet = npt.__lookupSetter__(\"value\");\n\n\t\t\t\t\t\t\t\tnpt.__defineGetter__(\"value\", getter);\n\t\t\t\t\t\t\t\tnpt.__defineSetter__(\"value\", setter);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnpt.inputmask.__valueGet = valueGet; //store native property getter\n\t\t\t\t\t\t\tnpt.inputmask.__valueSet = valueSet; //store native property setter\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnpt.inputmask._valueGet = function (overruleRTL) {\n\t\t\t\t\t\t\treturn isRTL && overruleRTL !== true ? valueGet.call(this.el).split(\"\").reverse().join(\"\") : valueGet.call(this.el);\n\t\t\t\t\t\t};\n\t\t\t\t\t\tnpt.inputmask._valueSet = function (value, overruleRTL) { //null check is needed for IE8 => otherwise converts to \"null\"\n\t\t\t\t\t\t\tvalueSet.call(this.el, (value === null || value === undefined) ? \"\" : ((overruleRTL !== true && isRTL) ? value.split(\"\").reverse().join(\"\") : value));\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (valueGet === undefined) { //jquery.val fallback\n\t\t\t\t\t\t\tvalueGet = function () {\n\t\t\t\t\t\t\t\treturn this.value;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tvalueSet = function (value) {\n\t\t\t\t\t\t\t\tthis.value = value;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tpatchValhook(npt.type);\n\t\t\t\t\t\t\tinstallNativeValueSetFallback(npt);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar elementType = input.getAttribute(\"type\");\n\t\t\t\tvar isSupported = (input.tagName === \"INPUT\" && $.inArray(elementType, opts.supportsInputType) !== -1) || input.isContentEditable || input.tagName === \"TEXTAREA\";\n\t\t\t\tif (!isSupported) {\n\t\t\t\t\tif (input.tagName === \"INPUT\") {\n\t\t\t\t\t\tvar el = document.createElement(\"input\");\n\t\t\t\t\t\tel.setAttribute(\"type\", elementType);\n\t\t\t\t\t\tisSupported = el.type === \"text\"; //apply mask only if the type is not natively supported\n\t\t\t\t\t\tel = null;\n\t\t\t\t\t} else isSupported = \"partial\";\n\t\t\t\t}\n\t\t\t\tif (isSupported !== false) {\n\t\t\t\t\tpatchValueProperty(input);\n\t\t\t\t}\n\t\t\t\treturn isSupported;\n\t\t\t}\n\n\t\t\t//unbind all events - to make sure that no other mask will interfere when re-masking\n\t\t\tEventRuler.off(el);\n\t\t\tvar isSupported = isElementTypeSupported(elem, opts);\n\t\t\tif (isSupported !== false) {\n\t\t\t\tel = elem;\n\t\t\t\t$el = $(el);\n\n\t\t\t\tif (el.dir === \"rtl\" || opts.rightAlign) {\n\t\t\t\t\tel.style.textAlign = \"right\";\n\t\t\t\t}\n\n\t\t\t\tif (el.dir === \"rtl\" || opts.numericInput) {\n\t\t\t\t\tel.dir = \"ltr\";\n\t\t\t\t\tel.removeAttribute(\"dir\");\n\t\t\t\t\tel.inputmask.isRTL = true;\n\t\t\t\t\tisRTL = true;\n\t\t\t\t}\n\n\t\t\t\tif (opts.colorMask === true) {\n\t\t\t\t\tinitializeColorMask(el);\n\t\t\t\t}\n\n\t\t\t\tif (android) {\n\t\t\t\t\tif (el.hasOwnProperty(\"inputmode\")) {\n\t\t\t\t\t\tel.inputmode = opts.inputmode;\n\t\t\t\t\t\tel.setAttribute(\"inputmode\", opts.inputmode);\n\t\t\t\t\t}\n\t\t\t\t\tif (opts.androidHack === \"rtfm\") {\n\t\t\t\t\t\tif (opts.colorMask !== true) {\n\t\t\t\t\t\t\tinitializeColorMask(el);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tel.type = \"password\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isSupported === true) {\n\t\t\t\t\t//bind events\n\t\t\t\t\tEventRuler.on(el, \"submit\", EventHandlers.submitEvent);\n\t\t\t\t\tEventRuler.on(el, \"reset\", EventHandlers.resetEvent);\n\n\t\t\t\t\tEventRuler.on(el, \"mouseenter\", EventHandlers.mouseenterEvent);\n\t\t\t\t\tEventRuler.on(el, \"blur\", EventHandlers.blurEvent);\n\t\t\t\t\tEventRuler.on(el, \"focus\", EventHandlers.focusEvent);\n\t\t\t\t\tEventRuler.on(el, \"mouseleave\", EventHandlers.mouseleaveEvent);\n\t\t\t\t\tif (opts.colorMask !== true)\n\t\t\t\t\t\tEventRuler.on(el, \"click\", EventHandlers.clickEvent);\n\t\t\t\t\tEventRuler.on(el, \"dblclick\", EventHandlers.dblclickEvent);\n\t\t\t\t\tEventRuler.on(el, \"paste\", EventHandlers.pasteEvent);\n\t\t\t\t\tEventRuler.on(el, \"dragdrop\", EventHandlers.pasteEvent);\n\t\t\t\t\tEventRuler.on(el, \"drop\", EventHandlers.pasteEvent);\n\t\t\t\t\tEventRuler.on(el, \"cut\", EventHandlers.cutEvent);\n\t\t\t\t\tEventRuler.on(el, \"complete\", opts.oncomplete);\n\t\t\t\t\tEventRuler.on(el, \"incomplete\", opts.onincomplete);\n\t\t\t\t\tEventRuler.on(el, \"cleared\", opts.oncleared);\n\t\t\t\t\tif (!android || opts.inputEventOnly !== true) {\n\t\t\t\t\t\tEventRuler.on(el, \"keydown\", EventHandlers.keydownEvent);\n\t\t\t\t\t\tEventRuler.on(el, \"keypress\", EventHandlers.keypressEvent);\n\t\t\t\t\t}\n\t\t\t\t\tEventRuler.on(el, \"compositionstart\", $.noop);\n\t\t\t\t\tEventRuler.on(el, \"compositionupdate\", $.noop);\n\t\t\t\t\tEventRuler.on(el, \"compositionend\", $.noop);\n\t\t\t\t\tEventRuler.on(el, \"keyup\", $.noop);\n\t\t\t\t\tEventRuler.on(el, \"input\", EventHandlers.inputFallBackEvent);\n\t\t\t\t\tEventRuler.on(el, \"beforeinput\", $.noop); //https://github.com/w3c/input-events - to implement\n\t\t\t\t}\n\t\t\t\tEventRuler.on(el, \"setvalue\", EventHandlers.setValueEvent);\n\n\t\t\t\t//apply mask\n\t\t\t\tgetBufferTemplate(); //initialize the buffer and getmasklength\n\t\t\t\tif (el.inputmask._valueGet() !== \"\" || opts.clearMaskOnLostFocus === false || document.activeElement === el) {\n\t\t\t\t\tvar initialValue = $.isFunction(opts.onBeforeMask) ? (opts.onBeforeMask(el.inputmask._valueGet(), opts) || el.inputmask._valueGet()) : el.inputmask._valueGet();\n\t\t\t\t\tcheckVal(el, true, false, initialValue.split(\"\"));\n\t\t\t\t\tvar buffer = getBuffer().slice();\n\t\t\t\t\tundoValue = buffer.join(\"\");\n\t\t\t\t\t// Wrap document.activeElement in a try/catch block since IE9 throw \"Unspecified error\" if document.activeElement is undefined when we are in an IFrame.\n\t\t\t\t\tif (isComplete(buffer) === false) {\n\t\t\t\t\t\tif (opts.clearIncomplete) {\n\t\t\t\t\t\t\tresetMaskSet();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (opts.clearMaskOnLostFocus && document.activeElement !== el) {\n\t\t\t\t\t\tif (getLastValidPosition() === -1) {\n\t\t\t\t\t\t\tbuffer = [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclearOptionalTail(buffer);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\twriteBuffer(el, buffer);\n\t\t\t\t\tif (document.activeElement === el) { //position the caret when in focus\n\t\t\t\t\t\tcaret(el, seekNext(getLastValidPosition()));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n//action object\n\t\tvar valueBuffer;\n\t\tif (actionObj !== undefined) {\n\t\t\tswitch (actionObj.action) {\n\t\t\t\tcase \"isComplete\":\n\t\t\t\t\tel = actionObj.el;\n\t\t\t\t\treturn isComplete(getBuffer());\n\t\t\t\tcase \"unmaskedvalue\":\n\t\t\t\t\tif (el === undefined || actionObj.value !== undefined) {\n\t\t\t\t\t\tvalueBuffer = actionObj.value;\n\t\t\t\t\t\tvalueBuffer = ($.isFunction(opts.onBeforeMask) ? (opts.onBeforeMask(valueBuffer, opts) || valueBuffer) : valueBuffer).split(\"\");\n\t\t\t\t\t\tcheckVal(undefined, false, false, isRTL ? valueBuffer.reverse() : valueBuffer);\n\t\t\t\t\t\tif ($.isFunction(opts.onBeforeWrite)) opts.onBeforeWrite(undefined, getBuffer(), 0, opts);\n\t\t\t\t\t}\n\t\t\t\t\treturn unmaskedvalue(el);\n\t\t\t\tcase \"mask\":\n\t\t\t\t\tmask(el);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"format\":\n\t\t\t\t\tvalueBuffer = ($.isFunction(opts.onBeforeMask) ? (opts.onBeforeMask(actionObj.value, opts) || actionObj.value) : actionObj.value).split(\"\");\n\t\t\t\t\tcheckVal(undefined, false, false, isRTL ? valueBuffer.reverse() : valueBuffer);\n\t\t\t\t\tif ($.isFunction(opts.onBeforeWrite)) opts.onBeforeWrite(undefined, getBuffer(), 0, opts);\n\n\t\t\t\t\tif (actionObj.metadata) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tvalue: isRTL ? getBuffer().slice().reverse().join(\"\") : getBuffer().join(\"\"),\n\t\t\t\t\t\t\tmetadata: maskScope.call(this, {\n\t\t\t\t\t\t\t\t\"action\": \"getmetadata\"\n\t\t\t\t\t\t\t}, maskset, opts)\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn isRTL ? getBuffer().slice().reverse().join(\"\") : getBuffer().join(\"\");\n\t\t\t\tcase \"isValid\":\n\t\t\t\t\tif (actionObj.value) {\n\t\t\t\t\t\tvalueBuffer = actionObj.value.split(\"\");\n\t\t\t\t\t\tcheckVal(undefined, false, true, isRTL ? valueBuffer.reverse() : valueBuffer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactionObj.value = getBuffer().join(\"\");\n\t\t\t\t\t}\n\t\t\t\t\tvar buffer = getBuffer();\n\t\t\t\t\tvar rl = determineLastRequiredPosition(),\n\t\t\t\t\t\tlmib = buffer.length - 1;\n\t\t\t\t\tfor (; lmib > rl; lmib--) {\n\t\t\t\t\t\tif (isMask(lmib)) break;\n\t\t\t\t\t}\n\t\t\t\t\tbuffer.splice(rl, lmib + 1 - rl);\n\n\t\t\t\t\treturn isComplete(buffer) && actionObj.value === getBuffer().join(\"\");\n\t\t\t\tcase \"getemptymask\":\n\t\t\t\t\treturn getBufferTemplate().join(\"\");\n\t\t\t\tcase \"remove\":\n\t\t\t\t\tif (el) {\n\t\t\t\t\t\t$el = $(el);\n\t\t\t\t\t\t//writeout the unmaskedvalue\n\t\t\t\t\t\tel.inputmask._valueSet(unmaskedvalue(el));\n\t\t\t\t\t\t//unbind all events\n\t\t\t\t\t\tEventRuler.off(el);\n\t\t\t\t\t\t//restore the value property\n\t\t\t\t\t\tvar valueProperty;\n\t\t\t\t\t\tif (Object.getOwnPropertyDescriptor && Object.getPrototypeOf) {\n\t\t\t\t\t\t\tvalueProperty = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(el), \"value\");\n\t\t\t\t\t\t\tif (valueProperty) {\n\t\t\t\t\t\t\t\tif (el.inputmask.__valueGet) {\n\t\t\t\t\t\t\t\t\tObject.defineProperty(el, \"value\", {\n\t\t\t\t\t\t\t\t\t\tget: el.inputmask.__valueGet,\n\t\t\t\t\t\t\t\t\t\tset: el.inputmask.__valueSet,\n\t\t\t\t\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (document.__lookupGetter__ && el.__lookupGetter__(\"value\")) {\n\t\t\t\t\t\t\tif (el.inputmask.__valueGet) {\n\t\t\t\t\t\t\t\tel.__defineGetter__(\"value\", el.inputmask.__valueGet);\n\t\t\t\t\t\t\t\tel.__defineSetter__(\"value\", el.inputmask.__valueSet);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//clear data\n\t\t\t\t\t\tel.inputmask = undefined;\n\t\t\t\t\t}\n\t\t\t\t\treturn el;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"getmetadata\":\n\t\t\t\t\tif ($.isArray(maskset.metadata)) {\n\t\t\t\t\t\tvar maskTarget = getMaskTemplate(true, 0, false).join(\"\");\n\t\t\t\t\t\t$.each(maskset.metadata, function (ndx, mtdt) {\n\t\t\t\t\t\t\tif (mtdt.mask === maskTarget) {\n\t\t\t\t\t\t\t\tmaskTarget = mtdt;\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn maskTarget;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn maskset.metadata;\n\t\t\t}\n\t\t}\n\t}\n\n//make inputmask available\n\twindow.Inputmask = Inputmask;\n\treturn Inputmask;\n}));\n","/*\n * Input Mask plugin for jquery\n * http://github.com/RobinHerbots/jquery.inputmask\n * Copyright (c) 2010 -\tRobin Herbots\n * Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)\n * Version: 0.0.0-dev\n */\n\n(function (factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine([\"jquery\", \"inputmask\"], factory);\n\t} else if (typeof exports === \"object\") {\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"./inputmask\"));\n\t} else {\n\t\tfactory(jQuery, window.Inputmask);\n\t}\n}\n(function ($, Inputmask) {\n\tif ($.fn.inputmask === undefined) {\n\t\t//jquery plugin\n\t\t$.fn.inputmask = function (fn, options) {\n\t\t\tvar nptmask, input = this[0];\n\t\t\tif (options === undefined) options = {};\n\t\t\tif (typeof fn === \"string\") {\n\t\t\t\tswitch (fn) {\n\t\t\t\t\tcase \"unmaskedvalue\":\n\t\t\t\t\t\treturn input && input.inputmask ? input.inputmask.unmaskedvalue() : $(input).val();\n\t\t\t\t\tcase \"remove\":\n\t\t\t\t\t\treturn this.each(function () {\n\t\t\t\t\t\t\tif (this.inputmask) this.inputmask.remove();\n\t\t\t\t\t\t});\n\t\t\t\t\tcase \"getemptymask\":\n\t\t\t\t\t\treturn input && input.inputmask ? input.inputmask.getemptymask() : \"\";\n\t\t\t\t\tcase \"hasMaskedValue\": //check wheter the returned value is masked or not; currently only works reliable when using jquery.val fn to retrieve the value\n\t\t\t\t\t\treturn input && input.inputmask ? input.inputmask.hasMaskedValue() : false;\n\t\t\t\t\tcase \"isComplete\":\n\t\t\t\t\t\treturn input && input.inputmask ? input.inputmask.isComplete() : true;\n\t\t\t\t\tcase \"getmetadata\": //return mask metadata if exists\n\t\t\t\t\t\treturn input && input.inputmask ? input.inputmask.getmetadata() : undefined;\n\t\t\t\t\tcase \"setvalue\":\n\t\t\t\t\t\t$(input).val(options);\n\t\t\t\t\t\tif (input && input.inputmask === undefined) { //reactivate jquery.clone\n\t\t\t\t\t\t\t$(input).triggerHandler(\"setvalue\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"option\":\n\t\t\t\t\t\tif (typeof options === \"string\") {\n\t\t\t\t\t\t\tif (input && input.inputmask !== undefined) {\n\t\t\t\t\t\t\t\treturn input.inputmask.option(options);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn this.each(function () {\n\t\t\t\t\t\t\t\tif (this.inputmask !== undefined) {\n\t\t\t\t\t\t\t\t\treturn this.inputmask.option(options);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\toptions.alias = fn;\n\t\t\t\t\t\tnptmask = new Inputmask(options);\n\t\t\t\t\t\treturn this.each(function () {\n\t\t\t\t\t\t\tnptmask.mask(this);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (typeof fn == \"object\") {\n\t\t\t\tnptmask = new Inputmask(fn);\n\t\t\t\tif (fn.mask === undefined && fn.alias === undefined) {\n\t\t\t\t\treturn this.each(function () {\n\t\t\t\t\t\tif (this.inputmask !== undefined) {\n\t\t\t\t\t\t\treturn this.inputmask.option(fn);\n\t\t\t\t\t\t} else nptmask.mask(this);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn this.each(function () {\n\t\t\t\t\t\tnptmask.mask(this);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (fn === undefined) {\n\t\t\t\t//look for data-inputmask atributes\n\t\t\t\treturn this.each(function () {\n\t\t\t\t\tnptmask = new Inputmask(options);\n\t\t\t\t\tnptmask.mask(this);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\treturn $.fn.inputmask;\n}));\n","(function ($) {\n    \"use strict\";\n    if (!$.browser) {\n        $.browser = {};\n        $.browser.mozilla = /mozilla/.test(navigator.userAgent.toLowerCase()) && !/webkit/.test(navigator.userAgent.toLowerCase());\n        $.browser.webkit = /webkit/.test(navigator.userAgent.toLowerCase());\n        $.browser.opera = /opera/.test(navigator.userAgent.toLowerCase());\n        $.browser.msie = /msie/.test(navigator.userAgent.toLowerCase());\n    }\n\n    var methods = {\n        destroy : function () {\n            $(this).unbind(\".maskMoney\");\n\n            if ($.browser.msie) {\n                this.onpaste = null;\n            }\n            return this;\n        },\n\n        mask : function (value) {\n            return this.each(function () {\n                var $this = $(this);\n                if (typeof value === \"number\") {\n                    $this.val(value);\n                }\n                return $this.trigger(\"mask\");\n            });\n        },\n\n        unmasked : function () {\n            return this.map(function () {\n                var value = ($(this).val() || \"0\"),\n                    isNegative = value.indexOf(\"-\") !== -1,\n                    decimalPart;\n                // get the last position of the array that is a number(coercion makes \"\" to be evaluated as false)\n                $(value.split(/\\D/).reverse()).each(function (index, element) {\n                    if(element) {\n                        decimalPart = element;\n                        return false;\n                   }\n                });\n                value = value.replace(/\\D/g, \"\");\n                value = value.replace(new RegExp(decimalPart + \"$\"), \".\" + decimalPart);\n                if (isNegative) {\n                    value = \"-\" + value;\n                }\n                return parseFloat(value);\n            });\n        },\n\n        init : function (parameters) {\n            parameters = $.extend({\n                prefix: \"\",\n                suffix: \"\",\n                affixesStay: true,\n                thousands: \",\",\n                decimal: \".\",\n                precision: 2,\n                allowZero: false,\n                allowNegative: false\n            }, parameters);\n\n            return this.each(function () {\n                var $input = $(this), settings,\n                    onFocusValue;\n\n                // data-* api\n                settings = $.extend({}, parameters);\n                settings = $.extend(settings, $input.data());\n\n                function getInputSelection() {\n                    var el = $input.get(0),\n                        start = 0,\n                        end = 0,\n                        normalizedValue,\n                        range,\n                        textInputRange,\n                        len,\n                        endRange;\n\n                    if (typeof el.selectionStart === \"number\" && typeof el.selectionEnd === \"number\") {\n                        start = el.selectionStart;\n                        end = el.selectionEnd;\n                    } else {\n                        range = document.selection.createRange();\n\n                        if (range && range.parentElement() === el) {\n                            len = el.value.length;\n                            normalizedValue = el.value.replace(/\\r\\n/g, \"\\n\");\n\n                            // Create a working TextRange that lives only in the input\n                            textInputRange = el.createTextRange();\n                            textInputRange.moveToBookmark(range.getBookmark());\n\n                            // Check if the start and end of the selection are at the very end\n                            // of the input, since moveStart/moveEnd doesn't return what we want\n                            // in those cases\n                            endRange = el.createTextRange();\n                            endRange.collapse(false);\n\n                            if (textInputRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\n                                start = end = len;\n                            } else {\n                                start = -textInputRange.moveStart(\"character\", -len);\n                                start += normalizedValue.slice(0, start).split(\"\\n\").length - 1;\n\n                                if (textInputRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\n                                    end = len;\n                                } else {\n                                    end = -textInputRange.moveEnd(\"character\", -len);\n                                    end += normalizedValue.slice(0, end).split(\"\\n\").length - 1;\n                                }\n                            }\n                        }\n                    }\n\n                    return {\n                        start: start,\n                        end: end\n                    };\n                } // getInputSelection\n\n                function canInputMoreNumbers() {\n                    var haventReachedMaxLength = !($input.val().length >= $input.attr(\"maxlength\") && $input.attr(\"maxlength\") >= 0),\n                        selection = getInputSelection(),\n                        start = selection.start,\n                        end = selection.end,\n                        haveNumberSelected = (selection.start !== selection.end && $input.val().substring(start, end).match(/\\d/)) ? true : false,\n                        startWithZero = ($input.val().substring(0, 1) === \"0\");\n                    return haventReachedMaxLength || haveNumberSelected || startWithZero;\n                }\n\n                function setCursorPosition(pos) {\n                    $input.each(function (index, elem) {\n                        if (elem.setSelectionRange) {\n                            elem.focus();\n                            elem.setSelectionRange(pos, pos);\n                        } else if (elem.createTextRange) {\n                            var range = elem.createTextRange();\n                            range.collapse(true);\n                            range.moveEnd(\"character\", pos);\n                            range.moveStart(\"character\", pos);\n                            range.select();\n                        }\n                    });\n                }\n\n                function setSymbol(value) {\n                    var operator = \"\";\n                    if (value.indexOf(\"-\") > -1) {\n                        value = value.replace(\"-\", \"\");\n                        operator = \"-\";\n                    }\n                    return operator + settings.prefix + value + settings.suffix;\n                }\n\n                function maskValue(value) {\n                    var negative = (value.indexOf(\"-\") > -1 && settings.allowNegative) ? \"-\" : \"\",\n                        onlyNumbers = value.replace(/[^0-9]/g, \"\"),\n                        integerPart = onlyNumbers.slice(0, onlyNumbers.length - settings.precision),\n                        newValue,\n                        decimalPart,\n                        leadingZeros;\n\n                    // remove initial zeros\n                    integerPart = integerPart.replace(/^0*/g, \"\");\n                    // put settings.thousands every 3 chars\n                    integerPart = integerPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, settings.thousands);\n                    if (integerPart === \"\") {\n                        integerPart = \"0\";\n                    }\n                    newValue = negative + integerPart;\n\n                    if (settings.precision > 0) {\n                        decimalPart = onlyNumbers.slice(onlyNumbers.length - settings.precision);\n                        leadingZeros = new Array((settings.precision + 1) - decimalPart.length).join(0);\n                        newValue += settings.decimal + leadingZeros + decimalPart;\n                    }\n                    return setSymbol(newValue);\n                }\n\n\n                function maskAndPosition(startPos) {\n                    var originalLen = $input.val().length,\n                        newLen;\n                    $input.val(maskValue($input.val()));\n                    newLen = $input.val().length;\n                    startPos = startPos - (originalLen - newLen);\n                    setCursorPosition(startPos);\n                }\n\n                function mask() {\n                    var value = $input.val();\n                    if (settings.precision > 0 && value.indexOf(settings.decimal) < 0) {\n                        value += settings.decimal + new Array(settings.precision+1).join(0);\n                    }\n                    $input.val(maskValue(value));\n                }\n\n                function changeSign() {\n                    var inputValue = $input.val();\n                    if (settings.allowNegative) {\n                        if (inputValue !== \"\" && inputValue.charAt(0) === \"-\") {\n                            return inputValue.replace(\"-\", \"\");\n                        } else {\n                            return \"-\" + inputValue;\n                        }\n                    } else {\n                        return inputValue;\n                    }\n                }\n\n                function preventDefault(e) {\n                    if (e.preventDefault) { //standard browsers\n                        e.preventDefault();\n                    } else { // old internet explorer\n                        e.returnValue = false;\n                    }\n                }\n\n                function keypressEvent(e) {\n                    e = e || window.event;\n                    var key = e.which || e.charCode || e.keyCode,\n                        keyPressedChar,\n                        selection,\n                        startPos,\n                        endPos,\n                        value;\n                    //added to handle an IE \"special\" event\n                    if (key === undefined) {\n                        return false;\n                    }\n\n                    // any key except the numbers 0-9\n                    if (key < 48 || key > 57) {\n                        // -(minus) key\n                        if (key === 45) {\n                            $input.val(changeSign());\n                            return false;\n                        // +(plus) key\n                        } else if (key === 43) {\n                            $input.val($input.val().replace(\"-\", \"\"));\n                            return false;\n                        // enter key or tab key\n                        } else if (key === 13 || key === 9) {\n                            return true;\n                        } else if ($.browser.mozilla && (key === 37 || key === 39) && e.charCode === 0) {\n                            // needed for left arrow key or right arrow key with firefox\n                            // the charCode part is to avoid allowing \"%\"(e.charCode 0, e.keyCode 37)\n                            return true;\n                        } else { // any other key with keycode less than 48 and greater than 57\n                            preventDefault(e);\n                            return true;\n                        }\n                    } else if (!canInputMoreNumbers()) {\n                        return false;\n                    } else {\n                        preventDefault(e);\n\n                        keyPressedChar = String.fromCharCode(key);\n                        selection = getInputSelection();\n                        startPos = selection.start;\n                        endPos = selection.end;\n                        value = $input.val();\n                        $input.val(value.substring(0, startPos) + keyPressedChar + value.substring(endPos, value.length));\n                        maskAndPosition(startPos + 1);\n                        return false;\n                    }\n                }\n\n                function keydownEvent(e) {\n                    e = e || window.event;\n                    var key = e.which || e.charCode || e.keyCode,\n                        selection,\n                        startPos,\n                        endPos,\n                        value,\n                        lastNumber;\n                    //needed to handle an IE \"special\" event\n                    if (key === undefined) {\n                        return false;\n                    }\n\n                    selection = getInputSelection();\n                    startPos = selection.start;\n                    endPos = selection.end;\n\n                    if (key === 8 || key === 46 || key === 63272) { // backspace or delete key (with special case for safari)\n                        preventDefault(e);\n\n                        value = $input.val();\n                        // not a selection\n                        if (startPos === endPos) {\n                            // backspace\n                            if (key === 8) {\n                                if (settings.suffix === \"\") {\n                                    startPos -= 1;\n                                } else {\n                                    // needed to find the position of the last number to be erased\n                                    lastNumber = value.split(\"\").reverse().join(\"\").search(/\\d/);\n                                    startPos = value.length - lastNumber - 1;\n                                    endPos = startPos + 1;\n                                }\n                            //delete\n                            } else {\n                                endPos += 1;\n                            }\n                        }\n\n                        $input.val(value.substring(0, startPos) + value.substring(endPos, value.length));\n\n                        maskAndPosition(startPos);\n                        return false;\n                    } else if (key === 9) { // tab key\n                        return true;\n                    } else { // any other key\n                        return true;\n                    }\n                }\n\n                function focusEvent() {\n                    onFocusValue = $input.val();\n                    mask();\n                    var input = $input.get(0),\n                        textRange;\n                    if (input.createTextRange) {\n                        textRange = input.createTextRange();\n                        textRange.collapse(false); // set the cursor at the end of the input\n                        textRange.select();\n                    }\n                }\n\n                function cutPasteEvent() {\n                    setTimeout(function() {\n                        mask();\n                    }, 0);\n                }\n\n                function getDefaultMask() {\n                    var n = parseFloat(\"0\") / Math.pow(10, settings.precision);\n                    return (n.toFixed(settings.precision)).replace(new RegExp(\"\\\\.\", \"g\"), settings.decimal);\n                }\n\n                function blurEvent(e) {\n                    if ($.browser.msie) {\n                        keypressEvent(e);\n                    }\n\n                    if ($input.val() === \"\" || $input.val() === setSymbol(getDefaultMask())) {\n                        if (!settings.allowZero) {\n                            $input.val(\"\");\n                        } else if (!settings.affixesStay) {\n                            $input.val(getDefaultMask());\n                        } else {\n                            $input.val(setSymbol(getDefaultMask()));\n                        }\n                    } else {\n                        if (!settings.affixesStay) {\n                            var newValue = $input.val().replace(settings.prefix, \"\").replace(settings.suffix, \"\");\n                            $input.val(newValue);\n                        }\n                    }\n                    if ($input.val() !== onFocusValue) {\n                        $input.change();\n                    }\n                }\n\n                function clickEvent() {\n                    var input = $input.get(0),\n                        length;\n                    if (input.setSelectionRange) {\n                        length = $input.val().length;\n                        input.setSelectionRange(length, length);\n                    } else {\n                        $input.val($input.val());\n                    }\n                }\n\n                $input.unbind(\".maskMoney\");\n                $input.bind(\"keypress.maskMoney\", keypressEvent);\n                $input.bind(\"keydown.maskMoney\", keydownEvent);\n                $input.bind(\"blur.maskMoney\", blurEvent);\n                $input.bind(\"focus.maskMoney\", focusEvent);\n                $input.bind(\"click.maskMoney\", clickEvent);\n                $input.bind(\"cut.maskMoney\", cutPasteEvent);\n                $input.bind(\"paste.maskMoney\", cutPasteEvent);\n                $input.bind(\"mask.maskMoney\", mask);\n            });\n        }\n    };\n\n    $.fn.maskMoney = function (method) {\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === \"object\" || ! method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error(\"Method \" +  method + \" does not exist on jQuery.maskMoney\");\n        }\n    };\n})(window.jQuery || window.Zepto);\n"]}